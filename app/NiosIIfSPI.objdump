
NiosIIfSPI.elf:     file format elf32-littlenios2
NiosIIfSPI.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00080244

Program Header:
    LOAD off    0x00001000 vaddr 0x00080000 paddr 0x00080000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00080020 paddr 0x00080020 align 2**12
         filesz 0x0000fc08 memsz 0x0000fc08 flags r-x
    LOAD off    0x00010c28 vaddr 0x0008fc28 paddr 0x00091714 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00013200 vaddr 0x00093200 paddr 0x00093200 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00080000  00080000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00080020  00080020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f6bc  00080244  00080244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000328  0008f900  0008f900  00010900  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0008fc28  00091714  00010c28  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00093200  00093200  00013200  2**2
                  ALLOC, SMALL_DATA
  6 .mm           00000000  00093360  00093360  00012714  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00012714  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000ef8  00000000  00000000  00012738  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00023ce4  00000000  00000000  00013630  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000915f  00000000  00000000  00037314  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b639  00000000  00000000  00040473  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000020d4  00000000  00000000  0004baac  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003922  00000000  00000000  0004db80  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017c53  00000000  00000000  000514a2  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000020  00000000  00000000  000690f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000018d8  00000000  00000000  00069118  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006da03  2**0
                  CONTENTS, READONLY
 18 .cpu          00000009  00000000  00000000  0006da06  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006da0f  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006da10  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   00000009  00000000  00000000  0006da11  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    00000009  00000000  00000000  0006da1a  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   00000009  00000000  00000000  0006da23  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000008  00000000  00000000  0006da2c  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000028  00000000  00000000  0006da34  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00080000 l    d  .entry	00000000 .entry
00080020 l    d  .exceptions	00000000 .exceptions
00080244 l    d  .text	00000000 .text
0008f900 l    d  .rodata	00000000 .rodata
0008fc28 l    d  .rwdata	00000000 .rwdata
00093200 l    d  .bss	00000000 .bss
00093360 l    d  .mm	00000000 .mm
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../software/niosf_spi_bsp//obj/HAL/src/crt0.o
0008027c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 mainSpi.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
0008f976 l     O .rodata	00000010 zeroes.4404
000825c4 l     F .text	000000bc __sbprintf
0008f986 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
000827d4 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00084304 l     F .text	00000008 __fp_unlock
00084318 l     F .text	0000019c __sinit.part.1
000844b4 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0008fc28 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0009006c l     O .rwdata	00000020 lc_ctype_charset
0009004c l     O .rwdata	00000020 lc_message_charset
0009008c l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0008f9b8 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00086dcc l     F .text	000000fc __sprint_r.part.0
0008faec l     O .rodata	00000010 blanks.4348
0008fadc l     O .rodata	00000010 zeroes.4349
00088358 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0008cb90 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0008ccb0 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0008ccdc l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0008cddc l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0008ced0 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0008cfbc l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_printf.c
00000000 l    df *ABS*	00000000 alt_putchar.c
00000000 l    df *ABS*	00000000 alt_read.c
0008d414 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00091704 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0008d674 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0008d7bc l     F .text	00000038 alt_dev_reg
00090674 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0008daa4 l     F .text	0000020c altera_avalon_jtag_uart_irq
0008dcb0 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_spi.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0008e64c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0008eb04 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0008ec44 l     F .text	00000050 alt_get_errno
0008ec94 l     F .text	000000cc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00093234 g     O .bss	00000004 alt_instruction_exception_handler
000868dc g     F .text	00000074 _mprec_log10
000869c8 g     F .text	0000008c __any_on
00088db0 g     F .text	00000054 _isatty_r
0008f9c4 g     O .rodata	00000028 __mprec_tinytens
0008d0e0 g     F .text	0000007c alt_main
00093260 g     O .bss	00000100 alt_irq
00088e04 g     F .text	00000060 _lseek_r
00091714 g       *ABS*	00000000 __flash_rwdata_start
0008b6bc g     F .text	00000088 .hidden __eqdf2
00093360 g       *ABS*	00000000 __alt_heap_start
00080374 g     F .text	0000003c printf
000896dc g     F .text	0000009c _wcrtomb_r
00086bf4 g     F .text	0000005c __sseek
00084654 g     F .text	00000010 __sinit
00089584 g     F .text	00000140 __swbuf_r
00084c60 g     F .text	0000007c _setlocale_r
000844bc g     F .text	00000068 __sfmoreglue
0008d180 g     F .text	00000024 __malloc_unlock
00088e64 g     F .text	0000015c memmove
0008463c g     F .text	00000018 _cleanup
00085a58 g     F .text	000000a8 _Balloc
0008b744 g     F .text	000000dc .hidden __gtdf2
0008f05c g     F .text	00000024 altera_nios2_gen2_irq_init
00080000 g     F .entry	0000001c __reset
00080020 g       *ABS*	00000000 __flash_exceptions_start
00088898 g     F .text	0000005c _fstat_r
00093218 g     O .bss	00000004 errno
00086b70 g     F .text	00000008 __seofread
00093220 g     O .bss	00000004 alt_argv
000996d4 g       *ABS*	00000000 _gp
000904f4 g     O .rwdata	00000180 alt_fd_list
0008f080 g     F .text	00000090 alt_find_dev
000857e8 g     F .text	00000148 memcpy
0008430c g     F .text	0000000c _cleanup_r
0008c9a8 g     F .text	000000dc .hidden __floatsidf
0008ebc8 g     F .text	0000007c alt_io_redirect
0008b820 g     F .text	000000f4 .hidden __ltdf2
0008f900 g       *ABS*	00000000 __DTOR_END__
0008f368 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00086a54 g     F .text	00000074 __fpclassifyd
00086838 g     F .text	000000a4 __ratio
0008833c g     F .text	0000001c __vfiprintf_internal
0008deb0 g     F .text	0000021c altera_avalon_jtag_uart_read
00080344 g     F .text	00000030 _printf_r
0008a46c g     F .text	00000064 .hidden __udivsi3
0008ce2c g     F .text	000000a4 isatty
0008fa14 g     O .rodata	000000c8 __mprec_tens
00084cdc g     F .text	0000000c __locale_charset
0008f2d8 g     F .text	00000090 alt_icache_flush
00093214 g     O .bss	00000004 __malloc_top_pad
000916dc g     O .rwdata	00000004 __mb_cur_max
00084d0c g     F .text	0000000c _localeconv_r
000888f4 g     F .text	000004bc __sfvwrite_r
00085e64 g     F .text	0000003c __i2b
00086ac8 g     F .text	00000054 _sbrk_r
00088fc0 g     F .text	00000060 _read_r
000916fc g     O .rwdata	00000004 alt_max_fd
0008858c g     F .text	000000f0 _fclose_r
000842d4 g     F .text	00000030 fflush
00093210 g     O .bss	00000004 __malloc_max_sbrked_mem
0008a528 g     F .text	000008ac .hidden __adddf3
000865e0 g     F .text	0000010c __b2d
00089e3c g     F .text	00000538 .hidden __umoddi3
0008d00c g     F .text	000000d4 lseek
000916d4 g     O .rwdata	00000004 _global_impure_ptr
00089020 g     F .text	00000564 _realloc_r
00093360 g       *ABS*	00000000 __bss_end
0008ea14 g     F .text	000000f0 alt_iic_isr_register
0008ef54 g     F .text	00000108 alt_tick
000898c4 g     F .text	00000578 .hidden __udivdi3
000887f4 g     F .text	00000024 _fputwc_r
0008f9ec g     O .rodata	00000028 __mprec_bigtens
00085c48 g     F .text	00000104 __s2b
0008ca84 g     F .text	000000a8 .hidden __floatunsidf
00086320 g     F .text	00000060 __mcmp
00084674 g     F .text	00000018 __fp_lock_all
0008e9c8 g     F .text	0000004c alt_ic_irq_enabled
0008eeb8 g     F .text	0000009c alt_alarm_stop
00093228 g     O .bss	00000004 alt_irq_active
000800fc g     F .exceptions	000000d4 alt_irq_handler
000904cc g     O .rwdata	00000028 alt_dev_null
0008e62c g     F .text	00000020 alt_dcache_flush_all
00085d4c g     F .text	00000068 __hi0bits
0008c928 g     F .text	00000080 .hidden __fixdfsi
00091714 g       *ABS*	00000000 __ram_rwdata_end
000916f4 g     O .rwdata	00000008 alt_dev_list
0008d6c4 g     F .text	000000f8 write
0008f4cc g     F .text	000000a0 _putc_r
0008fc28 g       *ABS*	00000000 __ram_rodata_end
0008cd2c g     F .text	000000b0 fstat
0008b820 g     F .text	000000f4 .hidden __ledf2
00086098 g     F .text	00000140 __pow5mult
00086ee0 g     F .text	0000145c ___vfiprintf_internal_r
00093208 g     O .bss	00000004 __nlocale_changed
0008a4d0 g     F .text	00000058 .hidden __umodsi3
00093360 g       *ABS*	00000000 end
0008d9dc g     F .text	000000c8 altera_avalon_jtag_uart_init
000801d0 g     F .exceptions	00000074 alt_instruction_exception_entry
0008f900 g       *ABS*	00000000 __CTOR_LIST__
000cb000 g       *ABS*	00000000 __alt_stack_pointer
0008cb2c g     F .text	00000064 .hidden __clzsi2
0008e0cc g     F .text	00000224 altera_avalon_jtag_uart_write
00084664 g     F .text	00000004 __sfp_lock_acquire
00085704 g     F .text	000000e4 memchr
000803b0 g     F .text	000021f8 ___vfprintf_internal_r
000847c8 g     F .text	00000310 _free_r
0008d1a4 g     F .text	0000022c alt_printf
00084ce8 g     F .text	00000010 __locale_mb_cur_max
0008f74c g     F .text	00000180 __call_exitprocs
00093204 g     O .bss	00000004 __mlocale_changed
000916e0 g     O .rwdata	00000004 __malloc_sbrk_base
00080244 g     F .text	0000003c _start
0009322c g     O .bss	00000004 _alt_tick_rate
000861d8 g     F .text	00000148 __lshift
0008e2f0 g     F .text	000001fc alt_avalon_spi_command
00080000 g       *ABS*	00000000 __alt_mem_mm
00093230 g     O .bss	00000004 _alt_nticks
0008d464 g     F .text	000000fc read
0008d82c g     F .text	0000004c alt_sys_init
0008f634 g     F .text	00000118 __register_exitproc
00085ea0 g     F .text	000001f8 __multiply
0008dd58 g     F .text	00000068 altera_avalon_jtag_uart_close
0008fc28 g       *ABS*	00000000 __ram_rwdata_start
0008f900 g       *ABS*	00000000 __ram_rodata_start
00093238 g     O .bss	00000028 __malloc_current_mallinfo
000866ec g     F .text	0000014c __d2b
0008d878 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0008f224 g     F .text	000000b4 alt_get_fd
00088474 g     F .text	00000054 _close_r
0008f450 g     F .text	0000007c memcmp
0008d938 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00093360 g       *ABS*	00000000 __alt_stack_base
0008d988 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00082680 g     F .text	00000154 __swsetup_r
0008add4 g     F .text	000008e8 .hidden __divdf3
00084524 g     F .text	00000118 __sfp
00086950 g     F .text	00000078 __copybits
000900c4 g     O .rwdata	00000408 __malloc_av_
00084670 g     F .text	00000004 __sinit_lock_release
0008b914 g     F .text	00000718 .hidden __muldf3
00086b1c g     F .text	00000054 __sread
0008f110 g     F .text	00000114 alt_find_file
0008e69c g     F .text	000000a4 alt_dev_llist_insert
0008d15c g     F .text	00000024 __malloc_lock
0008d5c4 g     F .text	000000b0 sbrk
00084278 g     F .text	0000005c _fflush_r
000884c8 g     F .text	000000c4 _calloc_r
00093200 g       *ABS*	00000000 __bss_start
00085930 g     F .text	00000128 memset
00080280 g     F .text	000000c4 main
00093224 g     O .bss	00000004 alt_envp
0009320c g     O .bss	00000004 __malloc_max_total_mem
0008d8d8 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
000896c4 g     F .text	00000018 __swbuf
00086c50 g     F .text	00000008 __sclose
000cb000 g       *ABS*	00000000 __alt_heap_limit
0008867c g     F .text	00000014 fclose
000829d4 g     F .text	00001688 _dtoa_r
00084ef8 g     F .text	0000080c _malloc_r
00089838 g     F .text	00000030 __ascii_wctomb
00091700 g     O .rwdata	00000004 alt_errno
00084ad8 g     F .text	000000c4 _fwalk
0008f56c g     F .text	000000c8 putc
0008a374 g     F .text	00000084 .hidden __divsi3
000846a4 g     F .text	00000124 _malloc_trim_r
0008f900 g       *ABS*	00000000 __CTOR_END__
00086c58 g     F .text	000000dc strcmp
0008f900 g       *ABS*	00000000 __flash_rodata_start
0008f900 g       *ABS*	00000000 __DTOR_LIST__
0008b6bc g     F .text	00000088 .hidden __nedf2
0008d7f4 g     F .text	00000038 alt_irq_init
0008d560 g     F .text	00000064 alt_release_fd
0008fafc g     O .rodata	00000100 .hidden __clz_tab
00093200 g     O .bss	00000004 _PathLocale
0008f404 g     F .text	00000014 atexit
00088414 g     F .text	00000060 _write_r
00084d18 g     F .text	00000018 setlocale
000916d8 g     O .rwdata	00000004 _impure_ptr
0009321c g     O .bss	00000004 alt_argc
0008405c g     F .text	0000021c __sflush_r
0008e7a0 g     F .text	00000060 _do_dtors
00084d04 g     F .text	00000008 __locale_cjk_lang
00080020 g       .exceptions	00000000 alt_irq_entry
0008657c g     F .text	00000064 __ulp
0008468c g     F .text	00000018 __fp_unlock_all
000916ec g     O .rwdata	00000008 alt_fs_list
00080020 g       *ABS*	00000000 __ram_exceptions_start
00084d30 g     F .text	0000000c localeconv
0008e834 g     F .text	00000050 alt_ic_isr_register
00091714 g       *ABS*	00000000 _edata
00093360 g       *ABS*	00000000 _end
00088690 g     F .text	00000164 __fputwc
00080244 g       *ABS*	00000000 __ram_exceptions_end
0008ddc0 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0008e924 g     F .text	000000a4 alt_ic_irq_disable
00086b78 g     F .text	0000007c __swrite
000916e4 g     O .rwdata	00000004 __malloc_trim_threshold
00084cf8 g     F .text	0000000c __locale_msgcharset
0008f418 g     F .text	00000038 exit
00084b9c g     F .text	000000c4 _fwalk_reent
00086380 g     F .text	000001fc __mdiff
0008a3f8 g     F .text	00000074 .hidden __modsi3
000cb000 g       *ABS*	00000000 __alt_data_end
00080020 g     F .exceptions	00000000 alt_exception
00084668 g     F .text	00000004 __sfp_lock_release
0008f8cc g     F .text	00000034 _exit
0008e4ec g     F .text	00000140 alt_alarm_start
00084d3c g     F .text	000001bc __smakebuf_r
00086d34 g     F .text	00000098 strlen
0008ed60 g     F .text	00000158 open
0008b744 g     F .text	000000dc .hidden __gedf2
0008d3d0 g     F .text	00000044 alt_putchar
000916e8 g     O .rwdata	00000004 __wctomb
00086ec8 g     F .text	00000018 __sprint_r
0008e800 g     F .text	00000034 alt_icache_flush_all
00091708 g     O .rwdata	00000004 alt_priority_mask
0008e884 g     F .text	000000a0 alt_ic_irq_enable
000825a8 g     F .text	0000001c __vfprintf_internal
00089868 g     F .text	0000005c _wctomb_r
0008c02c g     F .text	000008fc .hidden __subdf3
00085db4 g     F .text	000000b0 __lo0bits
0009170c g     O .rwdata	00000008 alt_alarm_list
0008e740 g     F .text	00000060 _do_ctors
00089778 g     F .text	000000c0 wcrtomb
0008cbe0 g     F .text	000000d0 close
0008cf38 g     F .text	00000084 alt_load
00088818 g     F .text	00000080 fputwc
0008466c g     F .text	00000004 __sinit_lock_acquire
00085b28 g     F .text	00000120 __multadd
00085b00 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00080000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   80000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   80004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   80008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   8000c:	00bffd16 	blt	zero,r2,80004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   80010:	00400234 	movhi	at,8
    ori r1, r1, %lo(_start)
   80014:	08409114 	ori	at,at,580
    jmp r1
   80018:	0800683a 	jmp	at
   8001c:	00000000 	call	0 <__alt_mem_mm-0x80000>

Disassembly of section .exceptions:

00080020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   80020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   80024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   80028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   8002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   80030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   80034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   80038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   8003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   80040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   80044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   80048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   8004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   80050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   80054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   80058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   8005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   80060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   80064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   80068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   8006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   80070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   80074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   80078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   8007c:	10000326 	beq	r2,zero,8008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   80080:	20000226 	beq	r4,zero,8008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   80084:	00800fc0 	call	800fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   80088:	00000706 	br	800a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   8008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   80090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   80094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   80098:	00801d00 	call	801d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   8009c:	1000021e 	bne	r2,zero,800a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   800a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   800a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   800a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   800ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   800b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   800b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   800b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   800bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   800c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   800c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   800c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   800cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   800d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   800d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   800d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   800dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   800e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   800e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   800e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   800ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   800f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   800f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   800f8:	ef80083a 	eret

000800fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   800fc:	defff904 	addi	sp,sp,-28
   80100:	dfc00615 	stw	ra,24(sp)
   80104:	df000515 	stw	fp,20(sp)
   80108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   8010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   80110:	0005313a 	rdctl	r2,ipending
   80114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   80118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   8011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   80120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   80124:	00800044 	movi	r2,1
   80128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   8012c:	e0fffb17 	ldw	r3,-20(fp)
   80130:	e0bffc17 	ldw	r2,-16(fp)
   80134:	1884703a 	and	r2,r3,r2
   80138:	10001426 	beq	r2,zero,8018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   8013c:	00800274 	movhi	r2,9
   80140:	108c9804 	addi	r2,r2,12896
   80144:	e0fffd17 	ldw	r3,-12(fp)
   80148:	180690fa 	slli	r3,r3,3
   8014c:	10c5883a 	add	r2,r2,r3
   80150:	10c00017 	ldw	r3,0(r2)
   80154:	00800274 	movhi	r2,9
   80158:	108c9804 	addi	r2,r2,12896
   8015c:	e13ffd17 	ldw	r4,-12(fp)
   80160:	200890fa 	slli	r4,r4,3
   80164:	1105883a 	add	r2,r2,r4
   80168:	10800104 	addi	r2,r2,4
   8016c:	10800017 	ldw	r2,0(r2)
   80170:	1009883a 	mov	r4,r2
   80174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   80178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   8017c:	0005313a 	rdctl	r2,ipending
   80180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   80184:	e0bfff17 	ldw	r2,-4(fp)
   80188:	00000706 	br	801a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   8018c:	e0bffc17 	ldw	r2,-16(fp)
   80190:	1085883a 	add	r2,r2,r2
   80194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   80198:	e0bffd17 	ldw	r2,-12(fp)
   8019c:	10800044 	addi	r2,r2,1
   801a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   801a4:	003fe106 	br	8012c <alt_irq_handler+0x30>

    active = alt_irq_pending ();
   801a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   801ac:	e0bffb17 	ldw	r2,-20(fp)
   801b0:	103fdb1e 	bne	r2,zero,80120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   801b4:	0001883a 	nop
}
   801b8:	0001883a 	nop
   801bc:	e037883a 	mov	sp,fp
   801c0:	dfc00117 	ldw	ra,4(sp)
   801c4:	df000017 	ldw	fp,0(sp)
   801c8:	dec00204 	addi	sp,sp,8
   801cc:	f800283a 	ret

000801d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   801d0:	defffb04 	addi	sp,sp,-20
   801d4:	dfc00415 	stw	ra,16(sp)
   801d8:	df000315 	stw	fp,12(sp)
   801dc:	df000304 	addi	fp,sp,12
   801e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   801e4:	000531fa 	rdctl	r2,exception
   801e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   801ec:	e0bffd17 	ldw	r2,-12(fp)
   801f0:	10801f0c 	andi	r2,r2,124
   801f4:	1004d0ba 	srli	r2,r2,2
   801f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   801fc:	0005333a 	rdctl	r2,badaddr
   80200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   80204:	d0a6d817 	ldw	r2,-25760(gp)
   80208:	10000726 	beq	r2,zero,80228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   8020c:	d0a6d817 	ldw	r2,-25760(gp)
   80210:	e0fffd17 	ldw	r3,-12(fp)
   80214:	e1bffe17 	ldw	r6,-8(fp)
   80218:	e17fff17 	ldw	r5,-4(fp)
   8021c:	1809883a 	mov	r4,r3
   80220:	103ee83a 	callr	r2
   80224:	00000206 	br	80230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   80228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   8022c:	0005883a 	mov	r2,zero
}
   80230:	e037883a 	mov	sp,fp
   80234:	dfc00117 	ldw	ra,4(sp)
   80238:	df000017 	ldw	fp,0(sp)
   8023c:	dec00204 	addi	sp,sp,8
   80240:	f800283a 	ret

Disassembly of section .text:

00080244 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   80244:	06c00334 	movhi	sp,12
    ori sp, sp, %lo(__alt_stack_pointer)
   80248:	deec0014 	ori	sp,sp,45056
    movhi gp, %hi(_gp)
   8024c:	06800274 	movhi	gp,9
    ori gp, gp, %lo(_gp)
   80250:	d6a5b514 	ori	gp,gp,38612
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   80254:	00800274 	movhi	r2,9
    ori r2, r2, %lo(__bss_start)
   80258:	108c8014 	ori	r2,r2,12800

    movhi r3, %hi(__bss_end)
   8025c:	00c00274 	movhi	r3,9
    ori r3, r3, %lo(__bss_end)
   80260:	18ccd814 	ori	r3,r3,13152

    beq r2, r3, 1f
   80264:	10c00326 	beq	r2,r3,80274 <_start+0x30>

0:
    stw zero, (r2)
   80268:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   8026c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   80270:	10fffd36 	bltu	r2,r3,80268 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   80274:	008cf380 	call	8cf38 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   80278:	008d0e00 	call	8d0e0 <alt_main>

0008027c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   8027c:	003fff06 	br	8027c <alt_after_alt_main>

00080280 <main>:
#define NUMBER_SLAVE 	0
#define WRITE_SIZE		1 //cantidad de bytes a enviar
#define READ_SIZE		1 //cantidad de bytes a recibir

int main()
{
   80280:	defff904 	addi	sp,sp,-28
   80284:	dfc00615 	stw	ra,24(sp)
   80288:	df000515 	stw	fp,20(sp)
   8028c:	df000504 	addi	fp,sp,20
	alt_printf("Hello from Nios II - SPI\n");
   80290:	01000274 	movhi	r4,9
   80294:	213e4004 	addi	r4,r4,-1792
   80298:	008d1a40 	call	8d1a4 <alt_printf>
	//Registros para enviar y recibir
	alt_u8  write_data= 0x00;
   8029c:	e03fff05 	stb	zero,-4(fp)
	alt_u8 recv=0;
   802a0:	e03fff45 	stb	zero,-3(fp)
	int j=0;
   802a4:	e03ffe15 	stw	zero,-8(fp)

	/*-----Rutina lee los 128 registros-----*/
	while(1)
	{
		(alt_avalon_spi_command(SPI_BASE , NUMBER_SLAVE , WRITE_SIZE , &write_data, READ_SIZE , &recv , 0));
   802a8:	e0ffff04 	addi	r3,fp,-4
   802ac:	d8000215 	stw	zero,8(sp)
   802b0:	e0bfff44 	addi	r2,fp,-3
   802b4:	d8800115 	stw	r2,4(sp)
   802b8:	00800044 	movi	r2,1
   802bc:	d8800015 	stw	r2,0(sp)
   802c0:	180f883a 	mov	r7,r3
   802c4:	01800044 	movi	r6,1
   802c8:	000b883a 	mov	r5,zero
   802cc:	01000434 	movhi	r4,16
   802d0:	21040804 	addi	r4,r4,4128
   802d4:	008e2f00 	call	8e2f0 <alt_avalon_spi_command>
		for (j=0; j<1000000; j++){}
   802d8:	e03ffe15 	stw	zero,-8(fp)
   802dc:	00000306 	br	802ec <main+0x6c>
   802e0:	e0bffe17 	ldw	r2,-8(fp)
   802e4:	10800044 	addi	r2,r2,1
   802e8:	e0bffe15 	stw	r2,-8(fp)
   802ec:	e0fffe17 	ldw	r3,-8(fp)
   802f0:	008003f4 	movhi	r2,15
   802f4:	10908fc4 	addi	r2,r2,16959
   802f8:	10fff90e 	bge	r2,r3,802e0 <main+0x60>
		printf("Reg: %i  Valor: %i  \n", write_data , recv );
   802fc:	e0bfff03 	ldbu	r2,-4(fp)
   80300:	10803fcc 	andi	r2,r2,255
   80304:	e0ffff43 	ldbu	r3,-3(fp)
   80308:	18c03fcc 	andi	r3,r3,255
   8030c:	180d883a 	mov	r6,r3
   80310:	100b883a 	mov	r5,r2
   80314:	01000274 	movhi	r4,9
   80318:	213e4704 	addi	r4,r4,-1764
   8031c:	00803740 	call	80374 <printf>
		write_data +=1;
   80320:	e0bfff03 	ldbu	r2,-4(fp)
   80324:	10800044 	addi	r2,r2,1
   80328:	e0bfff05 	stb	r2,-4(fp)
		if (write_data==128) write_data=0;
   8032c:	e0bfff03 	ldbu	r2,-4(fp)
   80330:	10803fcc 	andi	r2,r2,255
   80334:	10802018 	cmpnei	r2,r2,128
   80338:	103fdb1e 	bne	r2,zero,802a8 <main+0x28>
   8033c:	e03fff05 	stb	zero,-4(fp)
	}
   80340:	003fd906 	br	802a8 <main+0x28>

00080344 <_printf_r>:
   80344:	defffd04 	addi	sp,sp,-12
   80348:	2805883a 	mov	r2,r5
   8034c:	dfc00015 	stw	ra,0(sp)
   80350:	d9800115 	stw	r6,4(sp)
   80354:	d9c00215 	stw	r7,8(sp)
   80358:	21400217 	ldw	r5,8(r4)
   8035c:	d9c00104 	addi	r7,sp,4
   80360:	100d883a 	mov	r6,r2
   80364:	00803b00 	call	803b0 <___vfprintf_internal_r>
   80368:	dfc00017 	ldw	ra,0(sp)
   8036c:	dec00304 	addi	sp,sp,12
   80370:	f800283a 	ret

00080374 <printf>:
   80374:	defffc04 	addi	sp,sp,-16
   80378:	dfc00015 	stw	ra,0(sp)
   8037c:	d9400115 	stw	r5,4(sp)
   80380:	d9800215 	stw	r6,8(sp)
   80384:	d9c00315 	stw	r7,12(sp)
   80388:	00800274 	movhi	r2,9
   8038c:	1085b604 	addi	r2,r2,5848
   80390:	10800017 	ldw	r2,0(r2)
   80394:	200b883a 	mov	r5,r4
   80398:	d9800104 	addi	r6,sp,4
   8039c:	11000217 	ldw	r4,8(r2)
   803a0:	00825a80 	call	825a8 <__vfprintf_internal>
   803a4:	dfc00017 	ldw	ra,0(sp)
   803a8:	dec00404 	addi	sp,sp,16
   803ac:	f800283a 	ret

000803b0 <___vfprintf_internal_r>:
   803b0:	deffb804 	addi	sp,sp,-288
   803b4:	dfc04715 	stw	ra,284(sp)
   803b8:	ddc04515 	stw	r23,276(sp)
   803bc:	dd404315 	stw	r21,268(sp)
   803c0:	d9002c15 	stw	r4,176(sp)
   803c4:	282f883a 	mov	r23,r5
   803c8:	302b883a 	mov	r21,r6
   803cc:	d9c02d15 	stw	r7,180(sp)
   803d0:	df004615 	stw	fp,280(sp)
   803d4:	dd804415 	stw	r22,272(sp)
   803d8:	dd004215 	stw	r20,264(sp)
   803dc:	dcc04115 	stw	r19,260(sp)
   803e0:	dc804015 	stw	r18,256(sp)
   803e4:	dc403f15 	stw	r17,252(sp)
   803e8:	dc003e15 	stw	r16,248(sp)
   803ec:	0084d0c0 	call	84d0c <_localeconv_r>
   803f0:	10800017 	ldw	r2,0(r2)
   803f4:	1009883a 	mov	r4,r2
   803f8:	d8803415 	stw	r2,208(sp)
   803fc:	0086d340 	call	86d34 <strlen>
   80400:	d8803715 	stw	r2,220(sp)
   80404:	d8802c17 	ldw	r2,176(sp)
   80408:	10000226 	beq	r2,zero,80414 <___vfprintf_internal_r+0x64>
   8040c:	10800e17 	ldw	r2,56(r2)
   80410:	1000f926 	beq	r2,zero,807f8 <___vfprintf_internal_r+0x448>
   80414:	b880030b 	ldhu	r2,12(r23)
   80418:	10c8000c 	andi	r3,r2,8192
   8041c:	1800061e 	bne	r3,zero,80438 <___vfprintf_internal_r+0x88>
   80420:	b9001917 	ldw	r4,100(r23)
   80424:	00f7ffc4 	movi	r3,-8193
   80428:	10880014 	ori	r2,r2,8192
   8042c:	20c6703a 	and	r3,r4,r3
   80430:	b880030d 	sth	r2,12(r23)
   80434:	b8c01915 	stw	r3,100(r23)
   80438:	10c0020c 	andi	r3,r2,8
   8043c:	1800c126 	beq	r3,zero,80744 <___vfprintf_internal_r+0x394>
   80440:	b8c00417 	ldw	r3,16(r23)
   80444:	1800bf26 	beq	r3,zero,80744 <___vfprintf_internal_r+0x394>
   80448:	1080068c 	andi	r2,r2,26
   8044c:	00c00284 	movi	r3,10
   80450:	10c0c426 	beq	r2,r3,80764 <___vfprintf_internal_r+0x3b4>
   80454:	d8c00404 	addi	r3,sp,16
   80458:	05000274 	movhi	r20,9
   8045c:	d9001e04 	addi	r4,sp,120
   80460:	a53e5d84 	addi	r20,r20,-1674
   80464:	d8c01e15 	stw	r3,120(sp)
   80468:	d8002015 	stw	zero,128(sp)
   8046c:	d8001f15 	stw	zero,124(sp)
   80470:	d8003315 	stw	zero,204(sp)
   80474:	d8003615 	stw	zero,216(sp)
   80478:	d8003815 	stw	zero,224(sp)
   8047c:	1811883a 	mov	r8,r3
   80480:	d8003915 	stw	zero,228(sp)
   80484:	d8003a15 	stw	zero,232(sp)
   80488:	d8002f15 	stw	zero,188(sp)
   8048c:	d9002815 	stw	r4,160(sp)
   80490:	a8800007 	ldb	r2,0(r21)
   80494:	10027b26 	beq	r2,zero,80e84 <___vfprintf_internal_r+0xad4>
   80498:	00c00944 	movi	r3,37
   8049c:	a821883a 	mov	r16,r21
   804a0:	10c0021e 	bne	r2,r3,804ac <___vfprintf_internal_r+0xfc>
   804a4:	00001406 	br	804f8 <___vfprintf_internal_r+0x148>
   804a8:	10c00326 	beq	r2,r3,804b8 <___vfprintf_internal_r+0x108>
   804ac:	84000044 	addi	r16,r16,1
   804b0:	80800007 	ldb	r2,0(r16)
   804b4:	103ffc1e 	bne	r2,zero,804a8 <___vfprintf_internal_r+0xf8>
   804b8:	8563c83a 	sub	r17,r16,r21
   804bc:	88000e26 	beq	r17,zero,804f8 <___vfprintf_internal_r+0x148>
   804c0:	d8c02017 	ldw	r3,128(sp)
   804c4:	d8801f17 	ldw	r2,124(sp)
   804c8:	45400015 	stw	r21,0(r8)
   804cc:	1c47883a 	add	r3,r3,r17
   804d0:	10800044 	addi	r2,r2,1
   804d4:	d8c02015 	stw	r3,128(sp)
   804d8:	44400115 	stw	r17,4(r8)
   804dc:	d8801f15 	stw	r2,124(sp)
   804e0:	00c001c4 	movi	r3,7
   804e4:	1880a716 	blt	r3,r2,80784 <___vfprintf_internal_r+0x3d4>
   804e8:	42000204 	addi	r8,r8,8
   804ec:	d9402f17 	ldw	r5,188(sp)
   804f0:	2c4b883a 	add	r5,r5,r17
   804f4:	d9402f15 	stw	r5,188(sp)
   804f8:	80800007 	ldb	r2,0(r16)
   804fc:	1000a826 	beq	r2,zero,807a0 <___vfprintf_internal_r+0x3f0>
   80500:	84400047 	ldb	r17,1(r16)
   80504:	00bfffc4 	movi	r2,-1
   80508:	85400044 	addi	r21,r16,1
   8050c:	d8002785 	stb	zero,158(sp)
   80510:	0007883a 	mov	r3,zero
   80514:	000f883a 	mov	r7,zero
   80518:	d8802915 	stw	r2,164(sp)
   8051c:	d8003115 	stw	zero,196(sp)
   80520:	0025883a 	mov	r18,zero
   80524:	01401604 	movi	r5,88
   80528:	01800244 	movi	r6,9
   8052c:	02800a84 	movi	r10,42
   80530:	02401b04 	movi	r9,108
   80534:	ad400044 	addi	r21,r21,1
   80538:	88bff804 	addi	r2,r17,-32
   8053c:	28830436 	bltu	r5,r2,81150 <___vfprintf_internal_r+0xda0>
   80540:	100490ba 	slli	r2,r2,2
   80544:	01000234 	movhi	r4,8
   80548:	21015604 	addi	r4,r4,1368
   8054c:	1105883a 	add	r2,r2,r4
   80550:	10800017 	ldw	r2,0(r2)
   80554:	1000683a 	jmp	r2
   80558:	00081070 	cmpltui	zero,zero,8257
   8055c:	00081150 	cmplti	zero,zero,8261
   80560:	00081150 	cmplti	zero,zero,8261
   80564:	00081090 	cmplti	zero,zero,8258
   80568:	00081150 	cmplti	zero,zero,8261
   8056c:	00081150 	cmplti	zero,zero,8261
   80570:	00081150 	cmplti	zero,zero,8261
   80574:	00081150 	cmplti	zero,zero,8261
   80578:	00081150 	cmplti	zero,zero,8261
   8057c:	00081150 	cmplti	zero,zero,8261
   80580:	00080804 	movi	zero,8224
   80584:	00080fac 	andhi	zero,zero,8254
   80588:	00081150 	cmplti	zero,zero,8261
   8058c:	000806cc 	andi	zero,zero,8219
   80590:	0008082c 	andhi	zero,zero,8224
   80594:	00081150 	cmplti	zero,zero,8261
   80598:	0008086c 	andhi	zero,zero,8225
   8059c:	00080878 	rdprs	zero,zero,8225
   805a0:	00080878 	rdprs	zero,zero,8225
   805a4:	00080878 	rdprs	zero,zero,8225
   805a8:	00080878 	rdprs	zero,zero,8225
   805ac:	00080878 	rdprs	zero,zero,8225
   805b0:	00080878 	rdprs	zero,zero,8225
   805b4:	00080878 	rdprs	zero,zero,8225
   805b8:	00080878 	rdprs	zero,zero,8225
   805bc:	00080878 	rdprs	zero,zero,8225
   805c0:	00081150 	cmplti	zero,zero,8261
   805c4:	00081150 	cmplti	zero,zero,8261
   805c8:	00081150 	cmplti	zero,zero,8261
   805cc:	00081150 	cmplti	zero,zero,8261
   805d0:	00081150 	cmplti	zero,zero,8261
   805d4:	00081150 	cmplti	zero,zero,8261
   805d8:	00081150 	cmplti	zero,zero,8261
   805dc:	00081150 	cmplti	zero,zero,8261
   805e0:	00081150 	cmplti	zero,zero,8261
   805e4:	00081150 	cmplti	zero,zero,8261
   805e8:	000808ac 	andhi	zero,zero,8226
   805ec:	00080968 	cmpgeui	zero,zero,8229
   805f0:	00081150 	cmplti	zero,zero,8261
   805f4:	00080968 	cmpgeui	zero,zero,8229
   805f8:	00081150 	cmplti	zero,zero,8261
   805fc:	00081150 	cmplti	zero,zero,8261
   80600:	00081150 	cmplti	zero,zero,8261
   80604:	00081150 	cmplti	zero,zero,8261
   80608:	00080a08 	cmpgei	zero,zero,8232
   8060c:	00081150 	cmplti	zero,zero,8261
   80610:	00081150 	cmplti	zero,zero,8261
   80614:	00080a14 	movui	zero,8232
   80618:	00081150 	cmplti	zero,zero,8261
   8061c:	00081150 	cmplti	zero,zero,8261
   80620:	00081150 	cmplti	zero,zero,8261
   80624:	00081150 	cmplti	zero,zero,8261
   80628:	00081150 	cmplti	zero,zero,8261
   8062c:	00080e8c 	andi	zero,zero,8250
   80630:	00081150 	cmplti	zero,zero,8261
   80634:	00081150 	cmplti	zero,zero,8261
   80638:	00080eec 	andhi	zero,zero,8251
   8063c:	00081150 	cmplti	zero,zero,8261
   80640:	00081150 	cmplti	zero,zero,8261
   80644:	00081150 	cmplti	zero,zero,8261
   80648:	00081150 	cmplti	zero,zero,8261
   8064c:	00081150 	cmplti	zero,zero,8261
   80650:	00081150 	cmplti	zero,zero,8261
   80654:	00081150 	cmplti	zero,zero,8261
   80658:	00081150 	cmplti	zero,zero,8261
   8065c:	00081150 	cmplti	zero,zero,8261
   80660:	00081150 	cmplti	zero,zero,8261
   80664:	000810fc 	xorhi	zero,zero,8259
   80668:	0008109c 	xori	zero,zero,8258
   8066c:	00080968 	cmpgeui	zero,zero,8229
   80670:	00080968 	cmpgeui	zero,zero,8229
   80674:	00080968 	cmpgeui	zero,zero,8229
   80678:	000810ac 	andhi	zero,zero,8258
   8067c:	0008109c 	xori	zero,zero,8258
   80680:	00081150 	cmplti	zero,zero,8261
   80684:	00081150 	cmplti	zero,zero,8261
   80688:	000810b8 	rdprs	zero,zero,8258
   8068c:	00081150 	cmplti	zero,zero,8261
   80690:	000810c8 	cmpgei	zero,zero,8259
   80694:	00080f9c 	xori	zero,zero,8254
   80698:	000806d8 	cmpnei	zero,zero,8219
   8069c:	00080fbc 	xorhi	zero,zero,8254
   806a0:	00081150 	cmplti	zero,zero,8261
   806a4:	00080fc8 	cmpgei	zero,zero,8255
   806a8:	00081150 	cmplti	zero,zero,8261
   806ac:	00081024 	muli	zero,zero,8256
   806b0:	00081150 	cmplti	zero,zero,8261
   806b4:	00081150 	cmplti	zero,zero,8261
   806b8:	00081034 	movhi	zero,8256
   806bc:	d9003117 	ldw	r4,196(sp)
   806c0:	d8802d15 	stw	r2,180(sp)
   806c4:	0109c83a 	sub	r4,zero,r4
   806c8:	d9003115 	stw	r4,196(sp)
   806cc:	94800114 	ori	r18,r18,4
   806d0:	ac400007 	ldb	r17,0(r21)
   806d4:	003f9706 	br	80534 <___vfprintf_internal_r+0x184>
   806d8:	00800c04 	movi	r2,48
   806dc:	d9002d17 	ldw	r4,180(sp)
   806e0:	d9402917 	ldw	r5,164(sp)
   806e4:	d8802705 	stb	r2,156(sp)
   806e8:	00801e04 	movi	r2,120
   806ec:	d8802745 	stb	r2,157(sp)
   806f0:	d8002785 	stb	zero,158(sp)
   806f4:	20c00104 	addi	r3,r4,4
   806f8:	24c00017 	ldw	r19,0(r4)
   806fc:	002d883a 	mov	r22,zero
   80700:	90800094 	ori	r2,r18,2
   80704:	28029a16 	blt	r5,zero,81170 <___vfprintf_internal_r+0xdc0>
   80708:	00bfdfc4 	movi	r2,-129
   8070c:	90a4703a 	and	r18,r18,r2
   80710:	d8c02d15 	stw	r3,180(sp)
   80714:	94800094 	ori	r18,r18,2
   80718:	9802871e 	bne	r19,zero,81138 <___vfprintf_internal_r+0xd88>
   8071c:	00800274 	movhi	r2,9
   80720:	10be5604 	addi	r2,r2,-1704
   80724:	d8803915 	stw	r2,228(sp)
   80728:	04401e04 	movi	r17,120
   8072c:	d8802917 	ldw	r2,164(sp)
   80730:	0039883a 	mov	fp,zero
   80734:	1001e926 	beq	r2,zero,80edc <___vfprintf_internal_r+0xb2c>
   80738:	0027883a 	mov	r19,zero
   8073c:	002d883a 	mov	r22,zero
   80740:	00020506 	br	80f58 <___vfprintf_internal_r+0xba8>
   80744:	d9002c17 	ldw	r4,176(sp)
   80748:	b80b883a 	mov	r5,r23
   8074c:	00826800 	call	82680 <__swsetup_r>
   80750:	1005ac1e 	bne	r2,zero,81e04 <___vfprintf_internal_r+0x1a54>
   80754:	b880030b 	ldhu	r2,12(r23)
   80758:	00c00284 	movi	r3,10
   8075c:	1080068c 	andi	r2,r2,26
   80760:	10ff3c1e 	bne	r2,r3,80454 <___vfprintf_internal_r+0xa4>
   80764:	b880038f 	ldh	r2,14(r23)
   80768:	103f3a16 	blt	r2,zero,80454 <___vfprintf_internal_r+0xa4>
   8076c:	d9c02d17 	ldw	r7,180(sp)
   80770:	d9002c17 	ldw	r4,176(sp)
   80774:	a80d883a 	mov	r6,r21
   80778:	b80b883a 	mov	r5,r23
   8077c:	00825c40 	call	825c4 <__sbprintf>
   80780:	00001106 	br	807c8 <___vfprintf_internal_r+0x418>
   80784:	d9002c17 	ldw	r4,176(sp)
   80788:	d9801e04 	addi	r6,sp,120
   8078c:	b80b883a 	mov	r5,r23
   80790:	0086ec80 	call	86ec8 <__sprint_r>
   80794:	1000081e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   80798:	da000404 	addi	r8,sp,16
   8079c:	003f5306 	br	804ec <___vfprintf_internal_r+0x13c>
   807a0:	d8802017 	ldw	r2,128(sp)
   807a4:	10000426 	beq	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   807a8:	d9002c17 	ldw	r4,176(sp)
   807ac:	d9801e04 	addi	r6,sp,120
   807b0:	b80b883a 	mov	r5,r23
   807b4:	0086ec80 	call	86ec8 <__sprint_r>
   807b8:	b880030b 	ldhu	r2,12(r23)
   807bc:	1080100c 	andi	r2,r2,64
   807c0:	1005901e 	bne	r2,zero,81e04 <___vfprintf_internal_r+0x1a54>
   807c4:	d8802f17 	ldw	r2,188(sp)
   807c8:	dfc04717 	ldw	ra,284(sp)
   807cc:	df004617 	ldw	fp,280(sp)
   807d0:	ddc04517 	ldw	r23,276(sp)
   807d4:	dd804417 	ldw	r22,272(sp)
   807d8:	dd404317 	ldw	r21,268(sp)
   807dc:	dd004217 	ldw	r20,264(sp)
   807e0:	dcc04117 	ldw	r19,260(sp)
   807e4:	dc804017 	ldw	r18,256(sp)
   807e8:	dc403f17 	ldw	r17,252(sp)
   807ec:	dc003e17 	ldw	r16,248(sp)
   807f0:	dec04804 	addi	sp,sp,288
   807f4:	f800283a 	ret
   807f8:	d9002c17 	ldw	r4,176(sp)
   807fc:	00846540 	call	84654 <__sinit>
   80800:	003f0406 	br	80414 <___vfprintf_internal_r+0x64>
   80804:	d8802d17 	ldw	r2,180(sp)
   80808:	d9002d17 	ldw	r4,180(sp)
   8080c:	10800017 	ldw	r2,0(r2)
   80810:	d8803115 	stw	r2,196(sp)
   80814:	20800104 	addi	r2,r4,4
   80818:	d9003117 	ldw	r4,196(sp)
   8081c:	203fa716 	blt	r4,zero,806bc <___vfprintf_internal_r+0x30c>
   80820:	d8802d15 	stw	r2,180(sp)
   80824:	ac400007 	ldb	r17,0(r21)
   80828:	003f4206 	br	80534 <___vfprintf_internal_r+0x184>
   8082c:	ac400007 	ldb	r17,0(r21)
   80830:	aac00044 	addi	r11,r21,1
   80834:	8a872826 	beq	r17,r10,824d8 <___vfprintf_internal_r+0x2128>
   80838:	88bff404 	addi	r2,r17,-48
   8083c:	0009883a 	mov	r4,zero
   80840:	30867d36 	bltu	r6,r2,82238 <___vfprintf_internal_r+0x1e88>
   80844:	5c400007 	ldb	r17,0(r11)
   80848:	210002a4 	muli	r4,r4,10
   8084c:	5d400044 	addi	r21,r11,1
   80850:	a817883a 	mov	r11,r21
   80854:	2089883a 	add	r4,r4,r2
   80858:	88bff404 	addi	r2,r17,-48
   8085c:	30bff92e 	bgeu	r6,r2,80844 <___vfprintf_internal_r+0x494>
   80860:	2005c916 	blt	r4,zero,81f88 <___vfprintf_internal_r+0x1bd8>
   80864:	d9002915 	stw	r4,164(sp)
   80868:	003f3306 	br	80538 <___vfprintf_internal_r+0x188>
   8086c:	94802014 	ori	r18,r18,128
   80870:	ac400007 	ldb	r17,0(r21)
   80874:	003f2f06 	br	80534 <___vfprintf_internal_r+0x184>
   80878:	a809883a 	mov	r4,r21
   8087c:	d8003115 	stw	zero,196(sp)
   80880:	88bff404 	addi	r2,r17,-48
   80884:	0017883a 	mov	r11,zero
   80888:	24400007 	ldb	r17,0(r4)
   8088c:	5ac002a4 	muli	r11,r11,10
   80890:	ad400044 	addi	r21,r21,1
   80894:	a809883a 	mov	r4,r21
   80898:	12d7883a 	add	r11,r2,r11
   8089c:	88bff404 	addi	r2,r17,-48
   808a0:	30bff92e 	bgeu	r6,r2,80888 <___vfprintf_internal_r+0x4d8>
   808a4:	dac03115 	stw	r11,196(sp)
   808a8:	003f2306 	br	80538 <___vfprintf_internal_r+0x188>
   808ac:	18c03fcc 	andi	r3,r3,255
   808b0:	18072b1e 	bne	r3,zero,82560 <___vfprintf_internal_r+0x21b0>
   808b4:	94800414 	ori	r18,r18,16
   808b8:	9080080c 	andi	r2,r18,32
   808bc:	10037b26 	beq	r2,zero,816ac <___vfprintf_internal_r+0x12fc>
   808c0:	d9402d17 	ldw	r5,180(sp)
   808c4:	28800117 	ldw	r2,4(r5)
   808c8:	2cc00017 	ldw	r19,0(r5)
   808cc:	29400204 	addi	r5,r5,8
   808d0:	d9402d15 	stw	r5,180(sp)
   808d4:	102d883a 	mov	r22,r2
   808d8:	10044b16 	blt	r2,zero,81a08 <___vfprintf_internal_r+0x1658>
   808dc:	d9402917 	ldw	r5,164(sp)
   808e0:	df002783 	ldbu	fp,158(sp)
   808e4:	2803bc16 	blt	r5,zero,817d8 <___vfprintf_internal_r+0x1428>
   808e8:	00ffdfc4 	movi	r3,-129
   808ec:	9d84b03a 	or	r2,r19,r22
   808f0:	90e4703a 	and	r18,r18,r3
   808f4:	10017726 	beq	r2,zero,80ed4 <___vfprintf_internal_r+0xb24>
   808f8:	b0038326 	beq	r22,zero,81708 <___vfprintf_internal_r+0x1358>
   808fc:	dc402a15 	stw	r17,168(sp)
   80900:	dc001e04 	addi	r16,sp,120
   80904:	b023883a 	mov	r17,r22
   80908:	402d883a 	mov	r22,r8
   8090c:	9809883a 	mov	r4,r19
   80910:	880b883a 	mov	r5,r17
   80914:	01800284 	movi	r6,10
   80918:	000f883a 	mov	r7,zero
   8091c:	0089e3c0 	call	89e3c <__umoddi3>
   80920:	10800c04 	addi	r2,r2,48
   80924:	843fffc4 	addi	r16,r16,-1
   80928:	9809883a 	mov	r4,r19
   8092c:	880b883a 	mov	r5,r17
   80930:	80800005 	stb	r2,0(r16)
   80934:	01800284 	movi	r6,10
   80938:	000f883a 	mov	r7,zero
   8093c:	00898c40 	call	898c4 <__udivdi3>
   80940:	1027883a 	mov	r19,r2
   80944:	10c4b03a 	or	r2,r2,r3
   80948:	1823883a 	mov	r17,r3
   8094c:	103fef1e 	bne	r2,zero,8090c <___vfprintf_internal_r+0x55c>
   80950:	d8c02817 	ldw	r3,160(sp)
   80954:	dc402a17 	ldw	r17,168(sp)
   80958:	b011883a 	mov	r8,r22
   8095c:	1c07c83a 	sub	r3,r3,r16
   80960:	d8c02e15 	stw	r3,184(sp)
   80964:	00005906 	br	80acc <___vfprintf_internal_r+0x71c>
   80968:	18c03fcc 	andi	r3,r3,255
   8096c:	1806fa1e 	bne	r3,zero,82558 <___vfprintf_internal_r+0x21a8>
   80970:	9080020c 	andi	r2,r18,8
   80974:	10048a26 	beq	r2,zero,81ba0 <___vfprintf_internal_r+0x17f0>
   80978:	d8c02d17 	ldw	r3,180(sp)
   8097c:	d9002d17 	ldw	r4,180(sp)
   80980:	d9402d17 	ldw	r5,180(sp)
   80984:	18c00017 	ldw	r3,0(r3)
   80988:	21000117 	ldw	r4,4(r4)
   8098c:	29400204 	addi	r5,r5,8
   80990:	d8c03615 	stw	r3,216(sp)
   80994:	d9003815 	stw	r4,224(sp)
   80998:	d9402d15 	stw	r5,180(sp)
   8099c:	d9003617 	ldw	r4,216(sp)
   809a0:	d9403817 	ldw	r5,224(sp)
   809a4:	da003d15 	stw	r8,244(sp)
   809a8:	04000044 	movi	r16,1
   809ac:	0086a540 	call	86a54 <__fpclassifyd>
   809b0:	da003d17 	ldw	r8,244(sp)
   809b4:	14041f1e 	bne	r2,r16,81a34 <___vfprintf_internal_r+0x1684>
   809b8:	d9003617 	ldw	r4,216(sp)
   809bc:	d9403817 	ldw	r5,224(sp)
   809c0:	000d883a 	mov	r6,zero
   809c4:	000f883a 	mov	r7,zero
   809c8:	008b8200 	call	8b820 <__ledf2>
   809cc:	da003d17 	ldw	r8,244(sp)
   809d0:	1005be16 	blt	r2,zero,820cc <___vfprintf_internal_r+0x1d1c>
   809d4:	df002783 	ldbu	fp,158(sp)
   809d8:	008011c4 	movi	r2,71
   809dc:	1445330e 	bge	r2,r17,81eac <___vfprintf_internal_r+0x1afc>
   809e0:	04000274 	movhi	r16,9
   809e4:	843e4e04 	addi	r16,r16,-1736
   809e8:	00c000c4 	movi	r3,3
   809ec:	00bfdfc4 	movi	r2,-129
   809f0:	d8c02a15 	stw	r3,168(sp)
   809f4:	90a4703a 	and	r18,r18,r2
   809f8:	d8c02e15 	stw	r3,184(sp)
   809fc:	d8002915 	stw	zero,164(sp)
   80a00:	d8003215 	stw	zero,200(sp)
   80a04:	00003706 	br	80ae4 <___vfprintf_internal_r+0x734>
   80a08:	94800214 	ori	r18,r18,8
   80a0c:	ac400007 	ldb	r17,0(r21)
   80a10:	003ec806 	br	80534 <___vfprintf_internal_r+0x184>
   80a14:	18c03fcc 	andi	r3,r3,255
   80a18:	1806db1e 	bne	r3,zero,82588 <___vfprintf_internal_r+0x21d8>
   80a1c:	94800414 	ori	r18,r18,16
   80a20:	9080080c 	andi	r2,r18,32
   80a24:	1002d826 	beq	r2,zero,81588 <___vfprintf_internal_r+0x11d8>
   80a28:	d9402d17 	ldw	r5,180(sp)
   80a2c:	d8c02917 	ldw	r3,164(sp)
   80a30:	d8002785 	stb	zero,158(sp)
   80a34:	28800204 	addi	r2,r5,8
   80a38:	2cc00017 	ldw	r19,0(r5)
   80a3c:	2d800117 	ldw	r22,4(r5)
   80a40:	18048f16 	blt	r3,zero,81c80 <___vfprintf_internal_r+0x18d0>
   80a44:	013fdfc4 	movi	r4,-129
   80a48:	9d86b03a 	or	r3,r19,r22
   80a4c:	d8802d15 	stw	r2,180(sp)
   80a50:	9124703a 	and	r18,r18,r4
   80a54:	1802d91e 	bne	r3,zero,815bc <___vfprintf_internal_r+0x120c>
   80a58:	d8c02917 	ldw	r3,164(sp)
   80a5c:	0039883a 	mov	fp,zero
   80a60:	1805c326 	beq	r3,zero,82170 <___vfprintf_internal_r+0x1dc0>
   80a64:	0027883a 	mov	r19,zero
   80a68:	002d883a 	mov	r22,zero
   80a6c:	dc001e04 	addi	r16,sp,120
   80a70:	9806d0fa 	srli	r3,r19,3
   80a74:	b008977a 	slli	r4,r22,29
   80a78:	b02cd0fa 	srli	r22,r22,3
   80a7c:	9cc001cc 	andi	r19,r19,7
   80a80:	98800c04 	addi	r2,r19,48
   80a84:	843fffc4 	addi	r16,r16,-1
   80a88:	20e6b03a 	or	r19,r4,r3
   80a8c:	80800005 	stb	r2,0(r16)
   80a90:	9d86b03a 	or	r3,r19,r22
   80a94:	183ff61e 	bne	r3,zero,80a70 <___vfprintf_internal_r+0x6c0>
   80a98:	90c0004c 	andi	r3,r18,1
   80a9c:	18013b26 	beq	r3,zero,80f8c <___vfprintf_internal_r+0xbdc>
   80aa0:	10803fcc 	andi	r2,r2,255
   80aa4:	1080201c 	xori	r2,r2,128
   80aa8:	10bfe004 	addi	r2,r2,-128
   80aac:	00c00c04 	movi	r3,48
   80ab0:	10c13626 	beq	r2,r3,80f8c <___vfprintf_internal_r+0xbdc>
   80ab4:	80ffffc5 	stb	r3,-1(r16)
   80ab8:	d8c02817 	ldw	r3,160(sp)
   80abc:	80bfffc4 	addi	r2,r16,-1
   80ac0:	1021883a 	mov	r16,r2
   80ac4:	1887c83a 	sub	r3,r3,r2
   80ac8:	d8c02e15 	stw	r3,184(sp)
   80acc:	d8802e17 	ldw	r2,184(sp)
   80ad0:	d9002917 	ldw	r4,164(sp)
   80ad4:	1100010e 	bge	r2,r4,80adc <___vfprintf_internal_r+0x72c>
   80ad8:	2005883a 	mov	r2,r4
   80adc:	d8802a15 	stw	r2,168(sp)
   80ae0:	d8003215 	stw	zero,200(sp)
   80ae4:	e7003fcc 	andi	fp,fp,255
   80ae8:	e700201c 	xori	fp,fp,128
   80aec:	e73fe004 	addi	fp,fp,-128
   80af0:	e0000326 	beq	fp,zero,80b00 <___vfprintf_internal_r+0x750>
   80af4:	d8c02a17 	ldw	r3,168(sp)
   80af8:	18c00044 	addi	r3,r3,1
   80afc:	d8c02a15 	stw	r3,168(sp)
   80b00:	90c0008c 	andi	r3,r18,2
   80b04:	d8c02b15 	stw	r3,172(sp)
   80b08:	18000326 	beq	r3,zero,80b18 <___vfprintf_internal_r+0x768>
   80b0c:	d8c02a17 	ldw	r3,168(sp)
   80b10:	18c00084 	addi	r3,r3,2
   80b14:	d8c02a15 	stw	r3,168(sp)
   80b18:	90c0210c 	andi	r3,r18,132
   80b1c:	d8c03015 	stw	r3,192(sp)
   80b20:	1801a31e 	bne	r3,zero,811b0 <___vfprintf_internal_r+0xe00>
   80b24:	d9003117 	ldw	r4,196(sp)
   80b28:	d8c02a17 	ldw	r3,168(sp)
   80b2c:	20e7c83a 	sub	r19,r4,r3
   80b30:	04c19f0e 	bge	zero,r19,811b0 <___vfprintf_internal_r+0xe00>
   80b34:	02400404 	movi	r9,16
   80b38:	d8c02017 	ldw	r3,128(sp)
   80b3c:	d8801f17 	ldw	r2,124(sp)
   80b40:	4cc50d0e 	bge	r9,r19,81f78 <___vfprintf_internal_r+0x1bc8>
   80b44:	01400274 	movhi	r5,9
   80b48:	297e6184 	addi	r5,r5,-1658
   80b4c:	dc403b15 	stw	r17,236(sp)
   80b50:	d9403515 	stw	r5,212(sp)
   80b54:	9823883a 	mov	r17,r19
   80b58:	482d883a 	mov	r22,r9
   80b5c:	9027883a 	mov	r19,r18
   80b60:	070001c4 	movi	fp,7
   80b64:	8025883a 	mov	r18,r16
   80b68:	dc002c17 	ldw	r16,176(sp)
   80b6c:	00000306 	br	80b7c <___vfprintf_internal_r+0x7cc>
   80b70:	8c7ffc04 	addi	r17,r17,-16
   80b74:	42000204 	addi	r8,r8,8
   80b78:	b440130e 	bge	r22,r17,80bc8 <___vfprintf_internal_r+0x818>
   80b7c:	01000274 	movhi	r4,9
   80b80:	18c00404 	addi	r3,r3,16
   80b84:	10800044 	addi	r2,r2,1
   80b88:	213e6184 	addi	r4,r4,-1658
   80b8c:	41000015 	stw	r4,0(r8)
   80b90:	45800115 	stw	r22,4(r8)
   80b94:	d8c02015 	stw	r3,128(sp)
   80b98:	d8801f15 	stw	r2,124(sp)
   80b9c:	e0bff40e 	bge	fp,r2,80b70 <___vfprintf_internal_r+0x7c0>
   80ba0:	d9801e04 	addi	r6,sp,120
   80ba4:	b80b883a 	mov	r5,r23
   80ba8:	8009883a 	mov	r4,r16
   80bac:	0086ec80 	call	86ec8 <__sprint_r>
   80bb0:	103f011e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   80bb4:	8c7ffc04 	addi	r17,r17,-16
   80bb8:	d8c02017 	ldw	r3,128(sp)
   80bbc:	d8801f17 	ldw	r2,124(sp)
   80bc0:	da000404 	addi	r8,sp,16
   80bc4:	b47fed16 	blt	r22,r17,80b7c <___vfprintf_internal_r+0x7cc>
   80bc8:	9021883a 	mov	r16,r18
   80bcc:	9825883a 	mov	r18,r19
   80bd0:	8827883a 	mov	r19,r17
   80bd4:	dc403b17 	ldw	r17,236(sp)
   80bd8:	d9403517 	ldw	r5,212(sp)
   80bdc:	98c7883a 	add	r3,r19,r3
   80be0:	10800044 	addi	r2,r2,1
   80be4:	41400015 	stw	r5,0(r8)
   80be8:	44c00115 	stw	r19,4(r8)
   80bec:	d8c02015 	stw	r3,128(sp)
   80bf0:	d8801f15 	stw	r2,124(sp)
   80bf4:	010001c4 	movi	r4,7
   80bf8:	2082a316 	blt	r4,r2,81688 <___vfprintf_internal_r+0x12d8>
   80bfc:	df002787 	ldb	fp,158(sp)
   80c00:	42000204 	addi	r8,r8,8
   80c04:	e0000c26 	beq	fp,zero,80c38 <___vfprintf_internal_r+0x888>
   80c08:	d8801f17 	ldw	r2,124(sp)
   80c0c:	d9002784 	addi	r4,sp,158
   80c10:	18c00044 	addi	r3,r3,1
   80c14:	10800044 	addi	r2,r2,1
   80c18:	41000015 	stw	r4,0(r8)
   80c1c:	01000044 	movi	r4,1
   80c20:	41000115 	stw	r4,4(r8)
   80c24:	d8c02015 	stw	r3,128(sp)
   80c28:	d8801f15 	stw	r2,124(sp)
   80c2c:	010001c4 	movi	r4,7
   80c30:	20823c16 	blt	r4,r2,81524 <___vfprintf_internal_r+0x1174>
   80c34:	42000204 	addi	r8,r8,8
   80c38:	d8802b17 	ldw	r2,172(sp)
   80c3c:	10000c26 	beq	r2,zero,80c70 <___vfprintf_internal_r+0x8c0>
   80c40:	d8801f17 	ldw	r2,124(sp)
   80c44:	d9002704 	addi	r4,sp,156
   80c48:	18c00084 	addi	r3,r3,2
   80c4c:	10800044 	addi	r2,r2,1
   80c50:	41000015 	stw	r4,0(r8)
   80c54:	01000084 	movi	r4,2
   80c58:	41000115 	stw	r4,4(r8)
   80c5c:	d8c02015 	stw	r3,128(sp)
   80c60:	d8801f15 	stw	r2,124(sp)
   80c64:	010001c4 	movi	r4,7
   80c68:	20823616 	blt	r4,r2,81544 <___vfprintf_internal_r+0x1194>
   80c6c:	42000204 	addi	r8,r8,8
   80c70:	d9003017 	ldw	r4,192(sp)
   80c74:	00802004 	movi	r2,128
   80c78:	20819926 	beq	r4,r2,812e0 <___vfprintf_internal_r+0xf30>
   80c7c:	d9402917 	ldw	r5,164(sp)
   80c80:	d8802e17 	ldw	r2,184(sp)
   80c84:	28adc83a 	sub	r22,r5,r2
   80c88:	0580310e 	bge	zero,r22,80d50 <___vfprintf_internal_r+0x9a0>
   80c8c:	07000404 	movi	fp,16
   80c90:	d8801f17 	ldw	r2,124(sp)
   80c94:	e584140e 	bge	fp,r22,81ce8 <___vfprintf_internal_r+0x1938>
   80c98:	01400274 	movhi	r5,9
   80c9c:	297e5d84 	addi	r5,r5,-1674
   80ca0:	dc402915 	stw	r17,164(sp)
   80ca4:	d9402b15 	stw	r5,172(sp)
   80ca8:	b023883a 	mov	r17,r22
   80cac:	04c001c4 	movi	r19,7
   80cb0:	a82d883a 	mov	r22,r21
   80cb4:	902b883a 	mov	r21,r18
   80cb8:	8025883a 	mov	r18,r16
   80cbc:	dc002c17 	ldw	r16,176(sp)
   80cc0:	00000306 	br	80cd0 <___vfprintf_internal_r+0x920>
   80cc4:	8c7ffc04 	addi	r17,r17,-16
   80cc8:	42000204 	addi	r8,r8,8
   80ccc:	e440110e 	bge	fp,r17,80d14 <___vfprintf_internal_r+0x964>
   80cd0:	18c00404 	addi	r3,r3,16
   80cd4:	10800044 	addi	r2,r2,1
   80cd8:	45000015 	stw	r20,0(r8)
   80cdc:	47000115 	stw	fp,4(r8)
   80ce0:	d8c02015 	stw	r3,128(sp)
   80ce4:	d8801f15 	stw	r2,124(sp)
   80ce8:	98bff60e 	bge	r19,r2,80cc4 <___vfprintf_internal_r+0x914>
   80cec:	d9801e04 	addi	r6,sp,120
   80cf0:	b80b883a 	mov	r5,r23
   80cf4:	8009883a 	mov	r4,r16
   80cf8:	0086ec80 	call	86ec8 <__sprint_r>
   80cfc:	103eae1e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   80d00:	8c7ffc04 	addi	r17,r17,-16
   80d04:	d8c02017 	ldw	r3,128(sp)
   80d08:	d8801f17 	ldw	r2,124(sp)
   80d0c:	da000404 	addi	r8,sp,16
   80d10:	e47fef16 	blt	fp,r17,80cd0 <___vfprintf_internal_r+0x920>
   80d14:	9021883a 	mov	r16,r18
   80d18:	a825883a 	mov	r18,r21
   80d1c:	b02b883a 	mov	r21,r22
   80d20:	882d883a 	mov	r22,r17
   80d24:	dc402917 	ldw	r17,164(sp)
   80d28:	d9002b17 	ldw	r4,172(sp)
   80d2c:	1d87883a 	add	r3,r3,r22
   80d30:	10800044 	addi	r2,r2,1
   80d34:	41000015 	stw	r4,0(r8)
   80d38:	45800115 	stw	r22,4(r8)
   80d3c:	d8c02015 	stw	r3,128(sp)
   80d40:	d8801f15 	stw	r2,124(sp)
   80d44:	010001c4 	movi	r4,7
   80d48:	2081ee16 	blt	r4,r2,81504 <___vfprintf_internal_r+0x1154>
   80d4c:	42000204 	addi	r8,r8,8
   80d50:	9080400c 	andi	r2,r18,256
   80d54:	1001181e 	bne	r2,zero,811b8 <___vfprintf_internal_r+0xe08>
   80d58:	d9402e17 	ldw	r5,184(sp)
   80d5c:	d8801f17 	ldw	r2,124(sp)
   80d60:	44000015 	stw	r16,0(r8)
   80d64:	1947883a 	add	r3,r3,r5
   80d68:	10800044 	addi	r2,r2,1
   80d6c:	41400115 	stw	r5,4(r8)
   80d70:	d8c02015 	stw	r3,128(sp)
   80d74:	d8801f15 	stw	r2,124(sp)
   80d78:	010001c4 	movi	r4,7
   80d7c:	2081d316 	blt	r4,r2,814cc <___vfprintf_internal_r+0x111c>
   80d80:	42000204 	addi	r8,r8,8
   80d84:	9480010c 	andi	r18,r18,4
   80d88:	90003226 	beq	r18,zero,80e54 <___vfprintf_internal_r+0xaa4>
   80d8c:	d9403117 	ldw	r5,196(sp)
   80d90:	d8802a17 	ldw	r2,168(sp)
   80d94:	28a1c83a 	sub	r16,r5,r2
   80d98:	04002e0e 	bge	zero,r16,80e54 <___vfprintf_internal_r+0xaa4>
   80d9c:	04400404 	movi	r17,16
   80da0:	d8801f17 	ldw	r2,124(sp)
   80da4:	8c04a20e 	bge	r17,r16,82030 <___vfprintf_internal_r+0x1c80>
   80da8:	01400274 	movhi	r5,9
   80dac:	297e6184 	addi	r5,r5,-1658
   80db0:	d9403515 	stw	r5,212(sp)
   80db4:	048001c4 	movi	r18,7
   80db8:	dcc02c17 	ldw	r19,176(sp)
   80dbc:	00000306 	br	80dcc <___vfprintf_internal_r+0xa1c>
   80dc0:	843ffc04 	addi	r16,r16,-16
   80dc4:	42000204 	addi	r8,r8,8
   80dc8:	8c00130e 	bge	r17,r16,80e18 <___vfprintf_internal_r+0xa68>
   80dcc:	01000274 	movhi	r4,9
   80dd0:	18c00404 	addi	r3,r3,16
   80dd4:	10800044 	addi	r2,r2,1
   80dd8:	213e6184 	addi	r4,r4,-1658
   80ddc:	41000015 	stw	r4,0(r8)
   80de0:	44400115 	stw	r17,4(r8)
   80de4:	d8c02015 	stw	r3,128(sp)
   80de8:	d8801f15 	stw	r2,124(sp)
   80dec:	90bff40e 	bge	r18,r2,80dc0 <___vfprintf_internal_r+0xa10>
   80df0:	d9801e04 	addi	r6,sp,120
   80df4:	b80b883a 	mov	r5,r23
   80df8:	9809883a 	mov	r4,r19
   80dfc:	0086ec80 	call	86ec8 <__sprint_r>
   80e00:	103e6d1e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   80e04:	843ffc04 	addi	r16,r16,-16
   80e08:	d8c02017 	ldw	r3,128(sp)
   80e0c:	d8801f17 	ldw	r2,124(sp)
   80e10:	da000404 	addi	r8,sp,16
   80e14:	8c3fed16 	blt	r17,r16,80dcc <___vfprintf_internal_r+0xa1c>
   80e18:	d9403517 	ldw	r5,212(sp)
   80e1c:	1c07883a 	add	r3,r3,r16
   80e20:	10800044 	addi	r2,r2,1
   80e24:	41400015 	stw	r5,0(r8)
   80e28:	44000115 	stw	r16,4(r8)
   80e2c:	d8c02015 	stw	r3,128(sp)
   80e30:	d8801f15 	stw	r2,124(sp)
   80e34:	010001c4 	movi	r4,7
   80e38:	2080060e 	bge	r4,r2,80e54 <___vfprintf_internal_r+0xaa4>
   80e3c:	d9002c17 	ldw	r4,176(sp)
   80e40:	d9801e04 	addi	r6,sp,120
   80e44:	b80b883a 	mov	r5,r23
   80e48:	0086ec80 	call	86ec8 <__sprint_r>
   80e4c:	103e5a1e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   80e50:	d8c02017 	ldw	r3,128(sp)
   80e54:	d8803117 	ldw	r2,196(sp)
   80e58:	d9002a17 	ldw	r4,168(sp)
   80e5c:	1100010e 	bge	r2,r4,80e64 <___vfprintf_internal_r+0xab4>
   80e60:	2005883a 	mov	r2,r4
   80e64:	d9402f17 	ldw	r5,188(sp)
   80e68:	288b883a 	add	r5,r5,r2
   80e6c:	d9402f15 	stw	r5,188(sp)
   80e70:	18019e1e 	bne	r3,zero,814ec <___vfprintf_internal_r+0x113c>
   80e74:	a8800007 	ldb	r2,0(r21)
   80e78:	d8001f15 	stw	zero,124(sp)
   80e7c:	da000404 	addi	r8,sp,16
   80e80:	103d851e 	bne	r2,zero,80498 <___vfprintf_internal_r+0xe8>
   80e84:	a821883a 	mov	r16,r21
   80e88:	003d9b06 	br	804f8 <___vfprintf_internal_r+0x148>
   80e8c:	18c03fcc 	andi	r3,r3,255
   80e90:	1805c11e 	bne	r3,zero,82598 <___vfprintf_internal_r+0x21e8>
   80e94:	94800414 	ori	r18,r18,16
   80e98:	9080080c 	andi	r2,r18,32
   80e9c:	10020c26 	beq	r2,zero,816d0 <___vfprintf_internal_r+0x1320>
   80ea0:	d8802d17 	ldw	r2,180(sp)
   80ea4:	d9002917 	ldw	r4,164(sp)
   80ea8:	d8002785 	stb	zero,158(sp)
   80eac:	10c00204 	addi	r3,r2,8
   80eb0:	14c00017 	ldw	r19,0(r2)
   80eb4:	15800117 	ldw	r22,4(r2)
   80eb8:	20040f16 	blt	r4,zero,81ef8 <___vfprintf_internal_r+0x1b48>
   80ebc:	013fdfc4 	movi	r4,-129
   80ec0:	9d84b03a 	or	r2,r19,r22
   80ec4:	d8c02d15 	stw	r3,180(sp)
   80ec8:	9124703a 	and	r18,r18,r4
   80ecc:	0039883a 	mov	fp,zero
   80ed0:	103e891e 	bne	r2,zero,808f8 <___vfprintf_internal_r+0x548>
   80ed4:	d9002917 	ldw	r4,164(sp)
   80ed8:	2002c11e 	bne	r4,zero,819e0 <___vfprintf_internal_r+0x1630>
   80edc:	d8002915 	stw	zero,164(sp)
   80ee0:	d8002e15 	stw	zero,184(sp)
   80ee4:	dc001e04 	addi	r16,sp,120
   80ee8:	003ef806 	br	80acc <___vfprintf_internal_r+0x71c>
   80eec:	18c03fcc 	andi	r3,r3,255
   80ef0:	18059d1e 	bne	r3,zero,82568 <___vfprintf_internal_r+0x21b8>
   80ef4:	01400274 	movhi	r5,9
   80ef8:	297e5104 	addi	r5,r5,-1724
   80efc:	d9403915 	stw	r5,228(sp)
   80f00:	9080080c 	andi	r2,r18,32
   80f04:	10005226 	beq	r2,zero,81050 <___vfprintf_internal_r+0xca0>
   80f08:	d8802d17 	ldw	r2,180(sp)
   80f0c:	14c00017 	ldw	r19,0(r2)
   80f10:	15800117 	ldw	r22,4(r2)
   80f14:	10800204 	addi	r2,r2,8
   80f18:	d8802d15 	stw	r2,180(sp)
   80f1c:	9080004c 	andi	r2,r18,1
   80f20:	10019026 	beq	r2,zero,81564 <___vfprintf_internal_r+0x11b4>
   80f24:	9d84b03a 	or	r2,r19,r22
   80f28:	10036926 	beq	r2,zero,81cd0 <___vfprintf_internal_r+0x1920>
   80f2c:	d8c02917 	ldw	r3,164(sp)
   80f30:	00800c04 	movi	r2,48
   80f34:	d8802705 	stb	r2,156(sp)
   80f38:	dc402745 	stb	r17,157(sp)
   80f3c:	d8002785 	stb	zero,158(sp)
   80f40:	90800094 	ori	r2,r18,2
   80f44:	18045d16 	blt	r3,zero,820bc <___vfprintf_internal_r+0x1d0c>
   80f48:	00bfdfc4 	movi	r2,-129
   80f4c:	90a4703a 	and	r18,r18,r2
   80f50:	94800094 	ori	r18,r18,2
   80f54:	0039883a 	mov	fp,zero
   80f58:	d9003917 	ldw	r4,228(sp)
   80f5c:	dc001e04 	addi	r16,sp,120
   80f60:	988003cc 	andi	r2,r19,15
   80f64:	b006973a 	slli	r3,r22,28
   80f68:	2085883a 	add	r2,r4,r2
   80f6c:	9826d13a 	srli	r19,r19,4
   80f70:	10800003 	ldbu	r2,0(r2)
   80f74:	b02cd13a 	srli	r22,r22,4
   80f78:	843fffc4 	addi	r16,r16,-1
   80f7c:	1ce6b03a 	or	r19,r3,r19
   80f80:	80800005 	stb	r2,0(r16)
   80f84:	9d84b03a 	or	r2,r19,r22
   80f88:	103ff51e 	bne	r2,zero,80f60 <___vfprintf_internal_r+0xbb0>
   80f8c:	d8c02817 	ldw	r3,160(sp)
   80f90:	1c07c83a 	sub	r3,r3,r16
   80f94:	d8c02e15 	stw	r3,184(sp)
   80f98:	003ecc06 	br	80acc <___vfprintf_internal_r+0x71c>
   80f9c:	18c03fcc 	andi	r3,r3,255
   80fa0:	183e9f26 	beq	r3,zero,80a20 <___vfprintf_internal_r+0x670>
   80fa4:	d9c02785 	stb	r7,158(sp)
   80fa8:	003e9d06 	br	80a20 <___vfprintf_internal_r+0x670>
   80fac:	00c00044 	movi	r3,1
   80fb0:	01c00ac4 	movi	r7,43
   80fb4:	ac400007 	ldb	r17,0(r21)
   80fb8:	003d5e06 	br	80534 <___vfprintf_internal_r+0x184>
   80fbc:	94800814 	ori	r18,r18,32
   80fc0:	ac400007 	ldb	r17,0(r21)
   80fc4:	003d5b06 	br	80534 <___vfprintf_internal_r+0x184>
   80fc8:	d8c02d17 	ldw	r3,180(sp)
   80fcc:	d8002785 	stb	zero,158(sp)
   80fd0:	1c000017 	ldw	r16,0(r3)
   80fd4:	1cc00104 	addi	r19,r3,4
   80fd8:	80041926 	beq	r16,zero,82040 <___vfprintf_internal_r+0x1c90>
   80fdc:	d9002917 	ldw	r4,164(sp)
   80fe0:	2003d016 	blt	r4,zero,81f24 <___vfprintf_internal_r+0x1b74>
   80fe4:	200d883a 	mov	r6,r4
   80fe8:	000b883a 	mov	r5,zero
   80fec:	8009883a 	mov	r4,r16
   80ff0:	da003d15 	stw	r8,244(sp)
   80ff4:	00857040 	call	85704 <memchr>
   80ff8:	da003d17 	ldw	r8,244(sp)
   80ffc:	10045426 	beq	r2,zero,82150 <___vfprintf_internal_r+0x1da0>
   81000:	1405c83a 	sub	r2,r2,r16
   81004:	d8802e15 	stw	r2,184(sp)
   81008:	1003cc16 	blt	r2,zero,81f3c <___vfprintf_internal_r+0x1b8c>
   8100c:	df002783 	ldbu	fp,158(sp)
   81010:	d8802a15 	stw	r2,168(sp)
   81014:	dcc02d15 	stw	r19,180(sp)
   81018:	d8002915 	stw	zero,164(sp)
   8101c:	d8003215 	stw	zero,200(sp)
   81020:	003eb006 	br	80ae4 <___vfprintf_internal_r+0x734>
   81024:	18c03fcc 	andi	r3,r3,255
   81028:	183f9b26 	beq	r3,zero,80e98 <___vfprintf_internal_r+0xae8>
   8102c:	d9c02785 	stb	r7,158(sp)
   81030:	003f9906 	br	80e98 <___vfprintf_internal_r+0xae8>
   81034:	18c03fcc 	andi	r3,r3,255
   81038:	1805551e 	bne	r3,zero,82590 <___vfprintf_internal_r+0x21e0>
   8103c:	01400274 	movhi	r5,9
   81040:	297e5604 	addi	r5,r5,-1704
   81044:	d9403915 	stw	r5,228(sp)
   81048:	9080080c 	andi	r2,r18,32
   8104c:	103fae1e 	bne	r2,zero,80f08 <___vfprintf_internal_r+0xb58>
   81050:	9080040c 	andi	r2,r18,16
   81054:	1002de26 	beq	r2,zero,81bd0 <___vfprintf_internal_r+0x1820>
   81058:	d8c02d17 	ldw	r3,180(sp)
   8105c:	002d883a 	mov	r22,zero
   81060:	1cc00017 	ldw	r19,0(r3)
   81064:	18c00104 	addi	r3,r3,4
   81068:	d8c02d15 	stw	r3,180(sp)
   8106c:	003fab06 	br	80f1c <___vfprintf_internal_r+0xb6c>
   81070:	38803fcc 	andi	r2,r7,255
   81074:	1080201c 	xori	r2,r2,128
   81078:	10bfe004 	addi	r2,r2,-128
   8107c:	1002d21e 	bne	r2,zero,81bc8 <___vfprintf_internal_r+0x1818>
   81080:	00c00044 	movi	r3,1
   81084:	01c00804 	movi	r7,32
   81088:	ac400007 	ldb	r17,0(r21)
   8108c:	003d2906 	br	80534 <___vfprintf_internal_r+0x184>
   81090:	94800054 	ori	r18,r18,1
   81094:	ac400007 	ldb	r17,0(r21)
   81098:	003d2606 	br	80534 <___vfprintf_internal_r+0x184>
   8109c:	18c03fcc 	andi	r3,r3,255
   810a0:	183e0526 	beq	r3,zero,808b8 <___vfprintf_internal_r+0x508>
   810a4:	d9c02785 	stb	r7,158(sp)
   810a8:	003e0306 	br	808b8 <___vfprintf_internal_r+0x508>
   810ac:	94801014 	ori	r18,r18,64
   810b0:	ac400007 	ldb	r17,0(r21)
   810b4:	003d1f06 	br	80534 <___vfprintf_internal_r+0x184>
   810b8:	ac400007 	ldb	r17,0(r21)
   810bc:	8a438726 	beq	r17,r9,81edc <___vfprintf_internal_r+0x1b2c>
   810c0:	94800414 	ori	r18,r18,16
   810c4:	003d1b06 	br	80534 <___vfprintf_internal_r+0x184>
   810c8:	18c03fcc 	andi	r3,r3,255
   810cc:	1805341e 	bne	r3,zero,825a0 <___vfprintf_internal_r+0x21f0>
   810d0:	9080080c 	andi	r2,r18,32
   810d4:	1002cd26 	beq	r2,zero,81c0c <___vfprintf_internal_r+0x185c>
   810d8:	d9402d17 	ldw	r5,180(sp)
   810dc:	d9002f17 	ldw	r4,188(sp)
   810e0:	28800017 	ldw	r2,0(r5)
   810e4:	2007d7fa 	srai	r3,r4,31
   810e8:	29400104 	addi	r5,r5,4
   810ec:	d9402d15 	stw	r5,180(sp)
   810f0:	11000015 	stw	r4,0(r2)
   810f4:	10c00115 	stw	r3,4(r2)
   810f8:	003ce506 	br	80490 <___vfprintf_internal_r+0xe0>
   810fc:	d8c02d17 	ldw	r3,180(sp)
   81100:	d9002d17 	ldw	r4,180(sp)
   81104:	d8002785 	stb	zero,158(sp)
   81108:	18800017 	ldw	r2,0(r3)
   8110c:	21000104 	addi	r4,r4,4
   81110:	00c00044 	movi	r3,1
   81114:	d8c02a15 	stw	r3,168(sp)
   81118:	d8801405 	stb	r2,80(sp)
   8111c:	d9002d15 	stw	r4,180(sp)
   81120:	d8c02e15 	stw	r3,184(sp)
   81124:	d8002915 	stw	zero,164(sp)
   81128:	d8003215 	stw	zero,200(sp)
   8112c:	dc001404 	addi	r16,sp,80
   81130:	0039883a 	mov	fp,zero
   81134:	003e7206 	br	80b00 <___vfprintf_internal_r+0x750>
   81138:	01000274 	movhi	r4,9
   8113c:	213e5604 	addi	r4,r4,-1704
   81140:	0039883a 	mov	fp,zero
   81144:	d9003915 	stw	r4,228(sp)
   81148:	04401e04 	movi	r17,120
   8114c:	003f8206 	br	80f58 <___vfprintf_internal_r+0xba8>
   81150:	18c03fcc 	andi	r3,r3,255
   81154:	1805061e 	bne	r3,zero,82570 <___vfprintf_internal_r+0x21c0>
   81158:	883d9126 	beq	r17,zero,807a0 <___vfprintf_internal_r+0x3f0>
   8115c:	00c00044 	movi	r3,1
   81160:	d8c02a15 	stw	r3,168(sp)
   81164:	dc401405 	stb	r17,80(sp)
   81168:	d8002785 	stb	zero,158(sp)
   8116c:	003fec06 	br	81120 <___vfprintf_internal_r+0xd70>
   81170:	01400274 	movhi	r5,9
   81174:	297e5604 	addi	r5,r5,-1704
   81178:	d9403915 	stw	r5,228(sp)
   8117c:	d8c02d15 	stw	r3,180(sp)
   81180:	1025883a 	mov	r18,r2
   81184:	04401e04 	movi	r17,120
   81188:	9d84b03a 	or	r2,r19,r22
   8118c:	1000fc1e 	bne	r2,zero,81580 <___vfprintf_internal_r+0x11d0>
   81190:	0039883a 	mov	fp,zero
   81194:	00800084 	movi	r2,2
   81198:	10803fcc 	andi	r2,r2,255
   8119c:	00c00044 	movi	r3,1
   811a0:	10c20f26 	beq	r2,r3,819e0 <___vfprintf_internal_r+0x1630>
   811a4:	00c00084 	movi	r3,2
   811a8:	10fd6326 	beq	r2,r3,80738 <___vfprintf_internal_r+0x388>
   811ac:	003e2d06 	br	80a64 <___vfprintf_internal_r+0x6b4>
   811b0:	d8c02017 	ldw	r3,128(sp)
   811b4:	003e9306 	br	80c04 <___vfprintf_internal_r+0x854>
   811b8:	00801944 	movi	r2,101
   811bc:	14407e0e 	bge	r2,r17,813b8 <___vfprintf_internal_r+0x1008>
   811c0:	d9003617 	ldw	r4,216(sp)
   811c4:	d9403817 	ldw	r5,224(sp)
   811c8:	000d883a 	mov	r6,zero
   811cc:	000f883a 	mov	r7,zero
   811d0:	d8c03c15 	stw	r3,240(sp)
   811d4:	da003d15 	stw	r8,244(sp)
   811d8:	008b6bc0 	call	8b6bc <__eqdf2>
   811dc:	d8c03c17 	ldw	r3,240(sp)
   811e0:	da003d17 	ldw	r8,244(sp)
   811e4:	1000f71e 	bne	r2,zero,815c4 <___vfprintf_internal_r+0x1214>
   811e8:	d8801f17 	ldw	r2,124(sp)
   811ec:	01000274 	movhi	r4,9
   811f0:	213e5d04 	addi	r4,r4,-1676
   811f4:	18c00044 	addi	r3,r3,1
   811f8:	10800044 	addi	r2,r2,1
   811fc:	41000015 	stw	r4,0(r8)
   81200:	01000044 	movi	r4,1
   81204:	41000115 	stw	r4,4(r8)
   81208:	d8c02015 	stw	r3,128(sp)
   8120c:	d8801f15 	stw	r2,124(sp)
   81210:	010001c4 	movi	r4,7
   81214:	2082b816 	blt	r4,r2,81cf8 <___vfprintf_internal_r+0x1948>
   81218:	42000204 	addi	r8,r8,8
   8121c:	d8802617 	ldw	r2,152(sp)
   81220:	d9403317 	ldw	r5,204(sp)
   81224:	11400216 	blt	r2,r5,81230 <___vfprintf_internal_r+0xe80>
   81228:	9080004c 	andi	r2,r18,1
   8122c:	103ed526 	beq	r2,zero,80d84 <___vfprintf_internal_r+0x9d4>
   81230:	d8803717 	ldw	r2,220(sp)
   81234:	d9003417 	ldw	r4,208(sp)
   81238:	d9403717 	ldw	r5,220(sp)
   8123c:	1887883a 	add	r3,r3,r2
   81240:	d8801f17 	ldw	r2,124(sp)
   81244:	41000015 	stw	r4,0(r8)
   81248:	41400115 	stw	r5,4(r8)
   8124c:	10800044 	addi	r2,r2,1
   81250:	d8c02015 	stw	r3,128(sp)
   81254:	d8801f15 	stw	r2,124(sp)
   81258:	010001c4 	movi	r4,7
   8125c:	20832916 	blt	r4,r2,81f04 <___vfprintf_internal_r+0x1b54>
   81260:	42000204 	addi	r8,r8,8
   81264:	d8803317 	ldw	r2,204(sp)
   81268:	143fffc4 	addi	r16,r2,-1
   8126c:	043ec50e 	bge	zero,r16,80d84 <___vfprintf_internal_r+0x9d4>
   81270:	04400404 	movi	r17,16
   81274:	d8801f17 	ldw	r2,124(sp)
   81278:	8c00880e 	bge	r17,r16,8149c <___vfprintf_internal_r+0x10ec>
   8127c:	01400274 	movhi	r5,9
   81280:	297e5d84 	addi	r5,r5,-1674
   81284:	d9402b15 	stw	r5,172(sp)
   81288:	058001c4 	movi	r22,7
   8128c:	dcc02c17 	ldw	r19,176(sp)
   81290:	00000306 	br	812a0 <___vfprintf_internal_r+0xef0>
   81294:	42000204 	addi	r8,r8,8
   81298:	843ffc04 	addi	r16,r16,-16
   8129c:	8c00820e 	bge	r17,r16,814a8 <___vfprintf_internal_r+0x10f8>
   812a0:	18c00404 	addi	r3,r3,16
   812a4:	10800044 	addi	r2,r2,1
   812a8:	45000015 	stw	r20,0(r8)
   812ac:	44400115 	stw	r17,4(r8)
   812b0:	d8c02015 	stw	r3,128(sp)
   812b4:	d8801f15 	stw	r2,124(sp)
   812b8:	b0bff60e 	bge	r22,r2,81294 <___vfprintf_internal_r+0xee4>
   812bc:	d9801e04 	addi	r6,sp,120
   812c0:	b80b883a 	mov	r5,r23
   812c4:	9809883a 	mov	r4,r19
   812c8:	0086ec80 	call	86ec8 <__sprint_r>
   812cc:	103d3a1e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   812d0:	d8c02017 	ldw	r3,128(sp)
   812d4:	d8801f17 	ldw	r2,124(sp)
   812d8:	da000404 	addi	r8,sp,16
   812dc:	003fee06 	br	81298 <___vfprintf_internal_r+0xee8>
   812e0:	d9403117 	ldw	r5,196(sp)
   812e4:	d8802a17 	ldw	r2,168(sp)
   812e8:	28adc83a 	sub	r22,r5,r2
   812ec:	05be630e 	bge	zero,r22,80c7c <___vfprintf_internal_r+0x8cc>
   812f0:	07000404 	movi	fp,16
   812f4:	d8801f17 	ldw	r2,124(sp)
   812f8:	e5838f0e 	bge	fp,r22,82138 <___vfprintf_internal_r+0x1d88>
   812fc:	01400274 	movhi	r5,9
   81300:	297e5d84 	addi	r5,r5,-1674
   81304:	dc403015 	stw	r17,192(sp)
   81308:	d9402b15 	stw	r5,172(sp)
   8130c:	b023883a 	mov	r17,r22
   81310:	04c001c4 	movi	r19,7
   81314:	a82d883a 	mov	r22,r21
   81318:	902b883a 	mov	r21,r18
   8131c:	8025883a 	mov	r18,r16
   81320:	dc002c17 	ldw	r16,176(sp)
   81324:	00000306 	br	81334 <___vfprintf_internal_r+0xf84>
   81328:	8c7ffc04 	addi	r17,r17,-16
   8132c:	42000204 	addi	r8,r8,8
   81330:	e440110e 	bge	fp,r17,81378 <___vfprintf_internal_r+0xfc8>
   81334:	18c00404 	addi	r3,r3,16
   81338:	10800044 	addi	r2,r2,1
   8133c:	45000015 	stw	r20,0(r8)
   81340:	47000115 	stw	fp,4(r8)
   81344:	d8c02015 	stw	r3,128(sp)
   81348:	d8801f15 	stw	r2,124(sp)
   8134c:	98bff60e 	bge	r19,r2,81328 <___vfprintf_internal_r+0xf78>
   81350:	d9801e04 	addi	r6,sp,120
   81354:	b80b883a 	mov	r5,r23
   81358:	8009883a 	mov	r4,r16
   8135c:	0086ec80 	call	86ec8 <__sprint_r>
   81360:	103d151e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   81364:	8c7ffc04 	addi	r17,r17,-16
   81368:	d8c02017 	ldw	r3,128(sp)
   8136c:	d8801f17 	ldw	r2,124(sp)
   81370:	da000404 	addi	r8,sp,16
   81374:	e47fef16 	blt	fp,r17,81334 <___vfprintf_internal_r+0xf84>
   81378:	9021883a 	mov	r16,r18
   8137c:	a825883a 	mov	r18,r21
   81380:	b02b883a 	mov	r21,r22
   81384:	882d883a 	mov	r22,r17
   81388:	dc403017 	ldw	r17,192(sp)
   8138c:	d9002b17 	ldw	r4,172(sp)
   81390:	1d87883a 	add	r3,r3,r22
   81394:	10800044 	addi	r2,r2,1
   81398:	41000015 	stw	r4,0(r8)
   8139c:	45800115 	stw	r22,4(r8)
   813a0:	d8c02015 	stw	r3,128(sp)
   813a4:	d8801f15 	stw	r2,124(sp)
   813a8:	010001c4 	movi	r4,7
   813ac:	20818e16 	blt	r4,r2,819e8 <___vfprintf_internal_r+0x1638>
   813b0:	42000204 	addi	r8,r8,8
   813b4:	003e3106 	br	80c7c <___vfprintf_internal_r+0x8cc>
   813b8:	d9403317 	ldw	r5,204(sp)
   813bc:	00800044 	movi	r2,1
   813c0:	18c00044 	addi	r3,r3,1
   813c4:	1141530e 	bge	r2,r5,81914 <___vfprintf_internal_r+0x1564>
   813c8:	dc401f17 	ldw	r17,124(sp)
   813cc:	00800044 	movi	r2,1
   813d0:	40800115 	stw	r2,4(r8)
   813d4:	8c400044 	addi	r17,r17,1
   813d8:	44000015 	stw	r16,0(r8)
   813dc:	d8c02015 	stw	r3,128(sp)
   813e0:	dc401f15 	stw	r17,124(sp)
   813e4:	008001c4 	movi	r2,7
   813e8:	14416b16 	blt	r2,r17,81998 <___vfprintf_internal_r+0x15e8>
   813ec:	42000204 	addi	r8,r8,8
   813f0:	d8803717 	ldw	r2,220(sp)
   813f4:	d9003417 	ldw	r4,208(sp)
   813f8:	8c400044 	addi	r17,r17,1
   813fc:	10c7883a 	add	r3,r2,r3
   81400:	40800115 	stw	r2,4(r8)
   81404:	41000015 	stw	r4,0(r8)
   81408:	d8c02015 	stw	r3,128(sp)
   8140c:	dc401f15 	stw	r17,124(sp)
   81410:	008001c4 	movi	r2,7
   81414:	14416916 	blt	r2,r17,819bc <___vfprintf_internal_r+0x160c>
   81418:	45800204 	addi	r22,r8,8
   8141c:	d9003617 	ldw	r4,216(sp)
   81420:	d9403817 	ldw	r5,224(sp)
   81424:	000d883a 	mov	r6,zero
   81428:	000f883a 	mov	r7,zero
   8142c:	d8c03c15 	stw	r3,240(sp)
   81430:	008b6bc0 	call	8b6bc <__eqdf2>
   81434:	d8c03c17 	ldw	r3,240(sp)
   81438:	1000bc26 	beq	r2,zero,8172c <___vfprintf_internal_r+0x137c>
   8143c:	d9403317 	ldw	r5,204(sp)
   81440:	84000044 	addi	r16,r16,1
   81444:	8c400044 	addi	r17,r17,1
   81448:	28bfffc4 	addi	r2,r5,-1
   8144c:	1887883a 	add	r3,r3,r2
   81450:	b0800115 	stw	r2,4(r22)
   81454:	b4000015 	stw	r16,0(r22)
   81458:	d8c02015 	stw	r3,128(sp)
   8145c:	dc401f15 	stw	r17,124(sp)
   81460:	008001c4 	movi	r2,7
   81464:	14414316 	blt	r2,r17,81974 <___vfprintf_internal_r+0x15c4>
   81468:	b5800204 	addi	r22,r22,8
   8146c:	d9003a17 	ldw	r4,232(sp)
   81470:	df0022c4 	addi	fp,sp,139
   81474:	8c400044 	addi	r17,r17,1
   81478:	20c7883a 	add	r3,r4,r3
   8147c:	b7000015 	stw	fp,0(r22)
   81480:	b1000115 	stw	r4,4(r22)
   81484:	d8c02015 	stw	r3,128(sp)
   81488:	dc401f15 	stw	r17,124(sp)
   8148c:	008001c4 	movi	r2,7
   81490:	14400e16 	blt	r2,r17,814cc <___vfprintf_internal_r+0x111c>
   81494:	b2000204 	addi	r8,r22,8
   81498:	003e3a06 	br	80d84 <___vfprintf_internal_r+0x9d4>
   8149c:	01000274 	movhi	r4,9
   814a0:	213e5d84 	addi	r4,r4,-1674
   814a4:	d9002b15 	stw	r4,172(sp)
   814a8:	d9002b17 	ldw	r4,172(sp)
   814ac:	1c07883a 	add	r3,r3,r16
   814b0:	44000115 	stw	r16,4(r8)
   814b4:	41000015 	stw	r4,0(r8)
   814b8:	10800044 	addi	r2,r2,1
   814bc:	d8c02015 	stw	r3,128(sp)
   814c0:	d8801f15 	stw	r2,124(sp)
   814c4:	010001c4 	movi	r4,7
   814c8:	20be2d0e 	bge	r4,r2,80d80 <___vfprintf_internal_r+0x9d0>
   814cc:	d9002c17 	ldw	r4,176(sp)
   814d0:	d9801e04 	addi	r6,sp,120
   814d4:	b80b883a 	mov	r5,r23
   814d8:	0086ec80 	call	86ec8 <__sprint_r>
   814dc:	103cb61e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   814e0:	d8c02017 	ldw	r3,128(sp)
   814e4:	da000404 	addi	r8,sp,16
   814e8:	003e2606 	br	80d84 <___vfprintf_internal_r+0x9d4>
   814ec:	d9002c17 	ldw	r4,176(sp)
   814f0:	d9801e04 	addi	r6,sp,120
   814f4:	b80b883a 	mov	r5,r23
   814f8:	0086ec80 	call	86ec8 <__sprint_r>
   814fc:	103e5d26 	beq	r2,zero,80e74 <___vfprintf_internal_r+0xac4>
   81500:	003cad06 	br	807b8 <___vfprintf_internal_r+0x408>
   81504:	d9002c17 	ldw	r4,176(sp)
   81508:	d9801e04 	addi	r6,sp,120
   8150c:	b80b883a 	mov	r5,r23
   81510:	0086ec80 	call	86ec8 <__sprint_r>
   81514:	103ca81e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   81518:	d8c02017 	ldw	r3,128(sp)
   8151c:	da000404 	addi	r8,sp,16
   81520:	003e0b06 	br	80d50 <___vfprintf_internal_r+0x9a0>
   81524:	d9002c17 	ldw	r4,176(sp)
   81528:	d9801e04 	addi	r6,sp,120
   8152c:	b80b883a 	mov	r5,r23
   81530:	0086ec80 	call	86ec8 <__sprint_r>
   81534:	103ca01e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   81538:	d8c02017 	ldw	r3,128(sp)
   8153c:	da000404 	addi	r8,sp,16
   81540:	003dbd06 	br	80c38 <___vfprintf_internal_r+0x888>
   81544:	d9002c17 	ldw	r4,176(sp)
   81548:	d9801e04 	addi	r6,sp,120
   8154c:	b80b883a 	mov	r5,r23
   81550:	0086ec80 	call	86ec8 <__sprint_r>
   81554:	103c981e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   81558:	d8c02017 	ldw	r3,128(sp)
   8155c:	da000404 	addi	r8,sp,16
   81560:	003dc306 	br	80c70 <___vfprintf_internal_r+0x8c0>
   81564:	d8802917 	ldw	r2,164(sp)
   81568:	d8002785 	stb	zero,158(sp)
   8156c:	103f0616 	blt	r2,zero,81188 <___vfprintf_internal_r+0xdd8>
   81570:	00ffdfc4 	movi	r3,-129
   81574:	9d84b03a 	or	r2,r19,r22
   81578:	90e4703a 	and	r18,r18,r3
   8157c:	103c6b26 	beq	r2,zero,8072c <___vfprintf_internal_r+0x37c>
   81580:	0039883a 	mov	fp,zero
   81584:	003e7406 	br	80f58 <___vfprintf_internal_r+0xba8>
   81588:	9080040c 	andi	r2,r18,16
   8158c:	1001b326 	beq	r2,zero,81c5c <___vfprintf_internal_r+0x18ac>
   81590:	d9002d17 	ldw	r4,180(sp)
   81594:	d9402917 	ldw	r5,164(sp)
   81598:	d8002785 	stb	zero,158(sp)
   8159c:	20800104 	addi	r2,r4,4
   815a0:	24c00017 	ldw	r19,0(r4)
   815a4:	002d883a 	mov	r22,zero
   815a8:	2801b516 	blt	r5,zero,81c80 <___vfprintf_internal_r+0x18d0>
   815ac:	00ffdfc4 	movi	r3,-129
   815b0:	d8802d15 	stw	r2,180(sp)
   815b4:	90e4703a 	and	r18,r18,r3
   815b8:	983d2726 	beq	r19,zero,80a58 <___vfprintf_internal_r+0x6a8>
   815bc:	0039883a 	mov	fp,zero
   815c0:	003d2a06 	br	80a6c <___vfprintf_internal_r+0x6bc>
   815c4:	dc402617 	ldw	r17,152(sp)
   815c8:	0441d30e 	bge	zero,r17,81d18 <___vfprintf_internal_r+0x1968>
   815cc:	dc403217 	ldw	r17,200(sp)
   815d0:	d8803317 	ldw	r2,204(sp)
   815d4:	1440010e 	bge	r2,r17,815dc <___vfprintf_internal_r+0x122c>
   815d8:	1023883a 	mov	r17,r2
   815dc:	04400a0e 	bge	zero,r17,81608 <___vfprintf_internal_r+0x1258>
   815e0:	d8801f17 	ldw	r2,124(sp)
   815e4:	1c47883a 	add	r3,r3,r17
   815e8:	44000015 	stw	r16,0(r8)
   815ec:	10800044 	addi	r2,r2,1
   815f0:	44400115 	stw	r17,4(r8)
   815f4:	d8c02015 	stw	r3,128(sp)
   815f8:	d8801f15 	stw	r2,124(sp)
   815fc:	010001c4 	movi	r4,7
   81600:	20826516 	blt	r4,r2,81f98 <___vfprintf_internal_r+0x1be8>
   81604:	42000204 	addi	r8,r8,8
   81608:	88026116 	blt	r17,zero,81f90 <___vfprintf_internal_r+0x1be0>
   8160c:	d9003217 	ldw	r4,200(sp)
   81610:	2463c83a 	sub	r17,r4,r17
   81614:	04407b0e 	bge	zero,r17,81804 <___vfprintf_internal_r+0x1454>
   81618:	05800404 	movi	r22,16
   8161c:	d8801f17 	ldw	r2,124(sp)
   81620:	b4419d0e 	bge	r22,r17,81c98 <___vfprintf_internal_r+0x18e8>
   81624:	01000274 	movhi	r4,9
   81628:	213e5d84 	addi	r4,r4,-1674
   8162c:	d9002b15 	stw	r4,172(sp)
   81630:	070001c4 	movi	fp,7
   81634:	dcc02c17 	ldw	r19,176(sp)
   81638:	00000306 	br	81648 <___vfprintf_internal_r+0x1298>
   8163c:	42000204 	addi	r8,r8,8
   81640:	8c7ffc04 	addi	r17,r17,-16
   81644:	b441970e 	bge	r22,r17,81ca4 <___vfprintf_internal_r+0x18f4>
   81648:	18c00404 	addi	r3,r3,16
   8164c:	10800044 	addi	r2,r2,1
   81650:	45000015 	stw	r20,0(r8)
   81654:	45800115 	stw	r22,4(r8)
   81658:	d8c02015 	stw	r3,128(sp)
   8165c:	d8801f15 	stw	r2,124(sp)
   81660:	e0bff60e 	bge	fp,r2,8163c <___vfprintf_internal_r+0x128c>
   81664:	d9801e04 	addi	r6,sp,120
   81668:	b80b883a 	mov	r5,r23
   8166c:	9809883a 	mov	r4,r19
   81670:	0086ec80 	call	86ec8 <__sprint_r>
   81674:	103c501e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   81678:	d8c02017 	ldw	r3,128(sp)
   8167c:	d8801f17 	ldw	r2,124(sp)
   81680:	da000404 	addi	r8,sp,16
   81684:	003fee06 	br	81640 <___vfprintf_internal_r+0x1290>
   81688:	d9002c17 	ldw	r4,176(sp)
   8168c:	d9801e04 	addi	r6,sp,120
   81690:	b80b883a 	mov	r5,r23
   81694:	0086ec80 	call	86ec8 <__sprint_r>
   81698:	103c471e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   8169c:	d8c02017 	ldw	r3,128(sp)
   816a0:	df002787 	ldb	fp,158(sp)
   816a4:	da000404 	addi	r8,sp,16
   816a8:	003d5606 	br	80c04 <___vfprintf_internal_r+0x854>
   816ac:	9080040c 	andi	r2,r18,16
   816b0:	10016126 	beq	r2,zero,81c38 <___vfprintf_internal_r+0x1888>
   816b4:	d8802d17 	ldw	r2,180(sp)
   816b8:	14c00017 	ldw	r19,0(r2)
   816bc:	10800104 	addi	r2,r2,4
   816c0:	d8802d15 	stw	r2,180(sp)
   816c4:	982dd7fa 	srai	r22,r19,31
   816c8:	b005883a 	mov	r2,r22
   816cc:	003c8206 	br	808d8 <___vfprintf_internal_r+0x528>
   816d0:	9080040c 	andi	r2,r18,16
   816d4:	10003526 	beq	r2,zero,817ac <___vfprintf_internal_r+0x13fc>
   816d8:	d9402d17 	ldw	r5,180(sp)
   816dc:	d8c02917 	ldw	r3,164(sp)
   816e0:	d8002785 	stb	zero,158(sp)
   816e4:	28800104 	addi	r2,r5,4
   816e8:	2cc00017 	ldw	r19,0(r5)
   816ec:	002d883a 	mov	r22,zero
   816f0:	18003716 	blt	r3,zero,817d0 <___vfprintf_internal_r+0x1420>
   816f4:	00ffdfc4 	movi	r3,-129
   816f8:	d8802d15 	stw	r2,180(sp)
   816fc:	90e4703a 	and	r18,r18,r3
   81700:	0039883a 	mov	fp,zero
   81704:	983df326 	beq	r19,zero,80ed4 <___vfprintf_internal_r+0xb24>
   81708:	00800244 	movi	r2,9
   8170c:	14fc7b36 	bltu	r2,r19,808fc <___vfprintf_internal_r+0x54c>
   81710:	d8c02817 	ldw	r3,160(sp)
   81714:	dc001dc4 	addi	r16,sp,119
   81718:	9cc00c04 	addi	r19,r19,48
   8171c:	1c07c83a 	sub	r3,r3,r16
   81720:	dcc01dc5 	stb	r19,119(sp)
   81724:	d8c02e15 	stw	r3,184(sp)
   81728:	003ce806 	br	80acc <___vfprintf_internal_r+0x71c>
   8172c:	d8803317 	ldw	r2,204(sp)
   81730:	143fffc4 	addi	r16,r2,-1
   81734:	043f4d0e 	bge	zero,r16,8146c <___vfprintf_internal_r+0x10bc>
   81738:	07000404 	movi	fp,16
   8173c:	e400810e 	bge	fp,r16,81944 <___vfprintf_internal_r+0x1594>
   81740:	01400274 	movhi	r5,9
   81744:	297e5d84 	addi	r5,r5,-1674
   81748:	d9402b15 	stw	r5,172(sp)
   8174c:	01c001c4 	movi	r7,7
   81750:	dcc02c17 	ldw	r19,176(sp)
   81754:	00000306 	br	81764 <___vfprintf_internal_r+0x13b4>
   81758:	b5800204 	addi	r22,r22,8
   8175c:	843ffc04 	addi	r16,r16,-16
   81760:	e4007b0e 	bge	fp,r16,81950 <___vfprintf_internal_r+0x15a0>
   81764:	18c00404 	addi	r3,r3,16
   81768:	8c400044 	addi	r17,r17,1
   8176c:	b5000015 	stw	r20,0(r22)
   81770:	b7000115 	stw	fp,4(r22)
   81774:	d8c02015 	stw	r3,128(sp)
   81778:	dc401f15 	stw	r17,124(sp)
   8177c:	3c7ff60e 	bge	r7,r17,81758 <___vfprintf_internal_r+0x13a8>
   81780:	d9801e04 	addi	r6,sp,120
   81784:	b80b883a 	mov	r5,r23
   81788:	9809883a 	mov	r4,r19
   8178c:	d9c03c15 	stw	r7,240(sp)
   81790:	0086ec80 	call	86ec8 <__sprint_r>
   81794:	d9c03c17 	ldw	r7,240(sp)
   81798:	103c071e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   8179c:	d8c02017 	ldw	r3,128(sp)
   817a0:	dc401f17 	ldw	r17,124(sp)
   817a4:	dd800404 	addi	r22,sp,16
   817a8:	003fec06 	br	8175c <___vfprintf_internal_r+0x13ac>
   817ac:	9080100c 	andi	r2,r18,64
   817b0:	d8002785 	stb	zero,158(sp)
   817b4:	10010e26 	beq	r2,zero,81bf0 <___vfprintf_internal_r+0x1840>
   817b8:	d9002d17 	ldw	r4,180(sp)
   817bc:	d9402917 	ldw	r5,164(sp)
   817c0:	002d883a 	mov	r22,zero
   817c4:	20800104 	addi	r2,r4,4
   817c8:	24c0000b 	ldhu	r19,0(r4)
   817cc:	283fc90e 	bge	r5,zero,816f4 <___vfprintf_internal_r+0x1344>
   817d0:	d8802d15 	stw	r2,180(sp)
   817d4:	0039883a 	mov	fp,zero
   817d8:	9d84b03a 	or	r2,r19,r22
   817dc:	103c461e 	bne	r2,zero,808f8 <___vfprintf_internal_r+0x548>
   817e0:	00800044 	movi	r2,1
   817e4:	003e6c06 	br	81198 <___vfprintf_internal_r+0xde8>
   817e8:	d9002c17 	ldw	r4,176(sp)
   817ec:	d9801e04 	addi	r6,sp,120
   817f0:	b80b883a 	mov	r5,r23
   817f4:	0086ec80 	call	86ec8 <__sprint_r>
   817f8:	103bef1e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   817fc:	d8c02017 	ldw	r3,128(sp)
   81800:	da000404 	addi	r8,sp,16
   81804:	d9003217 	ldw	r4,200(sp)
   81808:	d8802617 	ldw	r2,152(sp)
   8180c:	d9403317 	ldw	r5,204(sp)
   81810:	8123883a 	add	r17,r16,r4
   81814:	11400216 	blt	r2,r5,81820 <___vfprintf_internal_r+0x1470>
   81818:	9100004c 	andi	r4,r18,1
   8181c:	20000d26 	beq	r4,zero,81854 <___vfprintf_internal_r+0x14a4>
   81820:	d9003717 	ldw	r4,220(sp)
   81824:	d9403417 	ldw	r5,208(sp)
   81828:	1907883a 	add	r3,r3,r4
   8182c:	d9001f17 	ldw	r4,124(sp)
   81830:	41400015 	stw	r5,0(r8)
   81834:	d9403717 	ldw	r5,220(sp)
   81838:	21000044 	addi	r4,r4,1
   8183c:	d8c02015 	stw	r3,128(sp)
   81840:	41400115 	stw	r5,4(r8)
   81844:	d9001f15 	stw	r4,124(sp)
   81848:	014001c4 	movi	r5,7
   8184c:	2901e816 	blt	r5,r4,81ff0 <___vfprintf_internal_r+0x1c40>
   81850:	42000204 	addi	r8,r8,8
   81854:	d9003317 	ldw	r4,204(sp)
   81858:	8121883a 	add	r16,r16,r4
   8185c:	2085c83a 	sub	r2,r4,r2
   81860:	8461c83a 	sub	r16,r16,r17
   81864:	1400010e 	bge	r2,r16,8186c <___vfprintf_internal_r+0x14bc>
   81868:	1021883a 	mov	r16,r2
   8186c:	04000a0e 	bge	zero,r16,81898 <___vfprintf_internal_r+0x14e8>
   81870:	d9001f17 	ldw	r4,124(sp)
   81874:	1c07883a 	add	r3,r3,r16
   81878:	44400015 	stw	r17,0(r8)
   8187c:	21000044 	addi	r4,r4,1
   81880:	44000115 	stw	r16,4(r8)
   81884:	d8c02015 	stw	r3,128(sp)
   81888:	d9001f15 	stw	r4,124(sp)
   8188c:	014001c4 	movi	r5,7
   81890:	2901fb16 	blt	r5,r4,82080 <___vfprintf_internal_r+0x1cd0>
   81894:	42000204 	addi	r8,r8,8
   81898:	8001f716 	blt	r16,zero,82078 <___vfprintf_internal_r+0x1cc8>
   8189c:	1421c83a 	sub	r16,r2,r16
   818a0:	043d380e 	bge	zero,r16,80d84 <___vfprintf_internal_r+0x9d4>
   818a4:	04400404 	movi	r17,16
   818a8:	d8801f17 	ldw	r2,124(sp)
   818ac:	8c3efb0e 	bge	r17,r16,8149c <___vfprintf_internal_r+0x10ec>
   818b0:	01400274 	movhi	r5,9
   818b4:	297e5d84 	addi	r5,r5,-1674
   818b8:	d9402b15 	stw	r5,172(sp)
   818bc:	058001c4 	movi	r22,7
   818c0:	dcc02c17 	ldw	r19,176(sp)
   818c4:	00000306 	br	818d4 <___vfprintf_internal_r+0x1524>
   818c8:	42000204 	addi	r8,r8,8
   818cc:	843ffc04 	addi	r16,r16,-16
   818d0:	8c3ef50e 	bge	r17,r16,814a8 <___vfprintf_internal_r+0x10f8>
   818d4:	18c00404 	addi	r3,r3,16
   818d8:	10800044 	addi	r2,r2,1
   818dc:	45000015 	stw	r20,0(r8)
   818e0:	44400115 	stw	r17,4(r8)
   818e4:	d8c02015 	stw	r3,128(sp)
   818e8:	d8801f15 	stw	r2,124(sp)
   818ec:	b0bff60e 	bge	r22,r2,818c8 <___vfprintf_internal_r+0x1518>
   818f0:	d9801e04 	addi	r6,sp,120
   818f4:	b80b883a 	mov	r5,r23
   818f8:	9809883a 	mov	r4,r19
   818fc:	0086ec80 	call	86ec8 <__sprint_r>
   81900:	103bad1e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   81904:	d8c02017 	ldw	r3,128(sp)
   81908:	d8801f17 	ldw	r2,124(sp)
   8190c:	da000404 	addi	r8,sp,16
   81910:	003fee06 	br	818cc <___vfprintf_internal_r+0x151c>
   81914:	9088703a 	and	r4,r18,r2
   81918:	203eab1e 	bne	r4,zero,813c8 <___vfprintf_internal_r+0x1018>
   8191c:	dc401f17 	ldw	r17,124(sp)
   81920:	40800115 	stw	r2,4(r8)
   81924:	44000015 	stw	r16,0(r8)
   81928:	8c400044 	addi	r17,r17,1
   8192c:	d8c02015 	stw	r3,128(sp)
   81930:	dc401f15 	stw	r17,124(sp)
   81934:	008001c4 	movi	r2,7
   81938:	14400e16 	blt	r2,r17,81974 <___vfprintf_internal_r+0x15c4>
   8193c:	45800204 	addi	r22,r8,8
   81940:	003eca06 	br	8146c <___vfprintf_internal_r+0x10bc>
   81944:	01000274 	movhi	r4,9
   81948:	213e5d84 	addi	r4,r4,-1674
   8194c:	d9002b15 	stw	r4,172(sp)
   81950:	d8802b17 	ldw	r2,172(sp)
   81954:	1c07883a 	add	r3,r3,r16
   81958:	8c400044 	addi	r17,r17,1
   8195c:	b0800015 	stw	r2,0(r22)
   81960:	b4000115 	stw	r16,4(r22)
   81964:	d8c02015 	stw	r3,128(sp)
   81968:	dc401f15 	stw	r17,124(sp)
   8196c:	008001c4 	movi	r2,7
   81970:	147ebd0e 	bge	r2,r17,81468 <___vfprintf_internal_r+0x10b8>
   81974:	d9002c17 	ldw	r4,176(sp)
   81978:	d9801e04 	addi	r6,sp,120
   8197c:	b80b883a 	mov	r5,r23
   81980:	0086ec80 	call	86ec8 <__sprint_r>
   81984:	103b8c1e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   81988:	d8c02017 	ldw	r3,128(sp)
   8198c:	dc401f17 	ldw	r17,124(sp)
   81990:	dd800404 	addi	r22,sp,16
   81994:	003eb506 	br	8146c <___vfprintf_internal_r+0x10bc>
   81998:	d9002c17 	ldw	r4,176(sp)
   8199c:	d9801e04 	addi	r6,sp,120
   819a0:	b80b883a 	mov	r5,r23
   819a4:	0086ec80 	call	86ec8 <__sprint_r>
   819a8:	103b831e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   819ac:	d8c02017 	ldw	r3,128(sp)
   819b0:	dc401f17 	ldw	r17,124(sp)
   819b4:	da000404 	addi	r8,sp,16
   819b8:	003e8d06 	br	813f0 <___vfprintf_internal_r+0x1040>
   819bc:	d9002c17 	ldw	r4,176(sp)
   819c0:	d9801e04 	addi	r6,sp,120
   819c4:	b80b883a 	mov	r5,r23
   819c8:	0086ec80 	call	86ec8 <__sprint_r>
   819cc:	103b7a1e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   819d0:	d8c02017 	ldw	r3,128(sp)
   819d4:	dc401f17 	ldw	r17,124(sp)
   819d8:	dd800404 	addi	r22,sp,16
   819dc:	003e8f06 	br	8141c <___vfprintf_internal_r+0x106c>
   819e0:	0027883a 	mov	r19,zero
   819e4:	003f4a06 	br	81710 <___vfprintf_internal_r+0x1360>
   819e8:	d9002c17 	ldw	r4,176(sp)
   819ec:	d9801e04 	addi	r6,sp,120
   819f0:	b80b883a 	mov	r5,r23
   819f4:	0086ec80 	call	86ec8 <__sprint_r>
   819f8:	103b6f1e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   819fc:	d8c02017 	ldw	r3,128(sp)
   81a00:	da000404 	addi	r8,sp,16
   81a04:	003c9d06 	br	80c7c <___vfprintf_internal_r+0x8cc>
   81a08:	04e7c83a 	sub	r19,zero,r19
   81a0c:	9804c03a 	cmpne	r2,r19,zero
   81a10:	05adc83a 	sub	r22,zero,r22
   81a14:	b0adc83a 	sub	r22,r22,r2
   81a18:	d8802917 	ldw	r2,164(sp)
   81a1c:	07000b44 	movi	fp,45
   81a20:	df002785 	stb	fp,158(sp)
   81a24:	10017b16 	blt	r2,zero,82014 <___vfprintf_internal_r+0x1c64>
   81a28:	00bfdfc4 	movi	r2,-129
   81a2c:	90a4703a 	and	r18,r18,r2
   81a30:	003bb106 	br	808f8 <___vfprintf_internal_r+0x548>
   81a34:	d9003617 	ldw	r4,216(sp)
   81a38:	d9403817 	ldw	r5,224(sp)
   81a3c:	da003d15 	stw	r8,244(sp)
   81a40:	0086a540 	call	86a54 <__fpclassifyd>
   81a44:	da003d17 	ldw	r8,244(sp)
   81a48:	1000f026 	beq	r2,zero,81e0c <___vfprintf_internal_r+0x1a5c>
   81a4c:	d9002917 	ldw	r4,164(sp)
   81a50:	05bff7c4 	movi	r22,-33
   81a54:	00bfffc4 	movi	r2,-1
   81a58:	8dac703a 	and	r22,r17,r22
   81a5c:	20820026 	beq	r4,r2,82260 <___vfprintf_internal_r+0x1eb0>
   81a60:	008011c4 	movi	r2,71
   81a64:	b081f726 	beq	r22,r2,82244 <___vfprintf_internal_r+0x1e94>
   81a68:	d9003817 	ldw	r4,224(sp)
   81a6c:	90c04014 	ori	r3,r18,256
   81a70:	d8c02b15 	stw	r3,172(sp)
   81a74:	20021516 	blt	r4,zero,822cc <___vfprintf_internal_r+0x1f1c>
   81a78:	dcc03817 	ldw	r19,224(sp)
   81a7c:	d8002a05 	stb	zero,168(sp)
   81a80:	00801984 	movi	r2,102
   81a84:	8881f926 	beq	r17,r2,8226c <___vfprintf_internal_r+0x1ebc>
   81a88:	00801184 	movi	r2,70
   81a8c:	88821c26 	beq	r17,r2,82300 <___vfprintf_internal_r+0x1f50>
   81a90:	00801144 	movi	r2,69
   81a94:	b081ef26 	beq	r22,r2,82254 <___vfprintf_internal_r+0x1ea4>
   81a98:	d8c02917 	ldw	r3,164(sp)
   81a9c:	d8802104 	addi	r2,sp,132
   81aa0:	d8800315 	stw	r2,12(sp)
   81aa4:	d9403617 	ldw	r5,216(sp)
   81aa8:	d8802504 	addi	r2,sp,148
   81aac:	d9002c17 	ldw	r4,176(sp)
   81ab0:	d8800215 	stw	r2,8(sp)
   81ab4:	d8802604 	addi	r2,sp,152
   81ab8:	d8c00015 	stw	r3,0(sp)
   81abc:	d8800115 	stw	r2,4(sp)
   81ac0:	01c00084 	movi	r7,2
   81ac4:	980d883a 	mov	r6,r19
   81ac8:	d8c03c15 	stw	r3,240(sp)
   81acc:	da003d15 	stw	r8,244(sp)
   81ad0:	00829d40 	call	829d4 <_dtoa_r>
   81ad4:	1021883a 	mov	r16,r2
   81ad8:	008019c4 	movi	r2,103
   81adc:	d8c03c17 	ldw	r3,240(sp)
   81ae0:	da003d17 	ldw	r8,244(sp)
   81ae4:	88817126 	beq	r17,r2,820ac <___vfprintf_internal_r+0x1cfc>
   81ae8:	008011c4 	movi	r2,71
   81aec:	88829226 	beq	r17,r2,82538 <___vfprintf_internal_r+0x2188>
   81af0:	80f9883a 	add	fp,r16,r3
   81af4:	d9003617 	ldw	r4,216(sp)
   81af8:	000d883a 	mov	r6,zero
   81afc:	000f883a 	mov	r7,zero
   81b00:	980b883a 	mov	r5,r19
   81b04:	da003d15 	stw	r8,244(sp)
   81b08:	008b6bc0 	call	8b6bc <__eqdf2>
   81b0c:	da003d17 	ldw	r8,244(sp)
   81b10:	10018d26 	beq	r2,zero,82148 <___vfprintf_internal_r+0x1d98>
   81b14:	d8802117 	ldw	r2,132(sp)
   81b18:	1700062e 	bgeu	r2,fp,81b34 <___vfprintf_internal_r+0x1784>
   81b1c:	01000c04 	movi	r4,48
   81b20:	10c00044 	addi	r3,r2,1
   81b24:	d8c02115 	stw	r3,132(sp)
   81b28:	11000005 	stb	r4,0(r2)
   81b2c:	d8802117 	ldw	r2,132(sp)
   81b30:	173ffb36 	bltu	r2,fp,81b20 <___vfprintf_internal_r+0x1770>
   81b34:	1405c83a 	sub	r2,r2,r16
   81b38:	d8803315 	stw	r2,204(sp)
   81b3c:	008011c4 	movi	r2,71
   81b40:	b0817626 	beq	r22,r2,8211c <___vfprintf_internal_r+0x1d6c>
   81b44:	00801944 	movi	r2,101
   81b48:	1442810e 	bge	r2,r17,82550 <___vfprintf_internal_r+0x21a0>
   81b4c:	d8c02617 	ldw	r3,152(sp)
   81b50:	00801984 	movi	r2,102
   81b54:	d8c03215 	stw	r3,200(sp)
   81b58:	8881fe26 	beq	r17,r2,82354 <___vfprintf_internal_r+0x1fa4>
   81b5c:	d8c03217 	ldw	r3,200(sp)
   81b60:	d9003317 	ldw	r4,204(sp)
   81b64:	1901dd16 	blt	r3,r4,822dc <___vfprintf_internal_r+0x1f2c>
   81b68:	9480004c 	andi	r18,r18,1
   81b6c:	90022b1e 	bne	r18,zero,8241c <___vfprintf_internal_r+0x206c>
   81b70:	1805883a 	mov	r2,r3
   81b74:	18028016 	blt	r3,zero,82578 <___vfprintf_internal_r+0x21c8>
   81b78:	d8c03217 	ldw	r3,200(sp)
   81b7c:	044019c4 	movi	r17,103
   81b80:	d8c02e15 	stw	r3,184(sp)
   81b84:	df002a07 	ldb	fp,168(sp)
   81b88:	e001531e 	bne	fp,zero,820d8 <___vfprintf_internal_r+0x1d28>
   81b8c:	df002783 	ldbu	fp,158(sp)
   81b90:	d8802a15 	stw	r2,168(sp)
   81b94:	dc802b17 	ldw	r18,172(sp)
   81b98:	d8002915 	stw	zero,164(sp)
   81b9c:	003bd106 	br	80ae4 <___vfprintf_internal_r+0x734>
   81ba0:	d8802d17 	ldw	r2,180(sp)
   81ba4:	d8c02d17 	ldw	r3,180(sp)
   81ba8:	d9002d17 	ldw	r4,180(sp)
   81bac:	10800017 	ldw	r2,0(r2)
   81bb0:	18c00117 	ldw	r3,4(r3)
   81bb4:	21000204 	addi	r4,r4,8
   81bb8:	d8803615 	stw	r2,216(sp)
   81bbc:	d8c03815 	stw	r3,224(sp)
   81bc0:	d9002d15 	stw	r4,180(sp)
   81bc4:	003b7506 	br	8099c <___vfprintf_internal_r+0x5ec>
   81bc8:	ac400007 	ldb	r17,0(r21)
   81bcc:	003a5906 	br	80534 <___vfprintf_internal_r+0x184>
   81bd0:	9080100c 	andi	r2,r18,64
   81bd4:	1000a826 	beq	r2,zero,81e78 <___vfprintf_internal_r+0x1ac8>
   81bd8:	d9002d17 	ldw	r4,180(sp)
   81bdc:	002d883a 	mov	r22,zero
   81be0:	24c0000b 	ldhu	r19,0(r4)
   81be4:	21000104 	addi	r4,r4,4
   81be8:	d9002d15 	stw	r4,180(sp)
   81bec:	003ccb06 	br	80f1c <___vfprintf_internal_r+0xb6c>
   81bf0:	d8c02d17 	ldw	r3,180(sp)
   81bf4:	d9002917 	ldw	r4,164(sp)
   81bf8:	002d883a 	mov	r22,zero
   81bfc:	18800104 	addi	r2,r3,4
   81c00:	1cc00017 	ldw	r19,0(r3)
   81c04:	203ebb0e 	bge	r4,zero,816f4 <___vfprintf_internal_r+0x1344>
   81c08:	003ef106 	br	817d0 <___vfprintf_internal_r+0x1420>
   81c0c:	9080040c 	andi	r2,r18,16
   81c10:	1000921e 	bne	r2,zero,81e5c <___vfprintf_internal_r+0x1aac>
   81c14:	9480100c 	andi	r18,r18,64
   81c18:	90013926 	beq	r18,zero,82100 <___vfprintf_internal_r+0x1d50>
   81c1c:	d9002d17 	ldw	r4,180(sp)
   81c20:	d9402f17 	ldw	r5,188(sp)
   81c24:	20800017 	ldw	r2,0(r4)
   81c28:	21000104 	addi	r4,r4,4
   81c2c:	d9002d15 	stw	r4,180(sp)
   81c30:	1140000d 	sth	r5,0(r2)
   81c34:	003a1606 	br	80490 <___vfprintf_internal_r+0xe0>
   81c38:	9080100c 	andi	r2,r18,64
   81c3c:	10008026 	beq	r2,zero,81e40 <___vfprintf_internal_r+0x1a90>
   81c40:	d8c02d17 	ldw	r3,180(sp)
   81c44:	1cc0000f 	ldh	r19,0(r3)
   81c48:	18c00104 	addi	r3,r3,4
   81c4c:	d8c02d15 	stw	r3,180(sp)
   81c50:	982dd7fa 	srai	r22,r19,31
   81c54:	b005883a 	mov	r2,r22
   81c58:	003b1f06 	br	808d8 <___vfprintf_internal_r+0x528>
   81c5c:	9080100c 	andi	r2,r18,64
   81c60:	d8002785 	stb	zero,158(sp)
   81c64:	10008a1e 	bne	r2,zero,81e90 <___vfprintf_internal_r+0x1ae0>
   81c68:	d9402d17 	ldw	r5,180(sp)
   81c6c:	d8c02917 	ldw	r3,164(sp)
   81c70:	002d883a 	mov	r22,zero
   81c74:	28800104 	addi	r2,r5,4
   81c78:	2cc00017 	ldw	r19,0(r5)
   81c7c:	183e4b0e 	bge	r3,zero,815ac <___vfprintf_internal_r+0x11fc>
   81c80:	9d86b03a 	or	r3,r19,r22
   81c84:	d8802d15 	stw	r2,180(sp)
   81c88:	183e4c1e 	bne	r3,zero,815bc <___vfprintf_internal_r+0x120c>
   81c8c:	0039883a 	mov	fp,zero
   81c90:	0005883a 	mov	r2,zero
   81c94:	003d4006 	br	81198 <___vfprintf_internal_r+0xde8>
   81c98:	01400274 	movhi	r5,9
   81c9c:	297e5d84 	addi	r5,r5,-1674
   81ca0:	d9402b15 	stw	r5,172(sp)
   81ca4:	d9402b17 	ldw	r5,172(sp)
   81ca8:	1c47883a 	add	r3,r3,r17
   81cac:	10800044 	addi	r2,r2,1
   81cb0:	41400015 	stw	r5,0(r8)
   81cb4:	44400115 	stw	r17,4(r8)
   81cb8:	d8c02015 	stw	r3,128(sp)
   81cbc:	d8801f15 	stw	r2,124(sp)
   81cc0:	010001c4 	movi	r4,7
   81cc4:	20bec816 	blt	r4,r2,817e8 <___vfprintf_internal_r+0x1438>
   81cc8:	42000204 	addi	r8,r8,8
   81ccc:	003ecd06 	br	81804 <___vfprintf_internal_r+0x1454>
   81cd0:	d9002917 	ldw	r4,164(sp)
   81cd4:	d8002785 	stb	zero,158(sp)
   81cd8:	203d2d16 	blt	r4,zero,81190 <___vfprintf_internal_r+0xde0>
   81cdc:	00bfdfc4 	movi	r2,-129
   81ce0:	90a4703a 	and	r18,r18,r2
   81ce4:	003a9106 	br	8072c <___vfprintf_internal_r+0x37c>
   81ce8:	01000274 	movhi	r4,9
   81cec:	213e5d84 	addi	r4,r4,-1674
   81cf0:	d9002b15 	stw	r4,172(sp)
   81cf4:	003c0c06 	br	80d28 <___vfprintf_internal_r+0x978>
   81cf8:	d9002c17 	ldw	r4,176(sp)
   81cfc:	d9801e04 	addi	r6,sp,120
   81d00:	b80b883a 	mov	r5,r23
   81d04:	0086ec80 	call	86ec8 <__sprint_r>
   81d08:	103aab1e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   81d0c:	d8c02017 	ldw	r3,128(sp)
   81d10:	da000404 	addi	r8,sp,16
   81d14:	003d4106 	br	8121c <___vfprintf_internal_r+0xe6c>
   81d18:	d8801f17 	ldw	r2,124(sp)
   81d1c:	01400274 	movhi	r5,9
   81d20:	01000044 	movi	r4,1
   81d24:	18c00044 	addi	r3,r3,1
   81d28:	10800044 	addi	r2,r2,1
   81d2c:	297e5d04 	addi	r5,r5,-1676
   81d30:	41000115 	stw	r4,4(r8)
   81d34:	41400015 	stw	r5,0(r8)
   81d38:	d8c02015 	stw	r3,128(sp)
   81d3c:	d8801f15 	stw	r2,124(sp)
   81d40:	010001c4 	movi	r4,7
   81d44:	20805c16 	blt	r4,r2,81eb8 <___vfprintf_internal_r+0x1b08>
   81d48:	42000204 	addi	r8,r8,8
   81d4c:	8800041e 	bne	r17,zero,81d60 <___vfprintf_internal_r+0x19b0>
   81d50:	d8803317 	ldw	r2,204(sp)
   81d54:	1000021e 	bne	r2,zero,81d60 <___vfprintf_internal_r+0x19b0>
   81d58:	9080004c 	andi	r2,r18,1
   81d5c:	103c0926 	beq	r2,zero,80d84 <___vfprintf_internal_r+0x9d4>
   81d60:	d9003717 	ldw	r4,220(sp)
   81d64:	d8801f17 	ldw	r2,124(sp)
   81d68:	d9403417 	ldw	r5,208(sp)
   81d6c:	20c7883a 	add	r3,r4,r3
   81d70:	10800044 	addi	r2,r2,1
   81d74:	41000115 	stw	r4,4(r8)
   81d78:	41400015 	stw	r5,0(r8)
   81d7c:	d8c02015 	stw	r3,128(sp)
   81d80:	d8801f15 	stw	r2,124(sp)
   81d84:	010001c4 	movi	r4,7
   81d88:	20812116 	blt	r4,r2,82210 <___vfprintf_internal_r+0x1e60>
   81d8c:	42000204 	addi	r8,r8,8
   81d90:	0463c83a 	sub	r17,zero,r17
   81d94:	0440730e 	bge	zero,r17,81f64 <___vfprintf_internal_r+0x1bb4>
   81d98:	05800404 	movi	r22,16
   81d9c:	b440860e 	bge	r22,r17,81fb8 <___vfprintf_internal_r+0x1c08>
   81da0:	01400274 	movhi	r5,9
   81da4:	297e5d84 	addi	r5,r5,-1674
   81da8:	d9402b15 	stw	r5,172(sp)
   81dac:	070001c4 	movi	fp,7
   81db0:	dcc02c17 	ldw	r19,176(sp)
   81db4:	00000306 	br	81dc4 <___vfprintf_internal_r+0x1a14>
   81db8:	42000204 	addi	r8,r8,8
   81dbc:	8c7ffc04 	addi	r17,r17,-16
   81dc0:	b440800e 	bge	r22,r17,81fc4 <___vfprintf_internal_r+0x1c14>
   81dc4:	18c00404 	addi	r3,r3,16
   81dc8:	10800044 	addi	r2,r2,1
   81dcc:	45000015 	stw	r20,0(r8)
   81dd0:	45800115 	stw	r22,4(r8)
   81dd4:	d8c02015 	stw	r3,128(sp)
   81dd8:	d8801f15 	stw	r2,124(sp)
   81ddc:	e0bff60e 	bge	fp,r2,81db8 <___vfprintf_internal_r+0x1a08>
   81de0:	d9801e04 	addi	r6,sp,120
   81de4:	b80b883a 	mov	r5,r23
   81de8:	9809883a 	mov	r4,r19
   81dec:	0086ec80 	call	86ec8 <__sprint_r>
   81df0:	103a711e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   81df4:	d8c02017 	ldw	r3,128(sp)
   81df8:	d8801f17 	ldw	r2,124(sp)
   81dfc:	da000404 	addi	r8,sp,16
   81e00:	003fee06 	br	81dbc <___vfprintf_internal_r+0x1a0c>
   81e04:	00bfffc4 	movi	r2,-1
   81e08:	003a6f06 	br	807c8 <___vfprintf_internal_r+0x418>
   81e0c:	008011c4 	movi	r2,71
   81e10:	1440b816 	blt	r2,r17,820f4 <___vfprintf_internal_r+0x1d44>
   81e14:	04000274 	movhi	r16,9
   81e18:	843e4f04 	addi	r16,r16,-1732
   81e1c:	00c000c4 	movi	r3,3
   81e20:	00bfdfc4 	movi	r2,-129
   81e24:	d8c02a15 	stw	r3,168(sp)
   81e28:	90a4703a 	and	r18,r18,r2
   81e2c:	df002783 	ldbu	fp,158(sp)
   81e30:	d8c02e15 	stw	r3,184(sp)
   81e34:	d8002915 	stw	zero,164(sp)
   81e38:	d8003215 	stw	zero,200(sp)
   81e3c:	003b2906 	br	80ae4 <___vfprintf_internal_r+0x734>
   81e40:	d9002d17 	ldw	r4,180(sp)
   81e44:	24c00017 	ldw	r19,0(r4)
   81e48:	21000104 	addi	r4,r4,4
   81e4c:	d9002d15 	stw	r4,180(sp)
   81e50:	982dd7fa 	srai	r22,r19,31
   81e54:	b005883a 	mov	r2,r22
   81e58:	003a9f06 	br	808d8 <___vfprintf_internal_r+0x528>
   81e5c:	d9402d17 	ldw	r5,180(sp)
   81e60:	d8c02f17 	ldw	r3,188(sp)
   81e64:	28800017 	ldw	r2,0(r5)
   81e68:	29400104 	addi	r5,r5,4
   81e6c:	d9402d15 	stw	r5,180(sp)
   81e70:	10c00015 	stw	r3,0(r2)
   81e74:	00398606 	br	80490 <___vfprintf_internal_r+0xe0>
   81e78:	d9402d17 	ldw	r5,180(sp)
   81e7c:	002d883a 	mov	r22,zero
   81e80:	2cc00017 	ldw	r19,0(r5)
   81e84:	29400104 	addi	r5,r5,4
   81e88:	d9402d15 	stw	r5,180(sp)
   81e8c:	003c2306 	br	80f1c <___vfprintf_internal_r+0xb6c>
   81e90:	d8c02d17 	ldw	r3,180(sp)
   81e94:	d9002917 	ldw	r4,164(sp)
   81e98:	002d883a 	mov	r22,zero
   81e9c:	18800104 	addi	r2,r3,4
   81ea0:	1cc0000b 	ldhu	r19,0(r3)
   81ea4:	203dc10e 	bge	r4,zero,815ac <___vfprintf_internal_r+0x11fc>
   81ea8:	003f7506 	br	81c80 <___vfprintf_internal_r+0x18d0>
   81eac:	04000274 	movhi	r16,9
   81eb0:	843e4d04 	addi	r16,r16,-1740
   81eb4:	003acc06 	br	809e8 <___vfprintf_internal_r+0x638>
   81eb8:	d9002c17 	ldw	r4,176(sp)
   81ebc:	d9801e04 	addi	r6,sp,120
   81ec0:	b80b883a 	mov	r5,r23
   81ec4:	0086ec80 	call	86ec8 <__sprint_r>
   81ec8:	103a3b1e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   81ecc:	dc402617 	ldw	r17,152(sp)
   81ed0:	d8c02017 	ldw	r3,128(sp)
   81ed4:	da000404 	addi	r8,sp,16
   81ed8:	003f9c06 	br	81d4c <___vfprintf_internal_r+0x199c>
   81edc:	ac400043 	ldbu	r17,1(r21)
   81ee0:	94800814 	ori	r18,r18,32
   81ee4:	ad400044 	addi	r21,r21,1
   81ee8:	8c403fcc 	andi	r17,r17,255
   81eec:	8c40201c 	xori	r17,r17,128
   81ef0:	8c7fe004 	addi	r17,r17,-128
   81ef4:	00398f06 	br	80534 <___vfprintf_internal_r+0x184>
   81ef8:	d8c02d15 	stw	r3,180(sp)
   81efc:	0039883a 	mov	fp,zero
   81f00:	003e3506 	br	817d8 <___vfprintf_internal_r+0x1428>
   81f04:	d9002c17 	ldw	r4,176(sp)
   81f08:	d9801e04 	addi	r6,sp,120
   81f0c:	b80b883a 	mov	r5,r23
   81f10:	0086ec80 	call	86ec8 <__sprint_r>
   81f14:	103a281e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   81f18:	d8c02017 	ldw	r3,128(sp)
   81f1c:	da000404 	addi	r8,sp,16
   81f20:	003cd006 	br	81264 <___vfprintf_internal_r+0xeb4>
   81f24:	8009883a 	mov	r4,r16
   81f28:	da003d15 	stw	r8,244(sp)
   81f2c:	0086d340 	call	86d34 <strlen>
   81f30:	d8802e15 	stw	r2,184(sp)
   81f34:	da003d17 	ldw	r8,244(sp)
   81f38:	103c340e 	bge	r2,zero,8100c <___vfprintf_internal_r+0xc5c>
   81f3c:	0005883a 	mov	r2,zero
   81f40:	003c3206 	br	8100c <___vfprintf_internal_r+0xc5c>
   81f44:	d9002c17 	ldw	r4,176(sp)
   81f48:	d9801e04 	addi	r6,sp,120
   81f4c:	b80b883a 	mov	r5,r23
   81f50:	0086ec80 	call	86ec8 <__sprint_r>
   81f54:	103a181e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   81f58:	d8c02017 	ldw	r3,128(sp)
   81f5c:	d8801f17 	ldw	r2,124(sp)
   81f60:	da000404 	addi	r8,sp,16
   81f64:	d9403317 	ldw	r5,204(sp)
   81f68:	10800044 	addi	r2,r2,1
   81f6c:	44000015 	stw	r16,0(r8)
   81f70:	28c7883a 	add	r3,r5,r3
   81f74:	003b7d06 	br	80d6c <___vfprintf_internal_r+0x9bc>
   81f78:	01000274 	movhi	r4,9
   81f7c:	213e6184 	addi	r4,r4,-1658
   81f80:	d9003515 	stw	r4,212(sp)
   81f84:	003b1406 	br	80bd8 <___vfprintf_internal_r+0x828>
   81f88:	013fffc4 	movi	r4,-1
   81f8c:	003a3506 	br	80864 <___vfprintf_internal_r+0x4b4>
   81f90:	0023883a 	mov	r17,zero
   81f94:	003d9d06 	br	8160c <___vfprintf_internal_r+0x125c>
   81f98:	d9002c17 	ldw	r4,176(sp)
   81f9c:	d9801e04 	addi	r6,sp,120
   81fa0:	b80b883a 	mov	r5,r23
   81fa4:	0086ec80 	call	86ec8 <__sprint_r>
   81fa8:	103a031e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   81fac:	d8c02017 	ldw	r3,128(sp)
   81fb0:	da000404 	addi	r8,sp,16
   81fb4:	003d9406 	br	81608 <___vfprintf_internal_r+0x1258>
   81fb8:	01000274 	movhi	r4,9
   81fbc:	213e5d84 	addi	r4,r4,-1674
   81fc0:	d9002b15 	stw	r4,172(sp)
   81fc4:	d9002b17 	ldw	r4,172(sp)
   81fc8:	1c47883a 	add	r3,r3,r17
   81fcc:	10800044 	addi	r2,r2,1
   81fd0:	41000015 	stw	r4,0(r8)
   81fd4:	44400115 	stw	r17,4(r8)
   81fd8:	d8c02015 	stw	r3,128(sp)
   81fdc:	d8801f15 	stw	r2,124(sp)
   81fe0:	010001c4 	movi	r4,7
   81fe4:	20bfd716 	blt	r4,r2,81f44 <___vfprintf_internal_r+0x1b94>
   81fe8:	42000204 	addi	r8,r8,8
   81fec:	003fdd06 	br	81f64 <___vfprintf_internal_r+0x1bb4>
   81ff0:	d9002c17 	ldw	r4,176(sp)
   81ff4:	d9801e04 	addi	r6,sp,120
   81ff8:	b80b883a 	mov	r5,r23
   81ffc:	0086ec80 	call	86ec8 <__sprint_r>
   82000:	1039ed1e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   82004:	d8802617 	ldw	r2,152(sp)
   82008:	d8c02017 	ldw	r3,128(sp)
   8200c:	da000404 	addi	r8,sp,16
   82010:	003e1006 	br	81854 <___vfprintf_internal_r+0x14a4>
   82014:	00800044 	movi	r2,1
   82018:	10803fcc 	andi	r2,r2,255
   8201c:	00c00044 	movi	r3,1
   82020:	10fa3526 	beq	r2,r3,808f8 <___vfprintf_internal_r+0x548>
   82024:	00c00084 	movi	r3,2
   82028:	10fbcb26 	beq	r2,r3,80f58 <___vfprintf_internal_r+0xba8>
   8202c:	003a8f06 	br	80a6c <___vfprintf_internal_r+0x6bc>
   82030:	01000274 	movhi	r4,9
   82034:	213e6184 	addi	r4,r4,-1658
   82038:	d9003515 	stw	r4,212(sp)
   8203c:	003b7606 	br	80e18 <___vfprintf_internal_r+0xa68>
   82040:	d8802917 	ldw	r2,164(sp)
   82044:	00c00184 	movi	r3,6
   82048:	1880012e 	bgeu	r3,r2,82050 <___vfprintf_internal_r+0x1ca0>
   8204c:	1805883a 	mov	r2,r3
   82050:	d8802e15 	stw	r2,184(sp)
   82054:	1000ef16 	blt	r2,zero,82414 <___vfprintf_internal_r+0x2064>
   82058:	04000274 	movhi	r16,9
   8205c:	d8802a15 	stw	r2,168(sp)
   82060:	dcc02d15 	stw	r19,180(sp)
   82064:	d8002915 	stw	zero,164(sp)
   82068:	d8003215 	stw	zero,200(sp)
   8206c:	843e5b04 	addi	r16,r16,-1684
   82070:	0039883a 	mov	fp,zero
   82074:	003aa206 	br	80b00 <___vfprintf_internal_r+0x750>
   82078:	0021883a 	mov	r16,zero
   8207c:	003e0706 	br	8189c <___vfprintf_internal_r+0x14ec>
   82080:	d9002c17 	ldw	r4,176(sp)
   82084:	d9801e04 	addi	r6,sp,120
   82088:	b80b883a 	mov	r5,r23
   8208c:	0086ec80 	call	86ec8 <__sprint_r>
   82090:	1039c91e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   82094:	d8802617 	ldw	r2,152(sp)
   82098:	d9403317 	ldw	r5,204(sp)
   8209c:	d8c02017 	ldw	r3,128(sp)
   820a0:	da000404 	addi	r8,sp,16
   820a4:	2885c83a 	sub	r2,r5,r2
   820a8:	003dfb06 	br	81898 <___vfprintf_internal_r+0x14e8>
   820ac:	9080004c 	andi	r2,r18,1
   820b0:	103e8f1e 	bne	r2,zero,81af0 <___vfprintf_internal_r+0x1740>
   820b4:	d8802117 	ldw	r2,132(sp)
   820b8:	003e9e06 	br	81b34 <___vfprintf_internal_r+0x1784>
   820bc:	1025883a 	mov	r18,r2
   820c0:	0039883a 	mov	fp,zero
   820c4:	00800084 	movi	r2,2
   820c8:	003fd306 	br	82018 <___vfprintf_internal_r+0x1c68>
   820cc:	07000b44 	movi	fp,45
   820d0:	df002785 	stb	fp,158(sp)
   820d4:	003a4006 	br	809d8 <___vfprintf_internal_r+0x628>
   820d8:	00c00b44 	movi	r3,45
   820dc:	d8c02785 	stb	r3,158(sp)
   820e0:	d8802a15 	stw	r2,168(sp)
   820e4:	dc802b17 	ldw	r18,172(sp)
   820e8:	d8002915 	stw	zero,164(sp)
   820ec:	07000b44 	movi	fp,45
   820f0:	003a8006 	br	80af4 <___vfprintf_internal_r+0x744>
   820f4:	04000274 	movhi	r16,9
   820f8:	843e5004 	addi	r16,r16,-1728
   820fc:	003f4706 	br	81e1c <___vfprintf_internal_r+0x1a6c>
   82100:	d8c02d17 	ldw	r3,180(sp)
   82104:	d9002f17 	ldw	r4,188(sp)
   82108:	18800017 	ldw	r2,0(r3)
   8210c:	18c00104 	addi	r3,r3,4
   82110:	d8c02d15 	stw	r3,180(sp)
   82114:	11000015 	stw	r4,0(r2)
   82118:	0038dd06 	br	80490 <___vfprintf_internal_r+0xe0>
   8211c:	dd802617 	ldw	r22,152(sp)
   82120:	00bfff44 	movi	r2,-3
   82124:	b0801c16 	blt	r22,r2,82198 <___vfprintf_internal_r+0x1de8>
   82128:	d9402917 	ldw	r5,164(sp)
   8212c:	2d801a16 	blt	r5,r22,82198 <___vfprintf_internal_r+0x1de8>
   82130:	dd803215 	stw	r22,200(sp)
   82134:	003e8906 	br	81b5c <___vfprintf_internal_r+0x17ac>
   82138:	01000274 	movhi	r4,9
   8213c:	213e5d84 	addi	r4,r4,-1674
   82140:	d9002b15 	stw	r4,172(sp)
   82144:	003c9106 	br	8138c <___vfprintf_internal_r+0xfdc>
   82148:	e005883a 	mov	r2,fp
   8214c:	003e7906 	br	81b34 <___vfprintf_internal_r+0x1784>
   82150:	d9402917 	ldw	r5,164(sp)
   82154:	df002783 	ldbu	fp,158(sp)
   82158:	dcc02d15 	stw	r19,180(sp)
   8215c:	d9402a15 	stw	r5,168(sp)
   82160:	d9402e15 	stw	r5,184(sp)
   82164:	d8002915 	stw	zero,164(sp)
   82168:	d8003215 	stw	zero,200(sp)
   8216c:	003a5d06 	br	80ae4 <___vfprintf_internal_r+0x734>
   82170:	9080004c 	andi	r2,r18,1
   82174:	0039883a 	mov	fp,zero
   82178:	10000426 	beq	r2,zero,8218c <___vfprintf_internal_r+0x1ddc>
   8217c:	00800c04 	movi	r2,48
   82180:	dc001dc4 	addi	r16,sp,119
   82184:	d8801dc5 	stb	r2,119(sp)
   82188:	003b8006 	br	80f8c <___vfprintf_internal_r+0xbdc>
   8218c:	d8002e15 	stw	zero,184(sp)
   82190:	dc001e04 	addi	r16,sp,120
   82194:	003a4d06 	br	80acc <___vfprintf_internal_r+0x71c>
   82198:	8c7fff84 	addi	r17,r17,-2
   8219c:	b5bfffc4 	addi	r22,r22,-1
   821a0:	dd802615 	stw	r22,152(sp)
   821a4:	dc4022c5 	stb	r17,139(sp)
   821a8:	b000bf16 	blt	r22,zero,824a8 <___vfprintf_internal_r+0x20f8>
   821ac:	00800ac4 	movi	r2,43
   821b0:	d8802305 	stb	r2,140(sp)
   821b4:	00800244 	movi	r2,9
   821b8:	15807016 	blt	r2,r22,8237c <___vfprintf_internal_r+0x1fcc>
   821bc:	00800c04 	movi	r2,48
   821c0:	b5800c04 	addi	r22,r22,48
   821c4:	d8802345 	stb	r2,141(sp)
   821c8:	dd802385 	stb	r22,142(sp)
   821cc:	d88023c4 	addi	r2,sp,143
   821d0:	df0022c4 	addi	fp,sp,139
   821d4:	d8c03317 	ldw	r3,204(sp)
   821d8:	1739c83a 	sub	fp,r2,fp
   821dc:	d9003317 	ldw	r4,204(sp)
   821e0:	e0c7883a 	add	r3,fp,r3
   821e4:	df003a15 	stw	fp,232(sp)
   821e8:	d8c02e15 	stw	r3,184(sp)
   821ec:	00800044 	movi	r2,1
   821f0:	1100b30e 	bge	r2,r4,824c0 <___vfprintf_internal_r+0x2110>
   821f4:	d8c02e17 	ldw	r3,184(sp)
   821f8:	18c00044 	addi	r3,r3,1
   821fc:	d8c02e15 	stw	r3,184(sp)
   82200:	1805883a 	mov	r2,r3
   82204:	1800ac16 	blt	r3,zero,824b8 <___vfprintf_internal_r+0x2108>
   82208:	d8003215 	stw	zero,200(sp)
   8220c:	003e5d06 	br	81b84 <___vfprintf_internal_r+0x17d4>
   82210:	d9002c17 	ldw	r4,176(sp)
   82214:	d9801e04 	addi	r6,sp,120
   82218:	b80b883a 	mov	r5,r23
   8221c:	0086ec80 	call	86ec8 <__sprint_r>
   82220:	1039651e 	bne	r2,zero,807b8 <___vfprintf_internal_r+0x408>
   82224:	dc402617 	ldw	r17,152(sp)
   82228:	d8c02017 	ldw	r3,128(sp)
   8222c:	d8801f17 	ldw	r2,124(sp)
   82230:	da000404 	addi	r8,sp,16
   82234:	003ed606 	br	81d90 <___vfprintf_internal_r+0x19e0>
   82238:	582b883a 	mov	r21,r11
   8223c:	d8002915 	stw	zero,164(sp)
   82240:	0038bd06 	br	80538 <___vfprintf_internal_r+0x188>
   82244:	d8802917 	ldw	r2,164(sp)
   82248:	103e071e 	bne	r2,zero,81a68 <___vfprintf_internal_r+0x16b8>
   8224c:	dc002915 	stw	r16,164(sp)
   82250:	003e0506 	br	81a68 <___vfprintf_internal_r+0x16b8>
   82254:	d9002917 	ldw	r4,164(sp)
   82258:	20c00044 	addi	r3,r4,1
   8225c:	003e0f06 	br	81a9c <___vfprintf_internal_r+0x16ec>
   82260:	01400184 	movi	r5,6
   82264:	d9402915 	stw	r5,164(sp)
   82268:	003dff06 	br	81a68 <___vfprintf_internal_r+0x16b8>
   8226c:	d8802104 	addi	r2,sp,132
   82270:	d8800315 	stw	r2,12(sp)
   82274:	d8802504 	addi	r2,sp,148
   82278:	d8800215 	stw	r2,8(sp)
   8227c:	d8802604 	addi	r2,sp,152
   82280:	d8800115 	stw	r2,4(sp)
   82284:	d8802917 	ldw	r2,164(sp)
   82288:	d9403617 	ldw	r5,216(sp)
   8228c:	d9002c17 	ldw	r4,176(sp)
   82290:	d8800015 	stw	r2,0(sp)
   82294:	01c000c4 	movi	r7,3
   82298:	980d883a 	mov	r6,r19
   8229c:	da003d15 	stw	r8,244(sp)
   822a0:	00829d40 	call	829d4 <_dtoa_r>
   822a4:	d8c02917 	ldw	r3,164(sp)
   822a8:	da003d17 	ldw	r8,244(sp)
   822ac:	1021883a 	mov	r16,r2
   822b0:	10f9883a 	add	fp,r2,r3
   822b4:	81000007 	ldb	r4,0(r16)
   822b8:	00800c04 	movi	r2,48
   822bc:	20805e26 	beq	r4,r2,82438 <___vfprintf_internal_r+0x2088>
   822c0:	d8c02617 	ldw	r3,152(sp)
   822c4:	e0f9883a 	add	fp,fp,r3
   822c8:	003e0a06 	br	81af4 <___vfprintf_internal_r+0x1744>
   822cc:	00c00b44 	movi	r3,45
   822d0:	24e0003c 	xorhi	r19,r4,32768
   822d4:	d8c02a05 	stb	r3,168(sp)
   822d8:	003de906 	br	81a80 <___vfprintf_internal_r+0x16d0>
   822dc:	d8c03217 	ldw	r3,200(sp)
   822e0:	00c07a0e 	bge	zero,r3,824cc <___vfprintf_internal_r+0x211c>
   822e4:	00800044 	movi	r2,1
   822e8:	d9003317 	ldw	r4,204(sp)
   822ec:	1105883a 	add	r2,r2,r4
   822f0:	d8802e15 	stw	r2,184(sp)
   822f4:	10004e16 	blt	r2,zero,82430 <___vfprintf_internal_r+0x2080>
   822f8:	044019c4 	movi	r17,103
   822fc:	003e2106 	br	81b84 <___vfprintf_internal_r+0x17d4>
   82300:	d9002917 	ldw	r4,164(sp)
   82304:	d8802104 	addi	r2,sp,132
   82308:	d8800315 	stw	r2,12(sp)
   8230c:	d9000015 	stw	r4,0(sp)
   82310:	d8802504 	addi	r2,sp,148
   82314:	d9403617 	ldw	r5,216(sp)
   82318:	d9002c17 	ldw	r4,176(sp)
   8231c:	d8800215 	stw	r2,8(sp)
   82320:	d8802604 	addi	r2,sp,152
   82324:	d8800115 	stw	r2,4(sp)
   82328:	01c000c4 	movi	r7,3
   8232c:	980d883a 	mov	r6,r19
   82330:	da003d15 	stw	r8,244(sp)
   82334:	00829d40 	call	829d4 <_dtoa_r>
   82338:	d8c02917 	ldw	r3,164(sp)
   8233c:	da003d17 	ldw	r8,244(sp)
   82340:	1021883a 	mov	r16,r2
   82344:	00801184 	movi	r2,70
   82348:	80f9883a 	add	fp,r16,r3
   8234c:	88bfd926 	beq	r17,r2,822b4 <___vfprintf_internal_r+0x1f04>
   82350:	003de806 	br	81af4 <___vfprintf_internal_r+0x1744>
   82354:	d9002917 	ldw	r4,164(sp)
   82358:	00c04d0e 	bge	zero,r3,82490 <___vfprintf_internal_r+0x20e0>
   8235c:	2000441e 	bne	r4,zero,82470 <___vfprintf_internal_r+0x20c0>
   82360:	9480004c 	andi	r18,r18,1
   82364:	9000421e 	bne	r18,zero,82470 <___vfprintf_internal_r+0x20c0>
   82368:	1805883a 	mov	r2,r3
   8236c:	18007016 	blt	r3,zero,82530 <___vfprintf_internal_r+0x2180>
   82370:	d8c03217 	ldw	r3,200(sp)
   82374:	d8c02e15 	stw	r3,184(sp)
   82378:	003e0206 	br	81b84 <___vfprintf_internal_r+0x17d4>
   8237c:	df0022c4 	addi	fp,sp,139
   82380:	dc002915 	stw	r16,164(sp)
   82384:	4027883a 	mov	r19,r8
   82388:	e021883a 	mov	r16,fp
   8238c:	b009883a 	mov	r4,r22
   82390:	01400284 	movi	r5,10
   82394:	008a3f80 	call	8a3f8 <__modsi3>
   82398:	10800c04 	addi	r2,r2,48
   8239c:	843fffc4 	addi	r16,r16,-1
   823a0:	b009883a 	mov	r4,r22
   823a4:	01400284 	movi	r5,10
   823a8:	80800005 	stb	r2,0(r16)
   823ac:	008a3740 	call	8a374 <__divsi3>
   823b0:	102d883a 	mov	r22,r2
   823b4:	00800244 	movi	r2,9
   823b8:	15bff416 	blt	r2,r22,8238c <___vfprintf_internal_r+0x1fdc>
   823bc:	9811883a 	mov	r8,r19
   823c0:	b0800c04 	addi	r2,r22,48
   823c4:	8027883a 	mov	r19,r16
   823c8:	997fffc4 	addi	r5,r19,-1
   823cc:	98bfffc5 	stb	r2,-1(r19)
   823d0:	dc002917 	ldw	r16,164(sp)
   823d4:	2f006a2e 	bgeu	r5,fp,82580 <___vfprintf_internal_r+0x21d0>
   823d8:	d9c02384 	addi	r7,sp,142
   823dc:	3ccfc83a 	sub	r7,r7,r19
   823e0:	d9002344 	addi	r4,sp,141
   823e4:	e1cf883a 	add	r7,fp,r7
   823e8:	00000106 	br	823f0 <___vfprintf_internal_r+0x2040>
   823ec:	28800003 	ldbu	r2,0(r5)
   823f0:	20800005 	stb	r2,0(r4)
   823f4:	21000044 	addi	r4,r4,1
   823f8:	29400044 	addi	r5,r5,1
   823fc:	393ffb1e 	bne	r7,r4,823ec <___vfprintf_internal_r+0x203c>
   82400:	d8802304 	addi	r2,sp,140
   82404:	14c5c83a 	sub	r2,r2,r19
   82408:	d8c02344 	addi	r3,sp,141
   8240c:	1885883a 	add	r2,r3,r2
   82410:	003f7006 	br	821d4 <___vfprintf_internal_r+0x1e24>
   82414:	0005883a 	mov	r2,zero
   82418:	003f0f06 	br	82058 <___vfprintf_internal_r+0x1ca8>
   8241c:	d8c03217 	ldw	r3,200(sp)
   82420:	18c00044 	addi	r3,r3,1
   82424:	d8c02e15 	stw	r3,184(sp)
   82428:	1805883a 	mov	r2,r3
   8242c:	183fb20e 	bge	r3,zero,822f8 <___vfprintf_internal_r+0x1f48>
   82430:	0005883a 	mov	r2,zero
   82434:	003fb006 	br	822f8 <___vfprintf_internal_r+0x1f48>
   82438:	d9003617 	ldw	r4,216(sp)
   8243c:	000d883a 	mov	r6,zero
   82440:	000f883a 	mov	r7,zero
   82444:	980b883a 	mov	r5,r19
   82448:	d8c03c15 	stw	r3,240(sp)
   8244c:	da003d15 	stw	r8,244(sp)
   82450:	008b6bc0 	call	8b6bc <__eqdf2>
   82454:	d8c03c17 	ldw	r3,240(sp)
   82458:	da003d17 	ldw	r8,244(sp)
   8245c:	103f9826 	beq	r2,zero,822c0 <___vfprintf_internal_r+0x1f10>
   82460:	00800044 	movi	r2,1
   82464:	10c7c83a 	sub	r3,r2,r3
   82468:	d8c02615 	stw	r3,152(sp)
   8246c:	003f9506 	br	822c4 <___vfprintf_internal_r+0x1f14>
   82470:	d9002917 	ldw	r4,164(sp)
   82474:	d8c03217 	ldw	r3,200(sp)
   82478:	20800044 	addi	r2,r4,1
   8247c:	1885883a 	add	r2,r3,r2
   82480:	d8802e15 	stw	r2,184(sp)
   82484:	103dbf0e 	bge	r2,zero,81b84 <___vfprintf_internal_r+0x17d4>
   82488:	0005883a 	mov	r2,zero
   8248c:	003dbd06 	br	81b84 <___vfprintf_internal_r+0x17d4>
   82490:	2000211e 	bne	r4,zero,82518 <___vfprintf_internal_r+0x2168>
   82494:	9480004c 	andi	r18,r18,1
   82498:	90001f1e 	bne	r18,zero,82518 <___vfprintf_internal_r+0x2168>
   8249c:	00800044 	movi	r2,1
   824a0:	d8802e15 	stw	r2,184(sp)
   824a4:	003db706 	br	81b84 <___vfprintf_internal_r+0x17d4>
   824a8:	00800b44 	movi	r2,45
   824ac:	05adc83a 	sub	r22,zero,r22
   824b0:	d8802305 	stb	r2,140(sp)
   824b4:	003f3f06 	br	821b4 <___vfprintf_internal_r+0x1e04>
   824b8:	0005883a 	mov	r2,zero
   824bc:	003f5206 	br	82208 <___vfprintf_internal_r+0x1e58>
   824c0:	90a4703a 	and	r18,r18,r2
   824c4:	903f4e26 	beq	r18,zero,82200 <___vfprintf_internal_r+0x1e50>
   824c8:	003f4a06 	br	821f4 <___vfprintf_internal_r+0x1e44>
   824cc:	00800084 	movi	r2,2
   824d0:	10c5c83a 	sub	r2,r2,r3
   824d4:	003f8406 	br	822e8 <___vfprintf_internal_r+0x1f38>
   824d8:	d8802d17 	ldw	r2,180(sp)
   824dc:	d9002d17 	ldw	r4,180(sp)
   824e0:	ac400043 	ldbu	r17,1(r21)
   824e4:	10800017 	ldw	r2,0(r2)
   824e8:	582b883a 	mov	r21,r11
   824ec:	d8802915 	stw	r2,164(sp)
   824f0:	20800104 	addi	r2,r4,4
   824f4:	d9002917 	ldw	r4,164(sp)
   824f8:	d8802d15 	stw	r2,180(sp)
   824fc:	203e7a0e 	bge	r4,zero,81ee8 <___vfprintf_internal_r+0x1b38>
   82500:	8c403fcc 	andi	r17,r17,255
   82504:	00bfffc4 	movi	r2,-1
   82508:	8c40201c 	xori	r17,r17,128
   8250c:	d8802915 	stw	r2,164(sp)
   82510:	8c7fe004 	addi	r17,r17,-128
   82514:	00380706 	br	80534 <___vfprintf_internal_r+0x184>
   82518:	d8c02917 	ldw	r3,164(sp)
   8251c:	18c00084 	addi	r3,r3,2
   82520:	d8c02e15 	stw	r3,184(sp)
   82524:	1805883a 	mov	r2,r3
   82528:	183d960e 	bge	r3,zero,81b84 <___vfprintf_internal_r+0x17d4>
   8252c:	003fd606 	br	82488 <___vfprintf_internal_r+0x20d8>
   82530:	0005883a 	mov	r2,zero
   82534:	003f8e06 	br	82370 <___vfprintf_internal_r+0x1fc0>
   82538:	9080004c 	andi	r2,r18,1
   8253c:	103f811e 	bne	r2,zero,82344 <___vfprintf_internal_r+0x1f94>
   82540:	d8802117 	ldw	r2,132(sp)
   82544:	1405c83a 	sub	r2,r2,r16
   82548:	d8803315 	stw	r2,204(sp)
   8254c:	b47ef326 	beq	r22,r17,8211c <___vfprintf_internal_r+0x1d6c>
   82550:	dd802617 	ldw	r22,152(sp)
   82554:	003f1106 	br	8219c <___vfprintf_internal_r+0x1dec>
   82558:	d9c02785 	stb	r7,158(sp)
   8255c:	00390406 	br	80970 <___vfprintf_internal_r+0x5c0>
   82560:	d9c02785 	stb	r7,158(sp)
   82564:	0038d306 	br	808b4 <___vfprintf_internal_r+0x504>
   82568:	d9c02785 	stb	r7,158(sp)
   8256c:	003a6106 	br	80ef4 <___vfprintf_internal_r+0xb44>
   82570:	d9c02785 	stb	r7,158(sp)
   82574:	003af806 	br	81158 <___vfprintf_internal_r+0xda8>
   82578:	0005883a 	mov	r2,zero
   8257c:	003d7e06 	br	81b78 <___vfprintf_internal_r+0x17c8>
   82580:	d8802344 	addi	r2,sp,141
   82584:	003f1306 	br	821d4 <___vfprintf_internal_r+0x1e24>
   82588:	d9c02785 	stb	r7,158(sp)
   8258c:	00392306 	br	80a1c <___vfprintf_internal_r+0x66c>
   82590:	d9c02785 	stb	r7,158(sp)
   82594:	003aa906 	br	8103c <___vfprintf_internal_r+0xc8c>
   82598:	d9c02785 	stb	r7,158(sp)
   8259c:	003a3d06 	br	80e94 <___vfprintf_internal_r+0xae4>
   825a0:	d9c02785 	stb	r7,158(sp)
   825a4:	003aca06 	br	810d0 <___vfprintf_internal_r+0xd20>

000825a8 <__vfprintf_internal>:
   825a8:	00800274 	movhi	r2,9
   825ac:	1085b604 	addi	r2,r2,5848
   825b0:	300f883a 	mov	r7,r6
   825b4:	280d883a 	mov	r6,r5
   825b8:	200b883a 	mov	r5,r4
   825bc:	11000017 	ldw	r4,0(r2)
   825c0:	00803b01 	jmpi	803b0 <___vfprintf_internal_r>

000825c4 <__sbprintf>:
   825c4:	2880030b 	ldhu	r2,12(r5)
   825c8:	2ac01917 	ldw	r11,100(r5)
   825cc:	2a80038b 	ldhu	r10,14(r5)
   825d0:	2a400717 	ldw	r9,28(r5)
   825d4:	2a000917 	ldw	r8,36(r5)
   825d8:	defee204 	addi	sp,sp,-1144
   825dc:	00c10004 	movi	r3,1024
   825e0:	dc011a15 	stw	r16,1128(sp)
   825e4:	10bfff4c 	andi	r2,r2,65533
   825e8:	2821883a 	mov	r16,r5
   825ec:	d8cb883a 	add	r5,sp,r3
   825f0:	dc811c15 	stw	r18,1136(sp)
   825f4:	dc411b15 	stw	r17,1132(sp)
   825f8:	dfc11d15 	stw	ra,1140(sp)
   825fc:	2025883a 	mov	r18,r4
   82600:	d881030d 	sth	r2,1036(sp)
   82604:	dac11915 	stw	r11,1124(sp)
   82608:	da81038d 	sth	r10,1038(sp)
   8260c:	da410715 	stw	r9,1052(sp)
   82610:	da010915 	stw	r8,1060(sp)
   82614:	dec10015 	stw	sp,1024(sp)
   82618:	dec10415 	stw	sp,1040(sp)
   8261c:	d8c10215 	stw	r3,1032(sp)
   82620:	d8c10515 	stw	r3,1044(sp)
   82624:	d8010615 	stw	zero,1048(sp)
   82628:	00803b00 	call	803b0 <___vfprintf_internal_r>
   8262c:	1023883a 	mov	r17,r2
   82630:	10000416 	blt	r2,zero,82644 <__sbprintf+0x80>
   82634:	d9410004 	addi	r5,sp,1024
   82638:	9009883a 	mov	r4,r18
   8263c:	00842780 	call	84278 <_fflush_r>
   82640:	10000d1e 	bne	r2,zero,82678 <__sbprintf+0xb4>
   82644:	d881030b 	ldhu	r2,1036(sp)
   82648:	1080100c 	andi	r2,r2,64
   8264c:	10000326 	beq	r2,zero,8265c <__sbprintf+0x98>
   82650:	8080030b 	ldhu	r2,12(r16)
   82654:	10801014 	ori	r2,r2,64
   82658:	8080030d 	sth	r2,12(r16)
   8265c:	8805883a 	mov	r2,r17
   82660:	dfc11d17 	ldw	ra,1140(sp)
   82664:	dc811c17 	ldw	r18,1136(sp)
   82668:	dc411b17 	ldw	r17,1132(sp)
   8266c:	dc011a17 	ldw	r16,1128(sp)
   82670:	dec11e04 	addi	sp,sp,1144
   82674:	f800283a 	ret
   82678:	047fffc4 	movi	r17,-1
   8267c:	003ff106 	br	82644 <__sbprintf+0x80>

00082680 <__swsetup_r>:
   82680:	00800274 	movhi	r2,9
   82684:	defffd04 	addi	sp,sp,-12
   82688:	1085b604 	addi	r2,r2,5848
   8268c:	dc400115 	stw	r17,4(sp)
   82690:	2023883a 	mov	r17,r4
   82694:	11000017 	ldw	r4,0(r2)
   82698:	dc000015 	stw	r16,0(sp)
   8269c:	dfc00215 	stw	ra,8(sp)
   826a0:	2821883a 	mov	r16,r5
   826a4:	20000226 	beq	r4,zero,826b0 <__swsetup_r+0x30>
   826a8:	20800e17 	ldw	r2,56(r4)
   826ac:	10003126 	beq	r2,zero,82774 <__swsetup_r+0xf4>
   826b0:	8080030b 	ldhu	r2,12(r16)
   826b4:	10c0020c 	andi	r3,r2,8
   826b8:	1009883a 	mov	r4,r2
   826bc:	18000f26 	beq	r3,zero,826fc <__swsetup_r+0x7c>
   826c0:	80c00417 	ldw	r3,16(r16)
   826c4:	18001526 	beq	r3,zero,8271c <__swsetup_r+0x9c>
   826c8:	1100004c 	andi	r4,r2,1
   826cc:	20001c1e 	bne	r4,zero,82740 <__swsetup_r+0xc0>
   826d0:	1080008c 	andi	r2,r2,2
   826d4:	1000291e 	bne	r2,zero,8277c <__swsetup_r+0xfc>
   826d8:	80800517 	ldw	r2,20(r16)
   826dc:	80800215 	stw	r2,8(r16)
   826e0:	18001c26 	beq	r3,zero,82754 <__swsetup_r+0xd4>
   826e4:	0005883a 	mov	r2,zero
   826e8:	dfc00217 	ldw	ra,8(sp)
   826ec:	dc400117 	ldw	r17,4(sp)
   826f0:	dc000017 	ldw	r16,0(sp)
   826f4:	dec00304 	addi	sp,sp,12
   826f8:	f800283a 	ret
   826fc:	2080040c 	andi	r2,r4,16
   82700:	10002e26 	beq	r2,zero,827bc <__swsetup_r+0x13c>
   82704:	2080010c 	andi	r2,r4,4
   82708:	10001e1e 	bne	r2,zero,82784 <__swsetup_r+0x104>
   8270c:	80c00417 	ldw	r3,16(r16)
   82710:	20800214 	ori	r2,r4,8
   82714:	8080030d 	sth	r2,12(r16)
   82718:	183feb1e 	bne	r3,zero,826c8 <__swsetup_r+0x48>
   8271c:	1100a00c 	andi	r4,r2,640
   82720:	01408004 	movi	r5,512
   82724:	217fe826 	beq	r4,r5,826c8 <__swsetup_r+0x48>
   82728:	800b883a 	mov	r5,r16
   8272c:	8809883a 	mov	r4,r17
   82730:	0084d3c0 	call	84d3c <__smakebuf_r>
   82734:	8080030b 	ldhu	r2,12(r16)
   82738:	80c00417 	ldw	r3,16(r16)
   8273c:	003fe206 	br	826c8 <__swsetup_r+0x48>
   82740:	80800517 	ldw	r2,20(r16)
   82744:	80000215 	stw	zero,8(r16)
   82748:	0085c83a 	sub	r2,zero,r2
   8274c:	80800615 	stw	r2,24(r16)
   82750:	183fe41e 	bne	r3,zero,826e4 <__swsetup_r+0x64>
   82754:	80c0030b 	ldhu	r3,12(r16)
   82758:	0005883a 	mov	r2,zero
   8275c:	1900200c 	andi	r4,r3,128
   82760:	203fe126 	beq	r4,zero,826e8 <__swsetup_r+0x68>
   82764:	18c01014 	ori	r3,r3,64
   82768:	80c0030d 	sth	r3,12(r16)
   8276c:	00bfffc4 	movi	r2,-1
   82770:	003fdd06 	br	826e8 <__swsetup_r+0x68>
   82774:	00846540 	call	84654 <__sinit>
   82778:	003fcd06 	br	826b0 <__swsetup_r+0x30>
   8277c:	0005883a 	mov	r2,zero
   82780:	003fd606 	br	826dc <__swsetup_r+0x5c>
   82784:	81400c17 	ldw	r5,48(r16)
   82788:	28000626 	beq	r5,zero,827a4 <__swsetup_r+0x124>
   8278c:	80801004 	addi	r2,r16,64
   82790:	28800326 	beq	r5,r2,827a0 <__swsetup_r+0x120>
   82794:	8809883a 	mov	r4,r17
   82798:	00847c80 	call	847c8 <_free_r>
   8279c:	8100030b 	ldhu	r4,12(r16)
   827a0:	80000c15 	stw	zero,48(r16)
   827a4:	80c00417 	ldw	r3,16(r16)
   827a8:	00bff6c4 	movi	r2,-37
   827ac:	1108703a 	and	r4,r2,r4
   827b0:	80000115 	stw	zero,4(r16)
   827b4:	80c00015 	stw	r3,0(r16)
   827b8:	003fd506 	br	82710 <__swsetup_r+0x90>
   827bc:	00800244 	movi	r2,9
   827c0:	88800015 	stw	r2,0(r17)
   827c4:	20801014 	ori	r2,r4,64
   827c8:	8080030d 	sth	r2,12(r16)
   827cc:	00bfffc4 	movi	r2,-1
   827d0:	003fc506 	br	826e8 <__swsetup_r+0x68>

000827d4 <quorem>:
   827d4:	defff704 	addi	sp,sp,-36
   827d8:	dc800215 	stw	r18,8(sp)
   827dc:	20800417 	ldw	r2,16(r4)
   827e0:	2c800417 	ldw	r18,16(r5)
   827e4:	dfc00815 	stw	ra,32(sp)
   827e8:	ddc00715 	stw	r23,28(sp)
   827ec:	dd800615 	stw	r22,24(sp)
   827f0:	dd400515 	stw	r21,20(sp)
   827f4:	dd000415 	stw	r20,16(sp)
   827f8:	dcc00315 	stw	r19,12(sp)
   827fc:	dc400115 	stw	r17,4(sp)
   82800:	dc000015 	stw	r16,0(sp)
   82804:	14807116 	blt	r2,r18,829cc <quorem+0x1f8>
   82808:	94bfffc4 	addi	r18,r18,-1
   8280c:	94ad883a 	add	r22,r18,r18
   82810:	b5ad883a 	add	r22,r22,r22
   82814:	2c400504 	addi	r17,r5,20
   82818:	8da9883a 	add	r20,r17,r22
   8281c:	25400504 	addi	r21,r4,20
   82820:	282f883a 	mov	r23,r5
   82824:	adad883a 	add	r22,r21,r22
   82828:	a1400017 	ldw	r5,0(r20)
   8282c:	2021883a 	mov	r16,r4
   82830:	b1000017 	ldw	r4,0(r22)
   82834:	29400044 	addi	r5,r5,1
   82838:	008a46c0 	call	8a46c <__udivsi3>
   8283c:	1027883a 	mov	r19,r2
   82840:	10002c26 	beq	r2,zero,828f4 <quorem+0x120>
   82844:	a813883a 	mov	r9,r21
   82848:	880b883a 	mov	r5,r17
   8284c:	0009883a 	mov	r4,zero
   82850:	000d883a 	mov	r6,zero
   82854:	2a000017 	ldw	r8,0(r5)
   82858:	49c00017 	ldw	r7,0(r9)
   8285c:	29400104 	addi	r5,r5,4
   82860:	40bfffcc 	andi	r2,r8,65535
   82864:	14c5383a 	mul	r2,r2,r19
   82868:	4010d43a 	srli	r8,r8,16
   8286c:	38ffffcc 	andi	r3,r7,65535
   82870:	1105883a 	add	r2,r2,r4
   82874:	1008d43a 	srli	r4,r2,16
   82878:	44d1383a 	mul	r8,r8,r19
   8287c:	198d883a 	add	r6,r3,r6
   82880:	10ffffcc 	andi	r3,r2,65535
   82884:	30c7c83a 	sub	r3,r6,r3
   82888:	380ed43a 	srli	r7,r7,16
   8288c:	4105883a 	add	r2,r8,r4
   82890:	180dd43a 	srai	r6,r3,16
   82894:	113fffcc 	andi	r4,r2,65535
   82898:	390fc83a 	sub	r7,r7,r4
   8289c:	398d883a 	add	r6,r7,r6
   828a0:	300e943a 	slli	r7,r6,16
   828a4:	18ffffcc 	andi	r3,r3,65535
   828a8:	1008d43a 	srli	r4,r2,16
   828ac:	38ceb03a 	or	r7,r7,r3
   828b0:	49c00015 	stw	r7,0(r9)
   828b4:	300dd43a 	srai	r6,r6,16
   828b8:	4a400104 	addi	r9,r9,4
   828bc:	a17fe52e 	bgeu	r20,r5,82854 <quorem+0x80>
   828c0:	b0800017 	ldw	r2,0(r22)
   828c4:	10000b1e 	bne	r2,zero,828f4 <quorem+0x120>
   828c8:	b0bfff04 	addi	r2,r22,-4
   828cc:	a880082e 	bgeu	r21,r2,828f0 <quorem+0x11c>
   828d0:	b0ffff17 	ldw	r3,-4(r22)
   828d4:	18000326 	beq	r3,zero,828e4 <quorem+0x110>
   828d8:	00000506 	br	828f0 <quorem+0x11c>
   828dc:	10c00017 	ldw	r3,0(r2)
   828e0:	1800031e 	bne	r3,zero,828f0 <quorem+0x11c>
   828e4:	10bfff04 	addi	r2,r2,-4
   828e8:	94bfffc4 	addi	r18,r18,-1
   828ec:	a8bffb36 	bltu	r21,r2,828dc <quorem+0x108>
   828f0:	84800415 	stw	r18,16(r16)
   828f4:	b80b883a 	mov	r5,r23
   828f8:	8009883a 	mov	r4,r16
   828fc:	00863200 	call	86320 <__mcmp>
   82900:	10002616 	blt	r2,zero,8299c <quorem+0x1c8>
   82904:	9cc00044 	addi	r19,r19,1
   82908:	a805883a 	mov	r2,r21
   8290c:	000b883a 	mov	r5,zero
   82910:	11000017 	ldw	r4,0(r2)
   82914:	89800017 	ldw	r6,0(r17)
   82918:	10800104 	addi	r2,r2,4
   8291c:	20ffffcc 	andi	r3,r4,65535
   82920:	194b883a 	add	r5,r3,r5
   82924:	30ffffcc 	andi	r3,r6,65535
   82928:	28c7c83a 	sub	r3,r5,r3
   8292c:	300cd43a 	srli	r6,r6,16
   82930:	2008d43a 	srli	r4,r4,16
   82934:	180bd43a 	srai	r5,r3,16
   82938:	18ffffcc 	andi	r3,r3,65535
   8293c:	2189c83a 	sub	r4,r4,r6
   82940:	2149883a 	add	r4,r4,r5
   82944:	200c943a 	slli	r6,r4,16
   82948:	8c400104 	addi	r17,r17,4
   8294c:	200bd43a 	srai	r5,r4,16
   82950:	30c6b03a 	or	r3,r6,r3
   82954:	10ffff15 	stw	r3,-4(r2)
   82958:	a47fed2e 	bgeu	r20,r17,82910 <quorem+0x13c>
   8295c:	9485883a 	add	r2,r18,r18
   82960:	1085883a 	add	r2,r2,r2
   82964:	a887883a 	add	r3,r21,r2
   82968:	18800017 	ldw	r2,0(r3)
   8296c:	10000b1e 	bne	r2,zero,8299c <quorem+0x1c8>
   82970:	18bfff04 	addi	r2,r3,-4
   82974:	a880082e 	bgeu	r21,r2,82998 <quorem+0x1c4>
   82978:	18ffff17 	ldw	r3,-4(r3)
   8297c:	18000326 	beq	r3,zero,8298c <quorem+0x1b8>
   82980:	00000506 	br	82998 <quorem+0x1c4>
   82984:	10c00017 	ldw	r3,0(r2)
   82988:	1800031e 	bne	r3,zero,82998 <quorem+0x1c4>
   8298c:	10bfff04 	addi	r2,r2,-4
   82990:	94bfffc4 	addi	r18,r18,-1
   82994:	a8bffb36 	bltu	r21,r2,82984 <quorem+0x1b0>
   82998:	84800415 	stw	r18,16(r16)
   8299c:	9805883a 	mov	r2,r19
   829a0:	dfc00817 	ldw	ra,32(sp)
   829a4:	ddc00717 	ldw	r23,28(sp)
   829a8:	dd800617 	ldw	r22,24(sp)
   829ac:	dd400517 	ldw	r21,20(sp)
   829b0:	dd000417 	ldw	r20,16(sp)
   829b4:	dcc00317 	ldw	r19,12(sp)
   829b8:	dc800217 	ldw	r18,8(sp)
   829bc:	dc400117 	ldw	r17,4(sp)
   829c0:	dc000017 	ldw	r16,0(sp)
   829c4:	dec00904 	addi	sp,sp,36
   829c8:	f800283a 	ret
   829cc:	0005883a 	mov	r2,zero
   829d0:	003ff306 	br	829a0 <quorem+0x1cc>

000829d4 <_dtoa_r>:
   829d4:	20801017 	ldw	r2,64(r4)
   829d8:	deffde04 	addi	sp,sp,-136
   829dc:	df002015 	stw	fp,128(sp)
   829e0:	dcc01b15 	stw	r19,108(sp)
   829e4:	dc801a15 	stw	r18,104(sp)
   829e8:	dc401915 	stw	r17,100(sp)
   829ec:	dc001815 	stw	r16,96(sp)
   829f0:	dfc02115 	stw	ra,132(sp)
   829f4:	ddc01f15 	stw	r23,124(sp)
   829f8:	dd801e15 	stw	r22,120(sp)
   829fc:	dd401d15 	stw	r21,116(sp)
   82a00:	dd001c15 	stw	r20,112(sp)
   82a04:	d9c00315 	stw	r7,12(sp)
   82a08:	2039883a 	mov	fp,r4
   82a0c:	3023883a 	mov	r17,r6
   82a10:	2825883a 	mov	r18,r5
   82a14:	dc002417 	ldw	r16,144(sp)
   82a18:	3027883a 	mov	r19,r6
   82a1c:	10000826 	beq	r2,zero,82a40 <_dtoa_r+0x6c>
   82a20:	21801117 	ldw	r6,68(r4)
   82a24:	00c00044 	movi	r3,1
   82a28:	100b883a 	mov	r5,r2
   82a2c:	1986983a 	sll	r3,r3,r6
   82a30:	11800115 	stw	r6,4(r2)
   82a34:	10c00215 	stw	r3,8(r2)
   82a38:	0085b000 	call	85b00 <_Bfree>
   82a3c:	e0001015 	stw	zero,64(fp)
   82a40:	88002e16 	blt	r17,zero,82afc <_dtoa_r+0x128>
   82a44:	80000015 	stw	zero,0(r16)
   82a48:	889ffc2c 	andhi	r2,r17,32752
   82a4c:	00dffc34 	movhi	r3,32752
   82a50:	10c01c26 	beq	r2,r3,82ac4 <_dtoa_r+0xf0>
   82a54:	000d883a 	mov	r6,zero
   82a58:	000f883a 	mov	r7,zero
   82a5c:	9009883a 	mov	r4,r18
   82a60:	980b883a 	mov	r5,r19
   82a64:	008b6bc0 	call	8b6bc <__eqdf2>
   82a68:	10002b1e 	bne	r2,zero,82b18 <_dtoa_r+0x144>
   82a6c:	d9c02317 	ldw	r7,140(sp)
   82a70:	00800044 	movi	r2,1
   82a74:	38800015 	stw	r2,0(r7)
   82a78:	d8802517 	ldw	r2,148(sp)
   82a7c:	10019e26 	beq	r2,zero,830f8 <_dtoa_r+0x724>
   82a80:	d8c02517 	ldw	r3,148(sp)
   82a84:	00800274 	movhi	r2,9
   82a88:	10be5d44 	addi	r2,r2,-1675
   82a8c:	18800015 	stw	r2,0(r3)
   82a90:	10bfffc4 	addi	r2,r2,-1
   82a94:	dfc02117 	ldw	ra,132(sp)
   82a98:	df002017 	ldw	fp,128(sp)
   82a9c:	ddc01f17 	ldw	r23,124(sp)
   82aa0:	dd801e17 	ldw	r22,120(sp)
   82aa4:	dd401d17 	ldw	r21,116(sp)
   82aa8:	dd001c17 	ldw	r20,112(sp)
   82aac:	dcc01b17 	ldw	r19,108(sp)
   82ab0:	dc801a17 	ldw	r18,104(sp)
   82ab4:	dc401917 	ldw	r17,100(sp)
   82ab8:	dc001817 	ldw	r16,96(sp)
   82abc:	dec02204 	addi	sp,sp,136
   82ac0:	f800283a 	ret
   82ac4:	d8c02317 	ldw	r3,140(sp)
   82ac8:	0089c3c4 	movi	r2,9999
   82acc:	18800015 	stw	r2,0(r3)
   82ad0:	90017726 	beq	r18,zero,830b0 <_dtoa_r+0x6dc>
   82ad4:	00800274 	movhi	r2,9
   82ad8:	10be6904 	addi	r2,r2,-1628
   82adc:	d9002517 	ldw	r4,148(sp)
   82ae0:	203fec26 	beq	r4,zero,82a94 <_dtoa_r+0xc0>
   82ae4:	10c000c7 	ldb	r3,3(r2)
   82ae8:	1801781e 	bne	r3,zero,830cc <_dtoa_r+0x6f8>
   82aec:	10c000c4 	addi	r3,r2,3
   82af0:	d9802517 	ldw	r6,148(sp)
   82af4:	30c00015 	stw	r3,0(r6)
   82af8:	003fe606 	br	82a94 <_dtoa_r+0xc0>
   82afc:	04e00034 	movhi	r19,32768
   82b00:	9cffffc4 	addi	r19,r19,-1
   82b04:	00800044 	movi	r2,1
   82b08:	8ce6703a 	and	r19,r17,r19
   82b0c:	80800015 	stw	r2,0(r16)
   82b10:	9823883a 	mov	r17,r19
   82b14:	003fcc06 	br	82a48 <_dtoa_r+0x74>
   82b18:	d8800204 	addi	r2,sp,8
   82b1c:	d8800015 	stw	r2,0(sp)
   82b20:	d9c00104 	addi	r7,sp,4
   82b24:	900b883a 	mov	r5,r18
   82b28:	980d883a 	mov	r6,r19
   82b2c:	e009883a 	mov	r4,fp
   82b30:	8820d53a 	srli	r16,r17,20
   82b34:	00866ec0 	call	866ec <__d2b>
   82b38:	d8800915 	stw	r2,36(sp)
   82b3c:	8001651e 	bne	r16,zero,830d4 <_dtoa_r+0x700>
   82b40:	dd800217 	ldw	r22,8(sp)
   82b44:	dc000117 	ldw	r16,4(sp)
   82b48:	00800804 	movi	r2,32
   82b4c:	b421883a 	add	r16,r22,r16
   82b50:	80c10c84 	addi	r3,r16,1074
   82b54:	10c2d10e 	bge	r2,r3,8369c <_dtoa_r+0xcc8>
   82b58:	00801004 	movi	r2,64
   82b5c:	81010484 	addi	r4,r16,1042
   82b60:	10c7c83a 	sub	r3,r2,r3
   82b64:	9108d83a 	srl	r4,r18,r4
   82b68:	88e2983a 	sll	r17,r17,r3
   82b6c:	2448b03a 	or	r4,r4,r17
   82b70:	008ca840 	call	8ca84 <__floatunsidf>
   82b74:	017f8434 	movhi	r5,65040
   82b78:	01800044 	movi	r6,1
   82b7c:	1009883a 	mov	r4,r2
   82b80:	194b883a 	add	r5,r3,r5
   82b84:	843fffc4 	addi	r16,r16,-1
   82b88:	d9801115 	stw	r6,68(sp)
   82b8c:	000d883a 	mov	r6,zero
   82b90:	01cffe34 	movhi	r7,16376
   82b94:	008c02c0 	call	8c02c <__subdf3>
   82b98:	0198dbf4 	movhi	r6,25455
   82b9c:	01cff4f4 	movhi	r7,16339
   82ba0:	3190d844 	addi	r6,r6,17249
   82ba4:	39e1e9c4 	addi	r7,r7,-30809
   82ba8:	1009883a 	mov	r4,r2
   82bac:	180b883a 	mov	r5,r3
   82bb0:	008b9140 	call	8b914 <__muldf3>
   82bb4:	01a2d874 	movhi	r6,35681
   82bb8:	01cff1f4 	movhi	r7,16327
   82bbc:	31b22cc4 	addi	r6,r6,-14157
   82bc0:	39e28a04 	addi	r7,r7,-30168
   82bc4:	180b883a 	mov	r5,r3
   82bc8:	1009883a 	mov	r4,r2
   82bcc:	008a5280 	call	8a528 <__adddf3>
   82bd0:	8009883a 	mov	r4,r16
   82bd4:	1029883a 	mov	r20,r2
   82bd8:	1823883a 	mov	r17,r3
   82bdc:	008c9a80 	call	8c9a8 <__floatsidf>
   82be0:	019427f4 	movhi	r6,20639
   82be4:	01cff4f4 	movhi	r7,16339
   82be8:	319e7ec4 	addi	r6,r6,31227
   82bec:	39d104c4 	addi	r7,r7,17427
   82bf0:	1009883a 	mov	r4,r2
   82bf4:	180b883a 	mov	r5,r3
   82bf8:	008b9140 	call	8b914 <__muldf3>
   82bfc:	100d883a 	mov	r6,r2
   82c00:	180f883a 	mov	r7,r3
   82c04:	a009883a 	mov	r4,r20
   82c08:	880b883a 	mov	r5,r17
   82c0c:	008a5280 	call	8a528 <__adddf3>
   82c10:	1009883a 	mov	r4,r2
   82c14:	180b883a 	mov	r5,r3
   82c18:	1029883a 	mov	r20,r2
   82c1c:	1823883a 	mov	r17,r3
   82c20:	008c9280 	call	8c928 <__fixdfsi>
   82c24:	000d883a 	mov	r6,zero
   82c28:	000f883a 	mov	r7,zero
   82c2c:	a009883a 	mov	r4,r20
   82c30:	880b883a 	mov	r5,r17
   82c34:	d8800515 	stw	r2,20(sp)
   82c38:	008b8200 	call	8b820 <__ledf2>
   82c3c:	10028716 	blt	r2,zero,8365c <_dtoa_r+0xc88>
   82c40:	d8c00517 	ldw	r3,20(sp)
   82c44:	00800584 	movi	r2,22
   82c48:	10c27536 	bltu	r2,r3,83620 <_dtoa_r+0xc4c>
   82c4c:	180490fa 	slli	r2,r3,3
   82c50:	00c00274 	movhi	r3,9
   82c54:	18fe8504 	addi	r3,r3,-1516
   82c58:	1885883a 	add	r2,r3,r2
   82c5c:	11000017 	ldw	r4,0(r2)
   82c60:	11400117 	ldw	r5,4(r2)
   82c64:	900d883a 	mov	r6,r18
   82c68:	980f883a 	mov	r7,r19
   82c6c:	008b7440 	call	8b744 <__gedf2>
   82c70:	00828d0e 	bge	zero,r2,836a8 <_dtoa_r+0xcd4>
   82c74:	d9000517 	ldw	r4,20(sp)
   82c78:	d8000e15 	stw	zero,56(sp)
   82c7c:	213fffc4 	addi	r4,r4,-1
   82c80:	d9000515 	stw	r4,20(sp)
   82c84:	b42dc83a 	sub	r22,r22,r16
   82c88:	b5bfffc4 	addi	r22,r22,-1
   82c8c:	b0026f16 	blt	r22,zero,8364c <_dtoa_r+0xc78>
   82c90:	d8000815 	stw	zero,32(sp)
   82c94:	d9c00517 	ldw	r7,20(sp)
   82c98:	38026416 	blt	r7,zero,8362c <_dtoa_r+0xc58>
   82c9c:	b1ed883a 	add	r22,r22,r7
   82ca0:	d9c00d15 	stw	r7,52(sp)
   82ca4:	d8000a15 	stw	zero,40(sp)
   82ca8:	d9800317 	ldw	r6,12(sp)
   82cac:	00800244 	movi	r2,9
   82cb0:	11811436 	bltu	r2,r6,83104 <_dtoa_r+0x730>
   82cb4:	00800144 	movi	r2,5
   82cb8:	1184e10e 	bge	r2,r6,84040 <_dtoa_r+0x166c>
   82cbc:	31bfff04 	addi	r6,r6,-4
   82cc0:	d9800315 	stw	r6,12(sp)
   82cc4:	0023883a 	mov	r17,zero
   82cc8:	d9800317 	ldw	r6,12(sp)
   82ccc:	008000c4 	movi	r2,3
   82cd0:	30836726 	beq	r6,r2,83a70 <_dtoa_r+0x109c>
   82cd4:	1183410e 	bge	r2,r6,839dc <_dtoa_r+0x1008>
   82cd8:	d9c00317 	ldw	r7,12(sp)
   82cdc:	00800104 	movi	r2,4
   82ce0:	38827c26 	beq	r7,r2,836d4 <_dtoa_r+0xd00>
   82ce4:	00800144 	movi	r2,5
   82ce8:	3884c41e 	bne	r7,r2,83ffc <_dtoa_r+0x1628>
   82cec:	00800044 	movi	r2,1
   82cf0:	d8800b15 	stw	r2,44(sp)
   82cf4:	d8c00517 	ldw	r3,20(sp)
   82cf8:	d9002217 	ldw	r4,136(sp)
   82cfc:	1907883a 	add	r3,r3,r4
   82d00:	19800044 	addi	r6,r3,1
   82d04:	d8c00c15 	stw	r3,48(sp)
   82d08:	d9800615 	stw	r6,24(sp)
   82d0c:	0183a40e 	bge	zero,r6,83ba0 <_dtoa_r+0x11cc>
   82d10:	d9800617 	ldw	r6,24(sp)
   82d14:	3021883a 	mov	r16,r6
   82d18:	e0001115 	stw	zero,68(fp)
   82d1c:	008005c4 	movi	r2,23
   82d20:	1184c92e 	bgeu	r2,r6,84048 <_dtoa_r+0x1674>
   82d24:	00c00044 	movi	r3,1
   82d28:	00800104 	movi	r2,4
   82d2c:	1085883a 	add	r2,r2,r2
   82d30:	11000504 	addi	r4,r2,20
   82d34:	180b883a 	mov	r5,r3
   82d38:	18c00044 	addi	r3,r3,1
   82d3c:	313ffb2e 	bgeu	r6,r4,82d2c <_dtoa_r+0x358>
   82d40:	e1401115 	stw	r5,68(fp)
   82d44:	e009883a 	mov	r4,fp
   82d48:	0085a580 	call	85a58 <_Balloc>
   82d4c:	d8800715 	stw	r2,28(sp)
   82d50:	e0801015 	stw	r2,64(fp)
   82d54:	00800384 	movi	r2,14
   82d58:	1400f736 	bltu	r2,r16,83138 <_dtoa_r+0x764>
   82d5c:	8800f626 	beq	r17,zero,83138 <_dtoa_r+0x764>
   82d60:	d9c00517 	ldw	r7,20(sp)
   82d64:	01c39a0e 	bge	zero,r7,83bd0 <_dtoa_r+0x11fc>
   82d68:	388003cc 	andi	r2,r7,15
   82d6c:	100490fa 	slli	r2,r2,3
   82d70:	382bd13a 	srai	r21,r7,4
   82d74:	00c00274 	movhi	r3,9
   82d78:	18fe8504 	addi	r3,r3,-1516
   82d7c:	1885883a 	add	r2,r3,r2
   82d80:	a8c0040c 	andi	r3,r21,16
   82d84:	12400017 	ldw	r9,0(r2)
   82d88:	12000117 	ldw	r8,4(r2)
   82d8c:	18037926 	beq	r3,zero,83b74 <_dtoa_r+0x11a0>
   82d90:	00800274 	movhi	r2,9
   82d94:	10be7b04 	addi	r2,r2,-1556
   82d98:	11800817 	ldw	r6,32(r2)
   82d9c:	11c00917 	ldw	r7,36(r2)
   82da0:	9009883a 	mov	r4,r18
   82da4:	980b883a 	mov	r5,r19
   82da8:	da001715 	stw	r8,92(sp)
   82dac:	da401615 	stw	r9,88(sp)
   82db0:	008add40 	call	8add4 <__divdf3>
   82db4:	da001717 	ldw	r8,92(sp)
   82db8:	da401617 	ldw	r9,88(sp)
   82dbc:	ad4003cc 	andi	r21,r21,15
   82dc0:	040000c4 	movi	r16,3
   82dc4:	1023883a 	mov	r17,r2
   82dc8:	1829883a 	mov	r20,r3
   82dcc:	a8001126 	beq	r21,zero,82e14 <_dtoa_r+0x440>
   82dd0:	05c00274 	movhi	r23,9
   82dd4:	bdfe7b04 	addi	r23,r23,-1556
   82dd8:	4805883a 	mov	r2,r9
   82ddc:	4007883a 	mov	r3,r8
   82de0:	a980004c 	andi	r6,r21,1
   82de4:	1009883a 	mov	r4,r2
   82de8:	a82bd07a 	srai	r21,r21,1
   82dec:	180b883a 	mov	r5,r3
   82df0:	30000426 	beq	r6,zero,82e04 <_dtoa_r+0x430>
   82df4:	b9800017 	ldw	r6,0(r23)
   82df8:	b9c00117 	ldw	r7,4(r23)
   82dfc:	84000044 	addi	r16,r16,1
   82e00:	008b9140 	call	8b914 <__muldf3>
   82e04:	bdc00204 	addi	r23,r23,8
   82e08:	a83ff51e 	bne	r21,zero,82de0 <_dtoa_r+0x40c>
   82e0c:	1013883a 	mov	r9,r2
   82e10:	1811883a 	mov	r8,r3
   82e14:	480d883a 	mov	r6,r9
   82e18:	400f883a 	mov	r7,r8
   82e1c:	8809883a 	mov	r4,r17
   82e20:	a00b883a 	mov	r5,r20
   82e24:	008add40 	call	8add4 <__divdf3>
   82e28:	d8800f15 	stw	r2,60(sp)
   82e2c:	d8c01015 	stw	r3,64(sp)
   82e30:	d8c00e17 	ldw	r3,56(sp)
   82e34:	18000626 	beq	r3,zero,82e50 <_dtoa_r+0x47c>
   82e38:	d9000f17 	ldw	r4,60(sp)
   82e3c:	d9401017 	ldw	r5,64(sp)
   82e40:	000d883a 	mov	r6,zero
   82e44:	01cffc34 	movhi	r7,16368
   82e48:	008b8200 	call	8b820 <__ledf2>
   82e4c:	10040b16 	blt	r2,zero,83e7c <_dtoa_r+0x14a8>
   82e50:	8009883a 	mov	r4,r16
   82e54:	008c9a80 	call	8c9a8 <__floatsidf>
   82e58:	d9800f17 	ldw	r6,60(sp)
   82e5c:	d9c01017 	ldw	r7,64(sp)
   82e60:	1009883a 	mov	r4,r2
   82e64:	180b883a 	mov	r5,r3
   82e68:	008b9140 	call	8b914 <__muldf3>
   82e6c:	000d883a 	mov	r6,zero
   82e70:	01d00734 	movhi	r7,16412
   82e74:	1009883a 	mov	r4,r2
   82e78:	180b883a 	mov	r5,r3
   82e7c:	008a5280 	call	8a528 <__adddf3>
   82e80:	1021883a 	mov	r16,r2
   82e84:	d8800617 	ldw	r2,24(sp)
   82e88:	047f3034 	movhi	r17,64704
   82e8c:	1c63883a 	add	r17,r3,r17
   82e90:	10031826 	beq	r2,zero,83af4 <_dtoa_r+0x1120>
   82e94:	d8c00517 	ldw	r3,20(sp)
   82e98:	db000617 	ldw	r12,24(sp)
   82e9c:	d8c01315 	stw	r3,76(sp)
   82ea0:	d9000b17 	ldw	r4,44(sp)
   82ea4:	20038f26 	beq	r4,zero,83ce4 <_dtoa_r+0x1310>
   82ea8:	60bfffc4 	addi	r2,r12,-1
   82eac:	100490fa 	slli	r2,r2,3
   82eb0:	00c00274 	movhi	r3,9
   82eb4:	18fe8504 	addi	r3,r3,-1516
   82eb8:	1885883a 	add	r2,r3,r2
   82ebc:	11800017 	ldw	r6,0(r2)
   82ec0:	11c00117 	ldw	r7,4(r2)
   82ec4:	d8800717 	ldw	r2,28(sp)
   82ec8:	0009883a 	mov	r4,zero
   82ecc:	014ff834 	movhi	r5,16352
   82ed0:	db001615 	stw	r12,88(sp)
   82ed4:	15c00044 	addi	r23,r2,1
   82ed8:	008add40 	call	8add4 <__divdf3>
   82edc:	800d883a 	mov	r6,r16
   82ee0:	880f883a 	mov	r7,r17
   82ee4:	1009883a 	mov	r4,r2
   82ee8:	180b883a 	mov	r5,r3
   82eec:	008c02c0 	call	8c02c <__subdf3>
   82ef0:	d9401017 	ldw	r5,64(sp)
   82ef4:	d9000f17 	ldw	r4,60(sp)
   82ef8:	102b883a 	mov	r21,r2
   82efc:	d8c01215 	stw	r3,72(sp)
   82f00:	008c9280 	call	8c928 <__fixdfsi>
   82f04:	1009883a 	mov	r4,r2
   82f08:	1029883a 	mov	r20,r2
   82f0c:	008c9a80 	call	8c9a8 <__floatsidf>
   82f10:	d9000f17 	ldw	r4,60(sp)
   82f14:	d9401017 	ldw	r5,64(sp)
   82f18:	100d883a 	mov	r6,r2
   82f1c:	180f883a 	mov	r7,r3
   82f20:	008c02c0 	call	8c02c <__subdf3>
   82f24:	1823883a 	mov	r17,r3
   82f28:	d8c00717 	ldw	r3,28(sp)
   82f2c:	d9401217 	ldw	r5,72(sp)
   82f30:	a2000c04 	addi	r8,r20,48
   82f34:	1021883a 	mov	r16,r2
   82f38:	1a000005 	stb	r8,0(r3)
   82f3c:	800d883a 	mov	r6,r16
   82f40:	880f883a 	mov	r7,r17
   82f44:	a809883a 	mov	r4,r21
   82f48:	4029883a 	mov	r20,r8
   82f4c:	008b7440 	call	8b744 <__gedf2>
   82f50:	00841d16 	blt	zero,r2,83fc8 <_dtoa_r+0x15f4>
   82f54:	800d883a 	mov	r6,r16
   82f58:	880f883a 	mov	r7,r17
   82f5c:	0009883a 	mov	r4,zero
   82f60:	014ffc34 	movhi	r5,16368
   82f64:	008c02c0 	call	8c02c <__subdf3>
   82f68:	d9401217 	ldw	r5,72(sp)
   82f6c:	100d883a 	mov	r6,r2
   82f70:	180f883a 	mov	r7,r3
   82f74:	a809883a 	mov	r4,r21
   82f78:	008b7440 	call	8b744 <__gedf2>
   82f7c:	db001617 	ldw	r12,88(sp)
   82f80:	00840e16 	blt	zero,r2,83fbc <_dtoa_r+0x15e8>
   82f84:	00800044 	movi	r2,1
   82f88:	13006b0e 	bge	r2,r12,83138 <_dtoa_r+0x764>
   82f8c:	d9000717 	ldw	r4,28(sp)
   82f90:	dd800f15 	stw	r22,60(sp)
   82f94:	dcc01015 	stw	r19,64(sp)
   82f98:	2319883a 	add	r12,r4,r12
   82f9c:	dcc01217 	ldw	r19,72(sp)
   82fa0:	602d883a 	mov	r22,r12
   82fa4:	dc801215 	stw	r18,72(sp)
   82fa8:	b825883a 	mov	r18,r23
   82fac:	00000906 	br	82fd4 <_dtoa_r+0x600>
   82fb0:	008c02c0 	call	8c02c <__subdf3>
   82fb4:	a80d883a 	mov	r6,r21
   82fb8:	980f883a 	mov	r7,r19
   82fbc:	1009883a 	mov	r4,r2
   82fc0:	180b883a 	mov	r5,r3
   82fc4:	008b8200 	call	8b820 <__ledf2>
   82fc8:	1003e816 	blt	r2,zero,83f6c <_dtoa_r+0x1598>
   82fcc:	b825883a 	mov	r18,r23
   82fd0:	bd83e926 	beq	r23,r22,83f78 <_dtoa_r+0x15a4>
   82fd4:	a809883a 	mov	r4,r21
   82fd8:	980b883a 	mov	r5,r19
   82fdc:	000d883a 	mov	r6,zero
   82fe0:	01d00934 	movhi	r7,16420
   82fe4:	008b9140 	call	8b914 <__muldf3>
   82fe8:	000d883a 	mov	r6,zero
   82fec:	01d00934 	movhi	r7,16420
   82ff0:	8009883a 	mov	r4,r16
   82ff4:	880b883a 	mov	r5,r17
   82ff8:	102b883a 	mov	r21,r2
   82ffc:	1827883a 	mov	r19,r3
   83000:	008b9140 	call	8b914 <__muldf3>
   83004:	180b883a 	mov	r5,r3
   83008:	1009883a 	mov	r4,r2
   8300c:	1821883a 	mov	r16,r3
   83010:	1023883a 	mov	r17,r2
   83014:	008c9280 	call	8c928 <__fixdfsi>
   83018:	1009883a 	mov	r4,r2
   8301c:	1029883a 	mov	r20,r2
   83020:	008c9a80 	call	8c9a8 <__floatsidf>
   83024:	8809883a 	mov	r4,r17
   83028:	800b883a 	mov	r5,r16
   8302c:	100d883a 	mov	r6,r2
   83030:	180f883a 	mov	r7,r3
   83034:	008c02c0 	call	8c02c <__subdf3>
   83038:	a5000c04 	addi	r20,r20,48
   8303c:	a80d883a 	mov	r6,r21
   83040:	980f883a 	mov	r7,r19
   83044:	1009883a 	mov	r4,r2
   83048:	180b883a 	mov	r5,r3
   8304c:	95000005 	stb	r20,0(r18)
   83050:	1021883a 	mov	r16,r2
   83054:	1823883a 	mov	r17,r3
   83058:	008b8200 	call	8b820 <__ledf2>
   8305c:	bdc00044 	addi	r23,r23,1
   83060:	800d883a 	mov	r6,r16
   83064:	880f883a 	mov	r7,r17
   83068:	0009883a 	mov	r4,zero
   8306c:	014ffc34 	movhi	r5,16368
   83070:	103fcf0e 	bge	r2,zero,82fb0 <_dtoa_r+0x5dc>
   83074:	d8c01317 	ldw	r3,76(sp)
   83078:	d8c00515 	stw	r3,20(sp)
   8307c:	d9400917 	ldw	r5,36(sp)
   83080:	e009883a 	mov	r4,fp
   83084:	0085b000 	call	85b00 <_Bfree>
   83088:	d9000517 	ldw	r4,20(sp)
   8308c:	d9802317 	ldw	r6,140(sp)
   83090:	d9c02517 	ldw	r7,148(sp)
   83094:	b8000005 	stb	zero,0(r23)
   83098:	20800044 	addi	r2,r4,1
   8309c:	30800015 	stw	r2,0(r6)
   830a0:	3802aa26 	beq	r7,zero,83b4c <_dtoa_r+0x1178>
   830a4:	3dc00015 	stw	r23,0(r7)
   830a8:	d8800717 	ldw	r2,28(sp)
   830ac:	003e7906 	br	82a94 <_dtoa_r+0xc0>
   830b0:	00800434 	movhi	r2,16
   830b4:	10bfffc4 	addi	r2,r2,-1
   830b8:	88a2703a 	and	r17,r17,r2
   830bc:	883e851e 	bne	r17,zero,82ad4 <_dtoa_r+0x100>
   830c0:	00800274 	movhi	r2,9
   830c4:	10be6604 	addi	r2,r2,-1640
   830c8:	003e8406 	br	82adc <_dtoa_r+0x108>
   830cc:	10c00204 	addi	r3,r2,8
   830d0:	003e8706 	br	82af0 <_dtoa_r+0x11c>
   830d4:	01400434 	movhi	r5,16
   830d8:	297fffc4 	addi	r5,r5,-1
   830dc:	994a703a 	and	r5,r19,r5
   830e0:	9009883a 	mov	r4,r18
   830e4:	843f0044 	addi	r16,r16,-1023
   830e8:	294ffc34 	orhi	r5,r5,16368
   830ec:	dd800217 	ldw	r22,8(sp)
   830f0:	d8001115 	stw	zero,68(sp)
   830f4:	003ea506 	br	82b8c <_dtoa_r+0x1b8>
   830f8:	00800274 	movhi	r2,9
   830fc:	10be5d04 	addi	r2,r2,-1676
   83100:	003e6406 	br	82a94 <_dtoa_r+0xc0>
   83104:	e0001115 	stw	zero,68(fp)
   83108:	000b883a 	mov	r5,zero
   8310c:	e009883a 	mov	r4,fp
   83110:	0085a580 	call	85a58 <_Balloc>
   83114:	01bfffc4 	movi	r6,-1
   83118:	01c00044 	movi	r7,1
   8311c:	d8800715 	stw	r2,28(sp)
   83120:	d9800c15 	stw	r6,48(sp)
   83124:	e0801015 	stw	r2,64(fp)
   83128:	d8000315 	stw	zero,12(sp)
   8312c:	d9c00b15 	stw	r7,44(sp)
   83130:	d9800615 	stw	r6,24(sp)
   83134:	d8002215 	stw	zero,136(sp)
   83138:	d8800117 	ldw	r2,4(sp)
   8313c:	10008916 	blt	r2,zero,83364 <_dtoa_r+0x990>
   83140:	d9000517 	ldw	r4,20(sp)
   83144:	00c00384 	movi	r3,14
   83148:	19008616 	blt	r3,r4,83364 <_dtoa_r+0x990>
   8314c:	200490fa 	slli	r2,r4,3
   83150:	00c00274 	movhi	r3,9
   83154:	d9802217 	ldw	r6,136(sp)
   83158:	18fe8504 	addi	r3,r3,-1516
   8315c:	1885883a 	add	r2,r3,r2
   83160:	14000017 	ldw	r16,0(r2)
   83164:	14400117 	ldw	r17,4(r2)
   83168:	30016316 	blt	r6,zero,836f8 <_dtoa_r+0xd24>
   8316c:	800d883a 	mov	r6,r16
   83170:	880f883a 	mov	r7,r17
   83174:	9009883a 	mov	r4,r18
   83178:	980b883a 	mov	r5,r19
   8317c:	008add40 	call	8add4 <__divdf3>
   83180:	180b883a 	mov	r5,r3
   83184:	1009883a 	mov	r4,r2
   83188:	008c9280 	call	8c928 <__fixdfsi>
   8318c:	1009883a 	mov	r4,r2
   83190:	102b883a 	mov	r21,r2
   83194:	008c9a80 	call	8c9a8 <__floatsidf>
   83198:	800d883a 	mov	r6,r16
   8319c:	880f883a 	mov	r7,r17
   831a0:	1009883a 	mov	r4,r2
   831a4:	180b883a 	mov	r5,r3
   831a8:	008b9140 	call	8b914 <__muldf3>
   831ac:	100d883a 	mov	r6,r2
   831b0:	180f883a 	mov	r7,r3
   831b4:	9009883a 	mov	r4,r18
   831b8:	980b883a 	mov	r5,r19
   831bc:	008c02c0 	call	8c02c <__subdf3>
   831c0:	d9c00717 	ldw	r7,28(sp)
   831c4:	1009883a 	mov	r4,r2
   831c8:	a8800c04 	addi	r2,r21,48
   831cc:	38800005 	stb	r2,0(r7)
   831d0:	3dc00044 	addi	r23,r7,1
   831d4:	d9c00617 	ldw	r7,24(sp)
   831d8:	01800044 	movi	r6,1
   831dc:	180b883a 	mov	r5,r3
   831e0:	2005883a 	mov	r2,r4
   831e4:	39803826 	beq	r7,r6,832c8 <_dtoa_r+0x8f4>
   831e8:	000d883a 	mov	r6,zero
   831ec:	01d00934 	movhi	r7,16420
   831f0:	008b9140 	call	8b914 <__muldf3>
   831f4:	000d883a 	mov	r6,zero
   831f8:	000f883a 	mov	r7,zero
   831fc:	1009883a 	mov	r4,r2
   83200:	180b883a 	mov	r5,r3
   83204:	1025883a 	mov	r18,r2
   83208:	1827883a 	mov	r19,r3
   8320c:	008b6bc0 	call	8b6bc <__eqdf2>
   83210:	103f9a26 	beq	r2,zero,8307c <_dtoa_r+0x6a8>
   83214:	d9c00617 	ldw	r7,24(sp)
   83218:	d8c00717 	ldw	r3,28(sp)
   8321c:	b829883a 	mov	r20,r23
   83220:	38bfffc4 	addi	r2,r7,-1
   83224:	18ad883a 	add	r22,r3,r2
   83228:	00000a06 	br	83254 <_dtoa_r+0x880>
   8322c:	008b9140 	call	8b914 <__muldf3>
   83230:	000d883a 	mov	r6,zero
   83234:	000f883a 	mov	r7,zero
   83238:	1009883a 	mov	r4,r2
   8323c:	180b883a 	mov	r5,r3
   83240:	1025883a 	mov	r18,r2
   83244:	1827883a 	mov	r19,r3
   83248:	b829883a 	mov	r20,r23
   8324c:	008b6bc0 	call	8b6bc <__eqdf2>
   83250:	103f8a26 	beq	r2,zero,8307c <_dtoa_r+0x6a8>
   83254:	800d883a 	mov	r6,r16
   83258:	880f883a 	mov	r7,r17
   8325c:	9009883a 	mov	r4,r18
   83260:	980b883a 	mov	r5,r19
   83264:	008add40 	call	8add4 <__divdf3>
   83268:	180b883a 	mov	r5,r3
   8326c:	1009883a 	mov	r4,r2
   83270:	008c9280 	call	8c928 <__fixdfsi>
   83274:	1009883a 	mov	r4,r2
   83278:	102b883a 	mov	r21,r2
   8327c:	008c9a80 	call	8c9a8 <__floatsidf>
   83280:	800d883a 	mov	r6,r16
   83284:	880f883a 	mov	r7,r17
   83288:	1009883a 	mov	r4,r2
   8328c:	180b883a 	mov	r5,r3
   83290:	008b9140 	call	8b914 <__muldf3>
   83294:	100d883a 	mov	r6,r2
   83298:	180f883a 	mov	r7,r3
   8329c:	9009883a 	mov	r4,r18
   832a0:	980b883a 	mov	r5,r19
   832a4:	008c02c0 	call	8c02c <__subdf3>
   832a8:	aa000c04 	addi	r8,r21,48
   832ac:	a2000005 	stb	r8,0(r20)
   832b0:	000d883a 	mov	r6,zero
   832b4:	01d00934 	movhi	r7,16420
   832b8:	1009883a 	mov	r4,r2
   832bc:	180b883a 	mov	r5,r3
   832c0:	a5c00044 	addi	r23,r20,1
   832c4:	b53fd91e 	bne	r22,r20,8322c <_dtoa_r+0x858>
   832c8:	100d883a 	mov	r6,r2
   832cc:	180f883a 	mov	r7,r3
   832d0:	1009883a 	mov	r4,r2
   832d4:	180b883a 	mov	r5,r3
   832d8:	008a5280 	call	8a528 <__adddf3>
   832dc:	100d883a 	mov	r6,r2
   832e0:	180f883a 	mov	r7,r3
   832e4:	8009883a 	mov	r4,r16
   832e8:	880b883a 	mov	r5,r17
   832ec:	1027883a 	mov	r19,r2
   832f0:	1825883a 	mov	r18,r3
   832f4:	008b8200 	call	8b820 <__ledf2>
   832f8:	10000816 	blt	r2,zero,8331c <_dtoa_r+0x948>
   832fc:	980d883a 	mov	r6,r19
   83300:	900f883a 	mov	r7,r18
   83304:	8009883a 	mov	r4,r16
   83308:	880b883a 	mov	r5,r17
   8330c:	008b6bc0 	call	8b6bc <__eqdf2>
   83310:	103f5a1e 	bne	r2,zero,8307c <_dtoa_r+0x6a8>
   83314:	ad40004c 	andi	r21,r21,1
   83318:	a83f5826 	beq	r21,zero,8307c <_dtoa_r+0x6a8>
   8331c:	bd3fffc3 	ldbu	r20,-1(r23)
   83320:	b8bfffc4 	addi	r2,r23,-1
   83324:	1007883a 	mov	r3,r2
   83328:	01400e44 	movi	r5,57
   8332c:	d9800717 	ldw	r6,28(sp)
   83330:	00000506 	br	83348 <_dtoa_r+0x974>
   83334:	18ffffc4 	addi	r3,r3,-1
   83338:	11824726 	beq	r2,r6,83c58 <_dtoa_r+0x1284>
   8333c:	1d000003 	ldbu	r20,0(r3)
   83340:	102f883a 	mov	r23,r2
   83344:	10bfffc4 	addi	r2,r2,-1
   83348:	a1003fcc 	andi	r4,r20,255
   8334c:	2100201c 	xori	r4,r4,128
   83350:	213fe004 	addi	r4,r4,-128
   83354:	217ff726 	beq	r4,r5,83334 <_dtoa_r+0x960>
   83358:	a2000044 	addi	r8,r20,1
   8335c:	12000005 	stb	r8,0(r2)
   83360:	003f4606 	br	8307c <_dtoa_r+0x6a8>
   83364:	d9000b17 	ldw	r4,44(sp)
   83368:	2000c826 	beq	r4,zero,8368c <_dtoa_r+0xcb8>
   8336c:	d9800317 	ldw	r6,12(sp)
   83370:	00c00044 	movi	r3,1
   83374:	1980f90e 	bge	r3,r6,8375c <_dtoa_r+0xd88>
   83378:	d8800617 	ldw	r2,24(sp)
   8337c:	d8c00a17 	ldw	r3,40(sp)
   83380:	157fffc4 	addi	r21,r2,-1
   83384:	1d41f316 	blt	r3,r21,83b54 <_dtoa_r+0x1180>
   83388:	1d6bc83a 	sub	r21,r3,r21
   8338c:	d9c00617 	ldw	r7,24(sp)
   83390:	3802aa16 	blt	r7,zero,83e3c <_dtoa_r+0x1468>
   83394:	dd000817 	ldw	r20,32(sp)
   83398:	d8800617 	ldw	r2,24(sp)
   8339c:	d8c00817 	ldw	r3,32(sp)
   833a0:	01400044 	movi	r5,1
   833a4:	e009883a 	mov	r4,fp
   833a8:	1887883a 	add	r3,r3,r2
   833ac:	d8c00815 	stw	r3,32(sp)
   833b0:	b0ad883a 	add	r22,r22,r2
   833b4:	0085e640 	call	85e64 <__i2b>
   833b8:	1023883a 	mov	r17,r2
   833bc:	a0000826 	beq	r20,zero,833e0 <_dtoa_r+0xa0c>
   833c0:	0580070e 	bge	zero,r22,833e0 <_dtoa_r+0xa0c>
   833c4:	a005883a 	mov	r2,r20
   833c8:	b500b916 	blt	r22,r20,836b0 <_dtoa_r+0xcdc>
   833cc:	d9000817 	ldw	r4,32(sp)
   833d0:	a0a9c83a 	sub	r20,r20,r2
   833d4:	b0adc83a 	sub	r22,r22,r2
   833d8:	2089c83a 	sub	r4,r4,r2
   833dc:	d9000815 	stw	r4,32(sp)
   833e0:	d9800a17 	ldw	r6,40(sp)
   833e4:	0181810e 	bge	zero,r6,839ec <_dtoa_r+0x1018>
   833e8:	d9c00b17 	ldw	r7,44(sp)
   833ec:	3800b326 	beq	r7,zero,836bc <_dtoa_r+0xce8>
   833f0:	a800b226 	beq	r21,zero,836bc <_dtoa_r+0xce8>
   833f4:	880b883a 	mov	r5,r17
   833f8:	a80d883a 	mov	r6,r21
   833fc:	e009883a 	mov	r4,fp
   83400:	00860980 	call	86098 <__pow5mult>
   83404:	d9800917 	ldw	r6,36(sp)
   83408:	100b883a 	mov	r5,r2
   8340c:	e009883a 	mov	r4,fp
   83410:	1023883a 	mov	r17,r2
   83414:	0085ea00 	call	85ea0 <__multiply>
   83418:	1021883a 	mov	r16,r2
   8341c:	d8800a17 	ldw	r2,40(sp)
   83420:	d9400917 	ldw	r5,36(sp)
   83424:	e009883a 	mov	r4,fp
   83428:	1545c83a 	sub	r2,r2,r21
   8342c:	d8800a15 	stw	r2,40(sp)
   83430:	0085b000 	call	85b00 <_Bfree>
   83434:	d8c00a17 	ldw	r3,40(sp)
   83438:	18009f1e 	bne	r3,zero,836b8 <_dtoa_r+0xce4>
   8343c:	05c00044 	movi	r23,1
   83440:	e009883a 	mov	r4,fp
   83444:	b80b883a 	mov	r5,r23
   83448:	0085e640 	call	85e64 <__i2b>
   8344c:	d9000d17 	ldw	r4,52(sp)
   83450:	102b883a 	mov	r21,r2
   83454:	2000ce26 	beq	r4,zero,83790 <_dtoa_r+0xdbc>
   83458:	200d883a 	mov	r6,r4
   8345c:	100b883a 	mov	r5,r2
   83460:	e009883a 	mov	r4,fp
   83464:	00860980 	call	86098 <__pow5mult>
   83468:	d9800317 	ldw	r6,12(sp)
   8346c:	102b883a 	mov	r21,r2
   83470:	b981810e 	bge	r23,r6,83a78 <_dtoa_r+0x10a4>
   83474:	0027883a 	mov	r19,zero
   83478:	a8800417 	ldw	r2,16(r21)
   8347c:	05c00804 	movi	r23,32
   83480:	10800104 	addi	r2,r2,4
   83484:	1085883a 	add	r2,r2,r2
   83488:	1085883a 	add	r2,r2,r2
   8348c:	a885883a 	add	r2,r21,r2
   83490:	11000017 	ldw	r4,0(r2)
   83494:	0085d4c0 	call	85d4c <__hi0bits>
   83498:	b885c83a 	sub	r2,r23,r2
   8349c:	1585883a 	add	r2,r2,r22
   834a0:	108007cc 	andi	r2,r2,31
   834a4:	1000b326 	beq	r2,zero,83774 <_dtoa_r+0xda0>
   834a8:	00c00804 	movi	r3,32
   834ac:	1887c83a 	sub	r3,r3,r2
   834b0:	01000104 	movi	r4,4
   834b4:	20c2cd0e 	bge	r4,r3,83fec <_dtoa_r+0x1618>
   834b8:	00c00704 	movi	r3,28
   834bc:	1885c83a 	sub	r2,r3,r2
   834c0:	d8c00817 	ldw	r3,32(sp)
   834c4:	a0a9883a 	add	r20,r20,r2
   834c8:	b0ad883a 	add	r22,r22,r2
   834cc:	1887883a 	add	r3,r3,r2
   834d0:	d8c00815 	stw	r3,32(sp)
   834d4:	d9800817 	ldw	r6,32(sp)
   834d8:	0180040e 	bge	zero,r6,834ec <_dtoa_r+0xb18>
   834dc:	800b883a 	mov	r5,r16
   834e0:	e009883a 	mov	r4,fp
   834e4:	00861d80 	call	861d8 <__lshift>
   834e8:	1021883a 	mov	r16,r2
   834ec:	0580050e 	bge	zero,r22,83504 <_dtoa_r+0xb30>
   834f0:	a80b883a 	mov	r5,r21
   834f4:	b00d883a 	mov	r6,r22
   834f8:	e009883a 	mov	r4,fp
   834fc:	00861d80 	call	861d8 <__lshift>
   83500:	102b883a 	mov	r21,r2
   83504:	d9c00e17 	ldw	r7,56(sp)
   83508:	3801211e 	bne	r7,zero,83990 <_dtoa_r+0xfbc>
   8350c:	d9800617 	ldw	r6,24(sp)
   83510:	0181380e 	bge	zero,r6,839f4 <_dtoa_r+0x1020>
   83514:	d8c00b17 	ldw	r3,44(sp)
   83518:	1800ab1e 	bne	r3,zero,837c8 <_dtoa_r+0xdf4>
   8351c:	dc800717 	ldw	r18,28(sp)
   83520:	dcc00617 	ldw	r19,24(sp)
   83524:	9029883a 	mov	r20,r18
   83528:	00000206 	br	83534 <_dtoa_r+0xb60>
   8352c:	0085b280 	call	85b28 <__multadd>
   83530:	1021883a 	mov	r16,r2
   83534:	a80b883a 	mov	r5,r21
   83538:	8009883a 	mov	r4,r16
   8353c:	00827d40 	call	827d4 <quorem>
   83540:	10800c04 	addi	r2,r2,48
   83544:	90800005 	stb	r2,0(r18)
   83548:	94800044 	addi	r18,r18,1
   8354c:	9507c83a 	sub	r3,r18,r20
   83550:	000f883a 	mov	r7,zero
   83554:	01800284 	movi	r6,10
   83558:	800b883a 	mov	r5,r16
   8355c:	e009883a 	mov	r4,fp
   83560:	1cfff216 	blt	r3,r19,8352c <_dtoa_r+0xb58>
   83564:	1011883a 	mov	r8,r2
   83568:	d8800617 	ldw	r2,24(sp)
   8356c:	0082370e 	bge	zero,r2,83e4c <_dtoa_r+0x1478>
   83570:	d9000717 	ldw	r4,28(sp)
   83574:	0025883a 	mov	r18,zero
   83578:	20af883a 	add	r23,r4,r2
   8357c:	01800044 	movi	r6,1
   83580:	800b883a 	mov	r5,r16
   83584:	e009883a 	mov	r4,fp
   83588:	da001715 	stw	r8,92(sp)
   8358c:	00861d80 	call	861d8 <__lshift>
   83590:	a80b883a 	mov	r5,r21
   83594:	1009883a 	mov	r4,r2
   83598:	d8800915 	stw	r2,36(sp)
   8359c:	00863200 	call	86320 <__mcmp>
   835a0:	da001717 	ldw	r8,92(sp)
   835a4:	0081800e 	bge	zero,r2,83ba8 <_dtoa_r+0x11d4>
   835a8:	b93fffc3 	ldbu	r4,-1(r23)
   835ac:	b8bfffc4 	addi	r2,r23,-1
   835b0:	1007883a 	mov	r3,r2
   835b4:	01800e44 	movi	r6,57
   835b8:	d9c00717 	ldw	r7,28(sp)
   835bc:	00000506 	br	835d4 <_dtoa_r+0xc00>
   835c0:	18ffffc4 	addi	r3,r3,-1
   835c4:	11c12326 	beq	r2,r7,83a54 <_dtoa_r+0x1080>
   835c8:	19000003 	ldbu	r4,0(r3)
   835cc:	102f883a 	mov	r23,r2
   835d0:	10bfffc4 	addi	r2,r2,-1
   835d4:	21403fcc 	andi	r5,r4,255
   835d8:	2940201c 	xori	r5,r5,128
   835dc:	297fe004 	addi	r5,r5,-128
   835e0:	29bff726 	beq	r5,r6,835c0 <_dtoa_r+0xbec>
   835e4:	21000044 	addi	r4,r4,1
   835e8:	11000005 	stb	r4,0(r2)
   835ec:	a80b883a 	mov	r5,r21
   835f0:	e009883a 	mov	r4,fp
   835f4:	0085b000 	call	85b00 <_Bfree>
   835f8:	883ea026 	beq	r17,zero,8307c <_dtoa_r+0x6a8>
   835fc:	90000426 	beq	r18,zero,83610 <_dtoa_r+0xc3c>
   83600:	94400326 	beq	r18,r17,83610 <_dtoa_r+0xc3c>
   83604:	900b883a 	mov	r5,r18
   83608:	e009883a 	mov	r4,fp
   8360c:	0085b000 	call	85b00 <_Bfree>
   83610:	880b883a 	mov	r5,r17
   83614:	e009883a 	mov	r4,fp
   83618:	0085b000 	call	85b00 <_Bfree>
   8361c:	003e9706 	br	8307c <_dtoa_r+0x6a8>
   83620:	01800044 	movi	r6,1
   83624:	d9800e15 	stw	r6,56(sp)
   83628:	003d9606 	br	82c84 <_dtoa_r+0x2b0>
   8362c:	d8800817 	ldw	r2,32(sp)
   83630:	d8c00517 	ldw	r3,20(sp)
   83634:	d8000d15 	stw	zero,52(sp)
   83638:	10c5c83a 	sub	r2,r2,r3
   8363c:	00c9c83a 	sub	r4,zero,r3
   83640:	d8800815 	stw	r2,32(sp)
   83644:	d9000a15 	stw	r4,40(sp)
   83648:	003d9706 	br	82ca8 <_dtoa_r+0x2d4>
   8364c:	05adc83a 	sub	r22,zero,r22
   83650:	dd800815 	stw	r22,32(sp)
   83654:	002d883a 	mov	r22,zero
   83658:	003d8e06 	br	82c94 <_dtoa_r+0x2c0>
   8365c:	d9000517 	ldw	r4,20(sp)
   83660:	008c9a80 	call	8c9a8 <__floatsidf>
   83664:	100d883a 	mov	r6,r2
   83668:	180f883a 	mov	r7,r3
   8366c:	a009883a 	mov	r4,r20
   83670:	880b883a 	mov	r5,r17
   83674:	008b6bc0 	call	8b6bc <__eqdf2>
   83678:	103d7126 	beq	r2,zero,82c40 <_dtoa_r+0x26c>
   8367c:	d9c00517 	ldw	r7,20(sp)
   83680:	39ffffc4 	addi	r7,r7,-1
   83684:	d9c00515 	stw	r7,20(sp)
   83688:	003d6d06 	br	82c40 <_dtoa_r+0x26c>
   8368c:	dd400a17 	ldw	r21,40(sp)
   83690:	dd000817 	ldw	r20,32(sp)
   83694:	0023883a 	mov	r17,zero
   83698:	003f4806 	br	833bc <_dtoa_r+0x9e8>
   8369c:	10e3c83a 	sub	r17,r2,r3
   836a0:	9448983a 	sll	r4,r18,r17
   836a4:	003d3206 	br	82b70 <_dtoa_r+0x19c>
   836a8:	d8000e15 	stw	zero,56(sp)
   836ac:	003d7506 	br	82c84 <_dtoa_r+0x2b0>
   836b0:	b005883a 	mov	r2,r22
   836b4:	003f4506 	br	833cc <_dtoa_r+0x9f8>
   836b8:	dc000915 	stw	r16,36(sp)
   836bc:	d9800a17 	ldw	r6,40(sp)
   836c0:	d9400917 	ldw	r5,36(sp)
   836c4:	e009883a 	mov	r4,fp
   836c8:	00860980 	call	86098 <__pow5mult>
   836cc:	1021883a 	mov	r16,r2
   836d0:	003f5a06 	br	8343c <_dtoa_r+0xa68>
   836d4:	01c00044 	movi	r7,1
   836d8:	d9c00b15 	stw	r7,44(sp)
   836dc:	d8802217 	ldw	r2,136(sp)
   836e0:	0081280e 	bge	zero,r2,83b84 <_dtoa_r+0x11b0>
   836e4:	100d883a 	mov	r6,r2
   836e8:	1021883a 	mov	r16,r2
   836ec:	d8800c15 	stw	r2,48(sp)
   836f0:	d8800615 	stw	r2,24(sp)
   836f4:	003d8806 	br	82d18 <_dtoa_r+0x344>
   836f8:	d8800617 	ldw	r2,24(sp)
   836fc:	00be9b16 	blt	zero,r2,8316c <_dtoa_r+0x798>
   83700:	10010f1e 	bne	r2,zero,83b40 <_dtoa_r+0x116c>
   83704:	880b883a 	mov	r5,r17
   83708:	000d883a 	mov	r6,zero
   8370c:	01d00534 	movhi	r7,16404
   83710:	8009883a 	mov	r4,r16
   83714:	008b9140 	call	8b914 <__muldf3>
   83718:	900d883a 	mov	r6,r18
   8371c:	980f883a 	mov	r7,r19
   83720:	1009883a 	mov	r4,r2
   83724:	180b883a 	mov	r5,r3
   83728:	008b7440 	call	8b744 <__gedf2>
   8372c:	002b883a 	mov	r21,zero
   83730:	0023883a 	mov	r17,zero
   83734:	1000bf16 	blt	r2,zero,83a34 <_dtoa_r+0x1060>
   83738:	d9802217 	ldw	r6,136(sp)
   8373c:	ddc00717 	ldw	r23,28(sp)
   83740:	018c303a 	nor	r6,zero,r6
   83744:	d9800515 	stw	r6,20(sp)
   83748:	a80b883a 	mov	r5,r21
   8374c:	e009883a 	mov	r4,fp
   83750:	0085b000 	call	85b00 <_Bfree>
   83754:	883e4926 	beq	r17,zero,8307c <_dtoa_r+0x6a8>
   83758:	003fad06 	br	83610 <_dtoa_r+0xc3c>
   8375c:	d9c01117 	ldw	r7,68(sp)
   83760:	3801bc26 	beq	r7,zero,83e54 <_dtoa_r+0x1480>
   83764:	10810cc4 	addi	r2,r2,1075
   83768:	dd400a17 	ldw	r21,40(sp)
   8376c:	dd000817 	ldw	r20,32(sp)
   83770:	003f0a06 	br	8339c <_dtoa_r+0x9c8>
   83774:	00800704 	movi	r2,28
   83778:	d9000817 	ldw	r4,32(sp)
   8377c:	a0a9883a 	add	r20,r20,r2
   83780:	b0ad883a 	add	r22,r22,r2
   83784:	2089883a 	add	r4,r4,r2
   83788:	d9000815 	stw	r4,32(sp)
   8378c:	003f5106 	br	834d4 <_dtoa_r+0xb00>
   83790:	d8c00317 	ldw	r3,12(sp)
   83794:	b8c1fc0e 	bge	r23,r3,83f88 <_dtoa_r+0x15b4>
   83798:	0027883a 	mov	r19,zero
   8379c:	b805883a 	mov	r2,r23
   837a0:	003f3e06 	br	8349c <_dtoa_r+0xac8>
   837a4:	880b883a 	mov	r5,r17
   837a8:	e009883a 	mov	r4,fp
   837ac:	000f883a 	mov	r7,zero
   837b0:	01800284 	movi	r6,10
   837b4:	0085b280 	call	85b28 <__multadd>
   837b8:	d9000c17 	ldw	r4,48(sp)
   837bc:	1023883a 	mov	r17,r2
   837c0:	0102040e 	bge	zero,r4,83fd4 <_dtoa_r+0x1600>
   837c4:	d9000615 	stw	r4,24(sp)
   837c8:	0500050e 	bge	zero,r20,837e0 <_dtoa_r+0xe0c>
   837cc:	880b883a 	mov	r5,r17
   837d0:	a00d883a 	mov	r6,r20
   837d4:	e009883a 	mov	r4,fp
   837d8:	00861d80 	call	861d8 <__lshift>
   837dc:	1023883a 	mov	r17,r2
   837e0:	9801241e 	bne	r19,zero,83c74 <_dtoa_r+0x12a0>
   837e4:	8829883a 	mov	r20,r17
   837e8:	d9000617 	ldw	r4,24(sp)
   837ec:	dcc00717 	ldw	r19,28(sp)
   837f0:	9480004c 	andi	r18,r18,1
   837f4:	20bfffc4 	addi	r2,r4,-1
   837f8:	9885883a 	add	r2,r19,r2
   837fc:	d8800415 	stw	r2,16(sp)
   83800:	dc800615 	stw	r18,24(sp)
   83804:	a80b883a 	mov	r5,r21
   83808:	8009883a 	mov	r4,r16
   8380c:	00827d40 	call	827d4 <quorem>
   83810:	880b883a 	mov	r5,r17
   83814:	8009883a 	mov	r4,r16
   83818:	102f883a 	mov	r23,r2
   8381c:	00863200 	call	86320 <__mcmp>
   83820:	a80b883a 	mov	r5,r21
   83824:	a00d883a 	mov	r6,r20
   83828:	e009883a 	mov	r4,fp
   8382c:	102d883a 	mov	r22,r2
   83830:	00863800 	call	86380 <__mdiff>
   83834:	1007883a 	mov	r3,r2
   83838:	10800317 	ldw	r2,12(r2)
   8383c:	bc800c04 	addi	r18,r23,48
   83840:	180b883a 	mov	r5,r3
   83844:	10004e1e 	bne	r2,zero,83980 <_dtoa_r+0xfac>
   83848:	8009883a 	mov	r4,r16
   8384c:	d8c01615 	stw	r3,88(sp)
   83850:	00863200 	call	86320 <__mcmp>
   83854:	d8c01617 	ldw	r3,88(sp)
   83858:	e009883a 	mov	r4,fp
   8385c:	d8801615 	stw	r2,88(sp)
   83860:	180b883a 	mov	r5,r3
   83864:	0085b000 	call	85b00 <_Bfree>
   83868:	d8801617 	ldw	r2,88(sp)
   8386c:	1000041e 	bne	r2,zero,83880 <_dtoa_r+0xeac>
   83870:	d9800317 	ldw	r6,12(sp)
   83874:	3000021e 	bne	r6,zero,83880 <_dtoa_r+0xeac>
   83878:	d8c00617 	ldw	r3,24(sp)
   8387c:	18003726 	beq	r3,zero,8395c <_dtoa_r+0xf88>
   83880:	b0002016 	blt	r22,zero,83904 <_dtoa_r+0xf30>
   83884:	b000041e 	bne	r22,zero,83898 <_dtoa_r+0xec4>
   83888:	d9000317 	ldw	r4,12(sp)
   8388c:	2000021e 	bne	r4,zero,83898 <_dtoa_r+0xec4>
   83890:	d8c00617 	ldw	r3,24(sp)
   83894:	18001b26 	beq	r3,zero,83904 <_dtoa_r+0xf30>
   83898:	00810716 	blt	zero,r2,83cb8 <_dtoa_r+0x12e4>
   8389c:	d8c00417 	ldw	r3,16(sp)
   838a0:	9d800044 	addi	r22,r19,1
   838a4:	9c800005 	stb	r18,0(r19)
   838a8:	b02f883a 	mov	r23,r22
   838ac:	98c10626 	beq	r19,r3,83cc8 <_dtoa_r+0x12f4>
   838b0:	800b883a 	mov	r5,r16
   838b4:	000f883a 	mov	r7,zero
   838b8:	01800284 	movi	r6,10
   838bc:	e009883a 	mov	r4,fp
   838c0:	0085b280 	call	85b28 <__multadd>
   838c4:	1021883a 	mov	r16,r2
   838c8:	000f883a 	mov	r7,zero
   838cc:	01800284 	movi	r6,10
   838d0:	880b883a 	mov	r5,r17
   838d4:	e009883a 	mov	r4,fp
   838d8:	8d002526 	beq	r17,r20,83970 <_dtoa_r+0xf9c>
   838dc:	0085b280 	call	85b28 <__multadd>
   838e0:	a00b883a 	mov	r5,r20
   838e4:	000f883a 	mov	r7,zero
   838e8:	01800284 	movi	r6,10
   838ec:	e009883a 	mov	r4,fp
   838f0:	1023883a 	mov	r17,r2
   838f4:	0085b280 	call	85b28 <__multadd>
   838f8:	1029883a 	mov	r20,r2
   838fc:	b027883a 	mov	r19,r22
   83900:	003fc006 	br	83804 <_dtoa_r+0xe30>
   83904:	9011883a 	mov	r8,r18
   83908:	00800e0e 	bge	zero,r2,83944 <_dtoa_r+0xf70>
   8390c:	800b883a 	mov	r5,r16
   83910:	01800044 	movi	r6,1
   83914:	e009883a 	mov	r4,fp
   83918:	da001715 	stw	r8,92(sp)
   8391c:	00861d80 	call	861d8 <__lshift>
   83920:	a80b883a 	mov	r5,r21
   83924:	1009883a 	mov	r4,r2
   83928:	1021883a 	mov	r16,r2
   8392c:	00863200 	call	86320 <__mcmp>
   83930:	da001717 	ldw	r8,92(sp)
   83934:	0081960e 	bge	zero,r2,83f90 <_dtoa_r+0x15bc>
   83938:	00800e44 	movi	r2,57
   8393c:	40817026 	beq	r8,r2,83f00 <_dtoa_r+0x152c>
   83940:	ba000c44 	addi	r8,r23,49
   83944:	8825883a 	mov	r18,r17
   83948:	9dc00044 	addi	r23,r19,1
   8394c:	9a000005 	stb	r8,0(r19)
   83950:	a023883a 	mov	r17,r20
   83954:	dc000915 	stw	r16,36(sp)
   83958:	003f2406 	br	835ec <_dtoa_r+0xc18>
   8395c:	00800e44 	movi	r2,57
   83960:	9011883a 	mov	r8,r18
   83964:	90816626 	beq	r18,r2,83f00 <_dtoa_r+0x152c>
   83968:	05bff516 	blt	zero,r22,83940 <_dtoa_r+0xf6c>
   8396c:	003ff506 	br	83944 <_dtoa_r+0xf70>
   83970:	0085b280 	call	85b28 <__multadd>
   83974:	1023883a 	mov	r17,r2
   83978:	1029883a 	mov	r20,r2
   8397c:	003fdf06 	br	838fc <_dtoa_r+0xf28>
   83980:	e009883a 	mov	r4,fp
   83984:	0085b000 	call	85b00 <_Bfree>
   83988:	00800044 	movi	r2,1
   8398c:	003fbc06 	br	83880 <_dtoa_r+0xeac>
   83990:	a80b883a 	mov	r5,r21
   83994:	8009883a 	mov	r4,r16
   83998:	00863200 	call	86320 <__mcmp>
   8399c:	103edb0e 	bge	r2,zero,8350c <_dtoa_r+0xb38>
   839a0:	800b883a 	mov	r5,r16
   839a4:	000f883a 	mov	r7,zero
   839a8:	01800284 	movi	r6,10
   839ac:	e009883a 	mov	r4,fp
   839b0:	0085b280 	call	85b28 <__multadd>
   839b4:	1021883a 	mov	r16,r2
   839b8:	d8800517 	ldw	r2,20(sp)
   839bc:	d8c00b17 	ldw	r3,44(sp)
   839c0:	10bfffc4 	addi	r2,r2,-1
   839c4:	d8800515 	stw	r2,20(sp)
   839c8:	183f761e 	bne	r3,zero,837a4 <_dtoa_r+0xdd0>
   839cc:	d9000c17 	ldw	r4,48(sp)
   839d0:	0101730e 	bge	zero,r4,83fa0 <_dtoa_r+0x15cc>
   839d4:	d9000615 	stw	r4,24(sp)
   839d8:	003ed006 	br	8351c <_dtoa_r+0xb48>
   839dc:	00800084 	movi	r2,2
   839e0:	3081861e 	bne	r6,r2,83ffc <_dtoa_r+0x1628>
   839e4:	d8000b15 	stw	zero,44(sp)
   839e8:	003f3c06 	br	836dc <_dtoa_r+0xd08>
   839ec:	dc000917 	ldw	r16,36(sp)
   839f0:	003e9206 	br	8343c <_dtoa_r+0xa68>
   839f4:	d9c00317 	ldw	r7,12(sp)
   839f8:	00800084 	movi	r2,2
   839fc:	11fec50e 	bge	r2,r7,83514 <_dtoa_r+0xb40>
   83a00:	d9000617 	ldw	r4,24(sp)
   83a04:	20013c1e 	bne	r4,zero,83ef8 <_dtoa_r+0x1524>
   83a08:	a80b883a 	mov	r5,r21
   83a0c:	000f883a 	mov	r7,zero
   83a10:	01800144 	movi	r6,5
   83a14:	e009883a 	mov	r4,fp
   83a18:	0085b280 	call	85b28 <__multadd>
   83a1c:	100b883a 	mov	r5,r2
   83a20:	8009883a 	mov	r4,r16
   83a24:	102b883a 	mov	r21,r2
   83a28:	00863200 	call	86320 <__mcmp>
   83a2c:	dc000915 	stw	r16,36(sp)
   83a30:	00bf410e 	bge	zero,r2,83738 <_dtoa_r+0xd64>
   83a34:	d9c00717 	ldw	r7,28(sp)
   83a38:	00800c44 	movi	r2,49
   83a3c:	38800005 	stb	r2,0(r7)
   83a40:	d8800517 	ldw	r2,20(sp)
   83a44:	3dc00044 	addi	r23,r7,1
   83a48:	10800044 	addi	r2,r2,1
   83a4c:	d8800515 	stw	r2,20(sp)
   83a50:	003f3d06 	br	83748 <_dtoa_r+0xd74>
   83a54:	d9800517 	ldw	r6,20(sp)
   83a58:	d9c00717 	ldw	r7,28(sp)
   83a5c:	00800c44 	movi	r2,49
   83a60:	31800044 	addi	r6,r6,1
   83a64:	d9800515 	stw	r6,20(sp)
   83a68:	38800005 	stb	r2,0(r7)
   83a6c:	003edf06 	br	835ec <_dtoa_r+0xc18>
   83a70:	d8000b15 	stw	zero,44(sp)
   83a74:	003c9f06 	br	82cf4 <_dtoa_r+0x320>
   83a78:	903e7e1e 	bne	r18,zero,83474 <_dtoa_r+0xaa0>
   83a7c:	00800434 	movhi	r2,16
   83a80:	10bfffc4 	addi	r2,r2,-1
   83a84:	9884703a 	and	r2,r19,r2
   83a88:	1000ea1e 	bne	r2,zero,83e34 <_dtoa_r+0x1460>
   83a8c:	9cdffc2c 	andhi	r19,r19,32752
   83a90:	9800e826 	beq	r19,zero,83e34 <_dtoa_r+0x1460>
   83a94:	d9c00817 	ldw	r7,32(sp)
   83a98:	b5800044 	addi	r22,r22,1
   83a9c:	04c00044 	movi	r19,1
   83aa0:	39c00044 	addi	r7,r7,1
   83aa4:	d9c00815 	stw	r7,32(sp)
   83aa8:	d8800d17 	ldw	r2,52(sp)
   83aac:	103e721e 	bne	r2,zero,83478 <_dtoa_r+0xaa4>
   83ab0:	00800044 	movi	r2,1
   83ab4:	003e7906 	br	8349c <_dtoa_r+0xac8>
   83ab8:	8009883a 	mov	r4,r16
   83abc:	008c9a80 	call	8c9a8 <__floatsidf>
   83ac0:	d9800f17 	ldw	r6,60(sp)
   83ac4:	d9c01017 	ldw	r7,64(sp)
   83ac8:	1009883a 	mov	r4,r2
   83acc:	180b883a 	mov	r5,r3
   83ad0:	008b9140 	call	8b914 <__muldf3>
   83ad4:	000d883a 	mov	r6,zero
   83ad8:	01d00734 	movhi	r7,16412
   83adc:	1009883a 	mov	r4,r2
   83ae0:	180b883a 	mov	r5,r3
   83ae4:	008a5280 	call	8a528 <__adddf3>
   83ae8:	047f3034 	movhi	r17,64704
   83aec:	1021883a 	mov	r16,r2
   83af0:	1c63883a 	add	r17,r3,r17
   83af4:	d9000f17 	ldw	r4,60(sp)
   83af8:	d9401017 	ldw	r5,64(sp)
   83afc:	000d883a 	mov	r6,zero
   83b00:	01d00534 	movhi	r7,16404
   83b04:	008c02c0 	call	8c02c <__subdf3>
   83b08:	800d883a 	mov	r6,r16
   83b0c:	880f883a 	mov	r7,r17
   83b10:	1009883a 	mov	r4,r2
   83b14:	180b883a 	mov	r5,r3
   83b18:	102b883a 	mov	r21,r2
   83b1c:	1829883a 	mov	r20,r3
   83b20:	008b7440 	call	8b744 <__gedf2>
   83b24:	00806c16 	blt	zero,r2,83cd8 <_dtoa_r+0x1304>
   83b28:	89e0003c 	xorhi	r7,r17,32768
   83b2c:	800d883a 	mov	r6,r16
   83b30:	a809883a 	mov	r4,r21
   83b34:	a00b883a 	mov	r5,r20
   83b38:	008b8200 	call	8b820 <__ledf2>
   83b3c:	103d7e0e 	bge	r2,zero,83138 <_dtoa_r+0x764>
   83b40:	002b883a 	mov	r21,zero
   83b44:	0023883a 	mov	r17,zero
   83b48:	003efb06 	br	83738 <_dtoa_r+0xd64>
   83b4c:	d8800717 	ldw	r2,28(sp)
   83b50:	003bd006 	br	82a94 <_dtoa_r+0xc0>
   83b54:	d9000a17 	ldw	r4,40(sp)
   83b58:	d9800d17 	ldw	r6,52(sp)
   83b5c:	dd400a15 	stw	r21,40(sp)
   83b60:	a905c83a 	sub	r2,r21,r4
   83b64:	308d883a 	add	r6,r6,r2
   83b68:	d9800d15 	stw	r6,52(sp)
   83b6c:	002b883a 	mov	r21,zero
   83b70:	003e0606 	br	8338c <_dtoa_r+0x9b8>
   83b74:	9023883a 	mov	r17,r18
   83b78:	9829883a 	mov	r20,r19
   83b7c:	04000084 	movi	r16,2
   83b80:	003c9206 	br	82dcc <_dtoa_r+0x3f8>
   83b84:	04000044 	movi	r16,1
   83b88:	dc000c15 	stw	r16,48(sp)
   83b8c:	dc000615 	stw	r16,24(sp)
   83b90:	dc002215 	stw	r16,136(sp)
   83b94:	e0001115 	stw	zero,68(fp)
   83b98:	000b883a 	mov	r5,zero
   83b9c:	003c6906 	br	82d44 <_dtoa_r+0x370>
   83ba0:	3021883a 	mov	r16,r6
   83ba4:	003ffb06 	br	83b94 <_dtoa_r+0x11c0>
   83ba8:	1000021e 	bne	r2,zero,83bb4 <_dtoa_r+0x11e0>
   83bac:	4200004c 	andi	r8,r8,1
   83bb0:	403e7d1e 	bne	r8,zero,835a8 <_dtoa_r+0xbd4>
   83bb4:	01000c04 	movi	r4,48
   83bb8:	00000106 	br	83bc0 <_dtoa_r+0x11ec>
   83bbc:	102f883a 	mov	r23,r2
   83bc0:	b8bfffc4 	addi	r2,r23,-1
   83bc4:	10c00007 	ldb	r3,0(r2)
   83bc8:	193ffc26 	beq	r3,r4,83bbc <_dtoa_r+0x11e8>
   83bcc:	003e8706 	br	835ec <_dtoa_r+0xc18>
   83bd0:	d8800517 	ldw	r2,20(sp)
   83bd4:	00a3c83a 	sub	r17,zero,r2
   83bd8:	8800a426 	beq	r17,zero,83e6c <_dtoa_r+0x1498>
   83bdc:	888003cc 	andi	r2,r17,15
   83be0:	100490fa 	slli	r2,r2,3
   83be4:	00c00274 	movhi	r3,9
   83be8:	18fe8504 	addi	r3,r3,-1516
   83bec:	1885883a 	add	r2,r3,r2
   83bf0:	11800017 	ldw	r6,0(r2)
   83bf4:	11c00117 	ldw	r7,4(r2)
   83bf8:	9009883a 	mov	r4,r18
   83bfc:	980b883a 	mov	r5,r19
   83c00:	8823d13a 	srai	r17,r17,4
   83c04:	008b9140 	call	8b914 <__muldf3>
   83c08:	d8800f15 	stw	r2,60(sp)
   83c0c:	d8c01015 	stw	r3,64(sp)
   83c10:	8800e826 	beq	r17,zero,83fb4 <_dtoa_r+0x15e0>
   83c14:	05000274 	movhi	r20,9
   83c18:	a53e7b04 	addi	r20,r20,-1556
   83c1c:	04000084 	movi	r16,2
   83c20:	8980004c 	andi	r6,r17,1
   83c24:	1009883a 	mov	r4,r2
   83c28:	8823d07a 	srai	r17,r17,1
   83c2c:	180b883a 	mov	r5,r3
   83c30:	30000426 	beq	r6,zero,83c44 <_dtoa_r+0x1270>
   83c34:	a1800017 	ldw	r6,0(r20)
   83c38:	a1c00117 	ldw	r7,4(r20)
   83c3c:	84000044 	addi	r16,r16,1
   83c40:	008b9140 	call	8b914 <__muldf3>
   83c44:	a5000204 	addi	r20,r20,8
   83c48:	883ff51e 	bne	r17,zero,83c20 <_dtoa_r+0x124c>
   83c4c:	d8800f15 	stw	r2,60(sp)
   83c50:	d8c01015 	stw	r3,64(sp)
   83c54:	003c7606 	br	82e30 <_dtoa_r+0x45c>
   83c58:	00c00c04 	movi	r3,48
   83c5c:	10c00005 	stb	r3,0(r2)
   83c60:	d8c00517 	ldw	r3,20(sp)
   83c64:	bd3fffc3 	ldbu	r20,-1(r23)
   83c68:	18c00044 	addi	r3,r3,1
   83c6c:	d8c00515 	stw	r3,20(sp)
   83c70:	003db906 	br	83358 <_dtoa_r+0x984>
   83c74:	89400117 	ldw	r5,4(r17)
   83c78:	e009883a 	mov	r4,fp
   83c7c:	0085a580 	call	85a58 <_Balloc>
   83c80:	89800417 	ldw	r6,16(r17)
   83c84:	89400304 	addi	r5,r17,12
   83c88:	11000304 	addi	r4,r2,12
   83c8c:	31800084 	addi	r6,r6,2
   83c90:	318d883a 	add	r6,r6,r6
   83c94:	318d883a 	add	r6,r6,r6
   83c98:	1027883a 	mov	r19,r2
   83c9c:	00857e80 	call	857e8 <memcpy>
   83ca0:	01800044 	movi	r6,1
   83ca4:	980b883a 	mov	r5,r19
   83ca8:	e009883a 	mov	r4,fp
   83cac:	00861d80 	call	861d8 <__lshift>
   83cb0:	1029883a 	mov	r20,r2
   83cb4:	003ecc06 	br	837e8 <_dtoa_r+0xe14>
   83cb8:	00800e44 	movi	r2,57
   83cbc:	90809026 	beq	r18,r2,83f00 <_dtoa_r+0x152c>
   83cc0:	92000044 	addi	r8,r18,1
   83cc4:	003f1f06 	br	83944 <_dtoa_r+0xf70>
   83cc8:	9011883a 	mov	r8,r18
   83ccc:	8825883a 	mov	r18,r17
   83cd0:	a023883a 	mov	r17,r20
   83cd4:	003e2906 	br	8357c <_dtoa_r+0xba8>
   83cd8:	002b883a 	mov	r21,zero
   83cdc:	0023883a 	mov	r17,zero
   83ce0:	003f5406 	br	83a34 <_dtoa_r+0x1060>
   83ce4:	61bfffc4 	addi	r6,r12,-1
   83ce8:	300490fa 	slli	r2,r6,3
   83cec:	00c00274 	movhi	r3,9
   83cf0:	18fe8504 	addi	r3,r3,-1516
   83cf4:	1885883a 	add	r2,r3,r2
   83cf8:	11000017 	ldw	r4,0(r2)
   83cfc:	11400117 	ldw	r5,4(r2)
   83d00:	d8800717 	ldw	r2,28(sp)
   83d04:	880f883a 	mov	r7,r17
   83d08:	d9801215 	stw	r6,72(sp)
   83d0c:	800d883a 	mov	r6,r16
   83d10:	db001615 	stw	r12,88(sp)
   83d14:	15c00044 	addi	r23,r2,1
   83d18:	008b9140 	call	8b914 <__muldf3>
   83d1c:	d9401017 	ldw	r5,64(sp)
   83d20:	d9000f17 	ldw	r4,60(sp)
   83d24:	d8c01515 	stw	r3,84(sp)
   83d28:	d8801415 	stw	r2,80(sp)
   83d2c:	008c9280 	call	8c928 <__fixdfsi>
   83d30:	1009883a 	mov	r4,r2
   83d34:	1021883a 	mov	r16,r2
   83d38:	008c9a80 	call	8c9a8 <__floatsidf>
   83d3c:	d9000f17 	ldw	r4,60(sp)
   83d40:	d9401017 	ldw	r5,64(sp)
   83d44:	100d883a 	mov	r6,r2
   83d48:	180f883a 	mov	r7,r3
   83d4c:	008c02c0 	call	8c02c <__subdf3>
   83d50:	1829883a 	mov	r20,r3
   83d54:	d8c00717 	ldw	r3,28(sp)
   83d58:	84000c04 	addi	r16,r16,48
   83d5c:	1023883a 	mov	r17,r2
   83d60:	1c000005 	stb	r16,0(r3)
   83d64:	db001617 	ldw	r12,88(sp)
   83d68:	00800044 	movi	r2,1
   83d6c:	60802226 	beq	r12,r2,83df8 <_dtoa_r+0x1424>
   83d70:	d9c00717 	ldw	r7,28(sp)
   83d74:	8805883a 	mov	r2,r17
   83d78:	b82b883a 	mov	r21,r23
   83d7c:	3b19883a 	add	r12,r7,r12
   83d80:	6023883a 	mov	r17,r12
   83d84:	a007883a 	mov	r3,r20
   83d88:	dc800f15 	stw	r18,60(sp)
   83d8c:	000d883a 	mov	r6,zero
   83d90:	01d00934 	movhi	r7,16420
   83d94:	1009883a 	mov	r4,r2
   83d98:	180b883a 	mov	r5,r3
   83d9c:	008b9140 	call	8b914 <__muldf3>
   83da0:	180b883a 	mov	r5,r3
   83da4:	1009883a 	mov	r4,r2
   83da8:	1829883a 	mov	r20,r3
   83dac:	1025883a 	mov	r18,r2
   83db0:	008c9280 	call	8c928 <__fixdfsi>
   83db4:	1009883a 	mov	r4,r2
   83db8:	1021883a 	mov	r16,r2
   83dbc:	008c9a80 	call	8c9a8 <__floatsidf>
   83dc0:	100d883a 	mov	r6,r2
   83dc4:	180f883a 	mov	r7,r3
   83dc8:	9009883a 	mov	r4,r18
   83dcc:	a00b883a 	mov	r5,r20
   83dd0:	84000c04 	addi	r16,r16,48
   83dd4:	008c02c0 	call	8c02c <__subdf3>
   83dd8:	ad400044 	addi	r21,r21,1
   83ddc:	ac3fffc5 	stb	r16,-1(r21)
   83de0:	ac7fea1e 	bne	r21,r17,83d8c <_dtoa_r+0x13b8>
   83de4:	1023883a 	mov	r17,r2
   83de8:	d8801217 	ldw	r2,72(sp)
   83dec:	dc800f17 	ldw	r18,60(sp)
   83df0:	1829883a 	mov	r20,r3
   83df4:	b8af883a 	add	r23,r23,r2
   83df8:	d9001417 	ldw	r4,80(sp)
   83dfc:	d9401517 	ldw	r5,84(sp)
   83e00:	000d883a 	mov	r6,zero
   83e04:	01cff834 	movhi	r7,16352
   83e08:	008a5280 	call	8a528 <__adddf3>
   83e0c:	880d883a 	mov	r6,r17
   83e10:	a00f883a 	mov	r7,r20
   83e14:	1009883a 	mov	r4,r2
   83e18:	180b883a 	mov	r5,r3
   83e1c:	008b8200 	call	8b820 <__ledf2>
   83e20:	10003e0e 	bge	r2,zero,83f1c <_dtoa_r+0x1548>
   83e24:	d9001317 	ldw	r4,76(sp)
   83e28:	bd3fffc3 	ldbu	r20,-1(r23)
   83e2c:	d9000515 	stw	r4,20(sp)
   83e30:	003d3b06 	br	83320 <_dtoa_r+0x94c>
   83e34:	0027883a 	mov	r19,zero
   83e38:	003f1b06 	br	83aa8 <_dtoa_r+0x10d4>
   83e3c:	d8800817 	ldw	r2,32(sp)
   83e40:	11e9c83a 	sub	r20,r2,r7
   83e44:	0005883a 	mov	r2,zero
   83e48:	003d5406 	br	8339c <_dtoa_r+0x9c8>
   83e4c:	00800044 	movi	r2,1
   83e50:	003dc706 	br	83570 <_dtoa_r+0xb9c>
   83e54:	d8c00217 	ldw	r3,8(sp)
   83e58:	00800d84 	movi	r2,54
   83e5c:	dd400a17 	ldw	r21,40(sp)
   83e60:	10c5c83a 	sub	r2,r2,r3
   83e64:	dd000817 	ldw	r20,32(sp)
   83e68:	003d4c06 	br	8339c <_dtoa_r+0x9c8>
   83e6c:	dc800f15 	stw	r18,60(sp)
   83e70:	dcc01015 	stw	r19,64(sp)
   83e74:	04000084 	movi	r16,2
   83e78:	003bed06 	br	82e30 <_dtoa_r+0x45c>
   83e7c:	d9000617 	ldw	r4,24(sp)
   83e80:	203f0d26 	beq	r4,zero,83ab8 <_dtoa_r+0x10e4>
   83e84:	d9800c17 	ldw	r6,48(sp)
   83e88:	01bcab0e 	bge	zero,r6,83138 <_dtoa_r+0x764>
   83e8c:	d9401017 	ldw	r5,64(sp)
   83e90:	d9000f17 	ldw	r4,60(sp)
   83e94:	000d883a 	mov	r6,zero
   83e98:	01d00934 	movhi	r7,16420
   83e9c:	008b9140 	call	8b914 <__muldf3>
   83ea0:	81000044 	addi	r4,r16,1
   83ea4:	d8800f15 	stw	r2,60(sp)
   83ea8:	d8c01015 	stw	r3,64(sp)
   83eac:	008c9a80 	call	8c9a8 <__floatsidf>
   83eb0:	d9800f17 	ldw	r6,60(sp)
   83eb4:	d9c01017 	ldw	r7,64(sp)
   83eb8:	1009883a 	mov	r4,r2
   83ebc:	180b883a 	mov	r5,r3
   83ec0:	008b9140 	call	8b914 <__muldf3>
   83ec4:	01d00734 	movhi	r7,16412
   83ec8:	000d883a 	mov	r6,zero
   83ecc:	1009883a 	mov	r4,r2
   83ed0:	180b883a 	mov	r5,r3
   83ed4:	008a5280 	call	8a528 <__adddf3>
   83ed8:	d9c00517 	ldw	r7,20(sp)
   83edc:	047f3034 	movhi	r17,64704
   83ee0:	1021883a 	mov	r16,r2
   83ee4:	39ffffc4 	addi	r7,r7,-1
   83ee8:	d9c01315 	stw	r7,76(sp)
   83eec:	1c63883a 	add	r17,r3,r17
   83ef0:	db000c17 	ldw	r12,48(sp)
   83ef4:	003bea06 	br	82ea0 <_dtoa_r+0x4cc>
   83ef8:	dc000915 	stw	r16,36(sp)
   83efc:	003e0e06 	br	83738 <_dtoa_r+0xd64>
   83f00:	01000e44 	movi	r4,57
   83f04:	8825883a 	mov	r18,r17
   83f08:	9dc00044 	addi	r23,r19,1
   83f0c:	99000005 	stb	r4,0(r19)
   83f10:	a023883a 	mov	r17,r20
   83f14:	dc000915 	stw	r16,36(sp)
   83f18:	003da406 	br	835ac <_dtoa_r+0xbd8>
   83f1c:	d9801417 	ldw	r6,80(sp)
   83f20:	d9c01517 	ldw	r7,84(sp)
   83f24:	0009883a 	mov	r4,zero
   83f28:	014ff834 	movhi	r5,16352
   83f2c:	008c02c0 	call	8c02c <__subdf3>
   83f30:	880d883a 	mov	r6,r17
   83f34:	a00f883a 	mov	r7,r20
   83f38:	1009883a 	mov	r4,r2
   83f3c:	180b883a 	mov	r5,r3
   83f40:	008b7440 	call	8b744 <__gedf2>
   83f44:	00bc7c0e 	bge	zero,r2,83138 <_dtoa_r+0x764>
   83f48:	01000c04 	movi	r4,48
   83f4c:	00000106 	br	83f54 <_dtoa_r+0x1580>
   83f50:	102f883a 	mov	r23,r2
   83f54:	b8bfffc4 	addi	r2,r23,-1
   83f58:	10c00007 	ldb	r3,0(r2)
   83f5c:	193ffc26 	beq	r3,r4,83f50 <_dtoa_r+0x157c>
   83f60:	d9801317 	ldw	r6,76(sp)
   83f64:	d9800515 	stw	r6,20(sp)
   83f68:	003c4406 	br	8307c <_dtoa_r+0x6a8>
   83f6c:	d9801317 	ldw	r6,76(sp)
   83f70:	d9800515 	stw	r6,20(sp)
   83f74:	003cea06 	br	83320 <_dtoa_r+0x94c>
   83f78:	dd800f17 	ldw	r22,60(sp)
   83f7c:	dcc01017 	ldw	r19,64(sp)
   83f80:	dc801217 	ldw	r18,72(sp)
   83f84:	003c6c06 	br	83138 <_dtoa_r+0x764>
   83f88:	903e031e 	bne	r18,zero,83798 <_dtoa_r+0xdc4>
   83f8c:	003ebb06 	br	83a7c <_dtoa_r+0x10a8>
   83f90:	103e6c1e 	bne	r2,zero,83944 <_dtoa_r+0xf70>
   83f94:	4080004c 	andi	r2,r8,1
   83f98:	103e6a26 	beq	r2,zero,83944 <_dtoa_r+0xf70>
   83f9c:	003e6606 	br	83938 <_dtoa_r+0xf64>
   83fa0:	d8c00317 	ldw	r3,12(sp)
   83fa4:	00800084 	movi	r2,2
   83fa8:	10c02916 	blt	r2,r3,84050 <_dtoa_r+0x167c>
   83fac:	d9000c17 	ldw	r4,48(sp)
   83fb0:	003e8806 	br	839d4 <_dtoa_r+0x1000>
   83fb4:	04000084 	movi	r16,2
   83fb8:	003b9d06 	br	82e30 <_dtoa_r+0x45c>
   83fbc:	d9001317 	ldw	r4,76(sp)
   83fc0:	d9000515 	stw	r4,20(sp)
   83fc4:	003cd606 	br	83320 <_dtoa_r+0x94c>
   83fc8:	d8801317 	ldw	r2,76(sp)
   83fcc:	d8800515 	stw	r2,20(sp)
   83fd0:	003c2a06 	br	8307c <_dtoa_r+0x6a8>
   83fd4:	d9800317 	ldw	r6,12(sp)
   83fd8:	00800084 	movi	r2,2
   83fdc:	11801516 	blt	r2,r6,84034 <_dtoa_r+0x1660>
   83fe0:	d9c00c17 	ldw	r7,48(sp)
   83fe4:	d9c00615 	stw	r7,24(sp)
   83fe8:	003df706 	br	837c8 <_dtoa_r+0xdf4>
   83fec:	193d3926 	beq	r3,r4,834d4 <_dtoa_r+0xb00>
   83ff0:	00c00f04 	movi	r3,60
   83ff4:	1885c83a 	sub	r2,r3,r2
   83ff8:	003ddf06 	br	83778 <_dtoa_r+0xda4>
   83ffc:	e009883a 	mov	r4,fp
   84000:	e0001115 	stw	zero,68(fp)
   84004:	000b883a 	mov	r5,zero
   84008:	0085a580 	call	85a58 <_Balloc>
   8400c:	d8800715 	stw	r2,28(sp)
   84010:	d8c00717 	ldw	r3,28(sp)
   84014:	00bfffc4 	movi	r2,-1
   84018:	01000044 	movi	r4,1
   8401c:	d8800c15 	stw	r2,48(sp)
   84020:	e0c01015 	stw	r3,64(fp)
   84024:	d9000b15 	stw	r4,44(sp)
   84028:	d8800615 	stw	r2,24(sp)
   8402c:	d8002215 	stw	zero,136(sp)
   84030:	003c4106 	br	83138 <_dtoa_r+0x764>
   84034:	d8c00c17 	ldw	r3,48(sp)
   84038:	d8c00615 	stw	r3,24(sp)
   8403c:	003e7006 	br	83a00 <_dtoa_r+0x102c>
   84040:	04400044 	movi	r17,1
   84044:	003b2006 	br	82cc8 <_dtoa_r+0x2f4>
   84048:	000b883a 	mov	r5,zero
   8404c:	003b3d06 	br	82d44 <_dtoa_r+0x370>
   84050:	d8800c17 	ldw	r2,48(sp)
   84054:	d8800615 	stw	r2,24(sp)
   84058:	003e6906 	br	83a00 <_dtoa_r+0x102c>

0008405c <__sflush_r>:
   8405c:	2880030b 	ldhu	r2,12(r5)
   84060:	defffb04 	addi	sp,sp,-20
   84064:	dcc00315 	stw	r19,12(sp)
   84068:	dc400115 	stw	r17,4(sp)
   8406c:	dfc00415 	stw	ra,16(sp)
   84070:	dc800215 	stw	r18,8(sp)
   84074:	dc000015 	stw	r16,0(sp)
   84078:	10c0020c 	andi	r3,r2,8
   8407c:	2823883a 	mov	r17,r5
   84080:	2027883a 	mov	r19,r4
   84084:	1800311e 	bne	r3,zero,8414c <__sflush_r+0xf0>
   84088:	28c00117 	ldw	r3,4(r5)
   8408c:	10820014 	ori	r2,r2,2048
   84090:	2880030d 	sth	r2,12(r5)
   84094:	00c04b0e 	bge	zero,r3,841c4 <__sflush_r+0x168>
   84098:	8a000a17 	ldw	r8,40(r17)
   8409c:	40002326 	beq	r8,zero,8412c <__sflush_r+0xd0>
   840a0:	9c000017 	ldw	r16,0(r19)
   840a4:	10c4000c 	andi	r3,r2,4096
   840a8:	98000015 	stw	zero,0(r19)
   840ac:	18004826 	beq	r3,zero,841d0 <__sflush_r+0x174>
   840b0:	89801417 	ldw	r6,80(r17)
   840b4:	10c0010c 	andi	r3,r2,4
   840b8:	18000626 	beq	r3,zero,840d4 <__sflush_r+0x78>
   840bc:	88c00117 	ldw	r3,4(r17)
   840c0:	88800c17 	ldw	r2,48(r17)
   840c4:	30cdc83a 	sub	r6,r6,r3
   840c8:	10000226 	beq	r2,zero,840d4 <__sflush_r+0x78>
   840cc:	88800f17 	ldw	r2,60(r17)
   840d0:	308dc83a 	sub	r6,r6,r2
   840d4:	89400717 	ldw	r5,28(r17)
   840d8:	000f883a 	mov	r7,zero
   840dc:	9809883a 	mov	r4,r19
   840e0:	403ee83a 	callr	r8
   840e4:	00ffffc4 	movi	r3,-1
   840e8:	10c04426 	beq	r2,r3,841fc <__sflush_r+0x1a0>
   840ec:	88c0030b 	ldhu	r3,12(r17)
   840f0:	89000417 	ldw	r4,16(r17)
   840f4:	88000115 	stw	zero,4(r17)
   840f8:	197dffcc 	andi	r5,r3,63487
   840fc:	8940030d 	sth	r5,12(r17)
   84100:	89000015 	stw	r4,0(r17)
   84104:	18c4000c 	andi	r3,r3,4096
   84108:	18002c1e 	bne	r3,zero,841bc <__sflush_r+0x160>
   8410c:	89400c17 	ldw	r5,48(r17)
   84110:	9c000015 	stw	r16,0(r19)
   84114:	28000526 	beq	r5,zero,8412c <__sflush_r+0xd0>
   84118:	88801004 	addi	r2,r17,64
   8411c:	28800226 	beq	r5,r2,84128 <__sflush_r+0xcc>
   84120:	9809883a 	mov	r4,r19
   84124:	00847c80 	call	847c8 <_free_r>
   84128:	88000c15 	stw	zero,48(r17)
   8412c:	0005883a 	mov	r2,zero
   84130:	dfc00417 	ldw	ra,16(sp)
   84134:	dcc00317 	ldw	r19,12(sp)
   84138:	dc800217 	ldw	r18,8(sp)
   8413c:	dc400117 	ldw	r17,4(sp)
   84140:	dc000017 	ldw	r16,0(sp)
   84144:	dec00504 	addi	sp,sp,20
   84148:	f800283a 	ret
   8414c:	2c800417 	ldw	r18,16(r5)
   84150:	903ff626 	beq	r18,zero,8412c <__sflush_r+0xd0>
   84154:	2c000017 	ldw	r16,0(r5)
   84158:	108000cc 	andi	r2,r2,3
   8415c:	2c800015 	stw	r18,0(r5)
   84160:	84a1c83a 	sub	r16,r16,r18
   84164:	1000131e 	bne	r2,zero,841b4 <__sflush_r+0x158>
   84168:	28800517 	ldw	r2,20(r5)
   8416c:	88800215 	stw	r2,8(r17)
   84170:	04000316 	blt	zero,r16,84180 <__sflush_r+0x124>
   84174:	003fed06 	br	8412c <__sflush_r+0xd0>
   84178:	90a5883a 	add	r18,r18,r2
   8417c:	043feb0e 	bge	zero,r16,8412c <__sflush_r+0xd0>
   84180:	88800917 	ldw	r2,36(r17)
   84184:	89400717 	ldw	r5,28(r17)
   84188:	800f883a 	mov	r7,r16
   8418c:	900d883a 	mov	r6,r18
   84190:	9809883a 	mov	r4,r19
   84194:	103ee83a 	callr	r2
   84198:	80a1c83a 	sub	r16,r16,r2
   8419c:	00bff616 	blt	zero,r2,84178 <__sflush_r+0x11c>
   841a0:	88c0030b 	ldhu	r3,12(r17)
   841a4:	00bfffc4 	movi	r2,-1
   841a8:	18c01014 	ori	r3,r3,64
   841ac:	88c0030d 	sth	r3,12(r17)
   841b0:	003fdf06 	br	84130 <__sflush_r+0xd4>
   841b4:	0005883a 	mov	r2,zero
   841b8:	003fec06 	br	8416c <__sflush_r+0x110>
   841bc:	88801415 	stw	r2,80(r17)
   841c0:	003fd206 	br	8410c <__sflush_r+0xb0>
   841c4:	28c00f17 	ldw	r3,60(r5)
   841c8:	00ffb316 	blt	zero,r3,84098 <__sflush_r+0x3c>
   841cc:	003fd706 	br	8412c <__sflush_r+0xd0>
   841d0:	89400717 	ldw	r5,28(r17)
   841d4:	000d883a 	mov	r6,zero
   841d8:	01c00044 	movi	r7,1
   841dc:	9809883a 	mov	r4,r19
   841e0:	403ee83a 	callr	r8
   841e4:	100d883a 	mov	r6,r2
   841e8:	00bfffc4 	movi	r2,-1
   841ec:	30801426 	beq	r6,r2,84240 <__sflush_r+0x1e4>
   841f0:	8880030b 	ldhu	r2,12(r17)
   841f4:	8a000a17 	ldw	r8,40(r17)
   841f8:	003fae06 	br	840b4 <__sflush_r+0x58>
   841fc:	98c00017 	ldw	r3,0(r19)
   84200:	183fba26 	beq	r3,zero,840ec <__sflush_r+0x90>
   84204:	01000744 	movi	r4,29
   84208:	19000626 	beq	r3,r4,84224 <__sflush_r+0x1c8>
   8420c:	01000584 	movi	r4,22
   84210:	19000426 	beq	r3,r4,84224 <__sflush_r+0x1c8>
   84214:	88c0030b 	ldhu	r3,12(r17)
   84218:	18c01014 	ori	r3,r3,64
   8421c:	88c0030d 	sth	r3,12(r17)
   84220:	003fc306 	br	84130 <__sflush_r+0xd4>
   84224:	8880030b 	ldhu	r2,12(r17)
   84228:	88c00417 	ldw	r3,16(r17)
   8422c:	88000115 	stw	zero,4(r17)
   84230:	10bdffcc 	andi	r2,r2,63487
   84234:	8880030d 	sth	r2,12(r17)
   84238:	88c00015 	stw	r3,0(r17)
   8423c:	003fb306 	br	8410c <__sflush_r+0xb0>
   84240:	98800017 	ldw	r2,0(r19)
   84244:	103fea26 	beq	r2,zero,841f0 <__sflush_r+0x194>
   84248:	00c00744 	movi	r3,29
   8424c:	10c00226 	beq	r2,r3,84258 <__sflush_r+0x1fc>
   84250:	00c00584 	movi	r3,22
   84254:	10c0031e 	bne	r2,r3,84264 <__sflush_r+0x208>
   84258:	9c000015 	stw	r16,0(r19)
   8425c:	0005883a 	mov	r2,zero
   84260:	003fb306 	br	84130 <__sflush_r+0xd4>
   84264:	88c0030b 	ldhu	r3,12(r17)
   84268:	3005883a 	mov	r2,r6
   8426c:	18c01014 	ori	r3,r3,64
   84270:	88c0030d 	sth	r3,12(r17)
   84274:	003fae06 	br	84130 <__sflush_r+0xd4>

00084278 <_fflush_r>:
   84278:	defffd04 	addi	sp,sp,-12
   8427c:	dc000115 	stw	r16,4(sp)
   84280:	dfc00215 	stw	ra,8(sp)
   84284:	2021883a 	mov	r16,r4
   84288:	20000226 	beq	r4,zero,84294 <_fflush_r+0x1c>
   8428c:	20800e17 	ldw	r2,56(r4)
   84290:	10000c26 	beq	r2,zero,842c4 <_fflush_r+0x4c>
   84294:	2880030f 	ldh	r2,12(r5)
   84298:	1000051e 	bne	r2,zero,842b0 <_fflush_r+0x38>
   8429c:	0005883a 	mov	r2,zero
   842a0:	dfc00217 	ldw	ra,8(sp)
   842a4:	dc000117 	ldw	r16,4(sp)
   842a8:	dec00304 	addi	sp,sp,12
   842ac:	f800283a 	ret
   842b0:	8009883a 	mov	r4,r16
   842b4:	dfc00217 	ldw	ra,8(sp)
   842b8:	dc000117 	ldw	r16,4(sp)
   842bc:	dec00304 	addi	sp,sp,12
   842c0:	008405c1 	jmpi	8405c <__sflush_r>
   842c4:	d9400015 	stw	r5,0(sp)
   842c8:	00846540 	call	84654 <__sinit>
   842cc:	d9400017 	ldw	r5,0(sp)
   842d0:	003ff006 	br	84294 <_fflush_r+0x1c>

000842d4 <fflush>:
   842d4:	20000526 	beq	r4,zero,842ec <fflush+0x18>
   842d8:	00800274 	movhi	r2,9
   842dc:	1085b604 	addi	r2,r2,5848
   842e0:	200b883a 	mov	r5,r4
   842e4:	11000017 	ldw	r4,0(r2)
   842e8:	00842781 	jmpi	84278 <_fflush_r>
   842ec:	00800274 	movhi	r2,9
   842f0:	1085b504 	addi	r2,r2,5844
   842f4:	11000017 	ldw	r4,0(r2)
   842f8:	01400234 	movhi	r5,8
   842fc:	29509e04 	addi	r5,r5,17016
   84300:	0084b9c1 	jmpi	84b9c <_fwalk_reent>

00084304 <__fp_unlock>:
   84304:	0005883a 	mov	r2,zero
   84308:	f800283a 	ret

0008430c <_cleanup_r>:
   8430c:	01400274 	movhi	r5,9
   84310:	29616304 	addi	r5,r5,-31348
   84314:	0084b9c1 	jmpi	84b9c <_fwalk_reent>

00084318 <__sinit.part.1>:
   84318:	defff704 	addi	sp,sp,-36
   8431c:	00c00234 	movhi	r3,8
   84320:	dfc00815 	stw	ra,32(sp)
   84324:	ddc00715 	stw	r23,28(sp)
   84328:	dd800615 	stw	r22,24(sp)
   8432c:	dd400515 	stw	r21,20(sp)
   84330:	dd000415 	stw	r20,16(sp)
   84334:	dcc00315 	stw	r19,12(sp)
   84338:	dc800215 	stw	r18,8(sp)
   8433c:	dc400115 	stw	r17,4(sp)
   84340:	dc000015 	stw	r16,0(sp)
   84344:	18d0c304 	addi	r3,r3,17164
   84348:	24000117 	ldw	r16,4(r4)
   8434c:	20c00f15 	stw	r3,60(r4)
   84350:	2080bb04 	addi	r2,r4,748
   84354:	00c000c4 	movi	r3,3
   84358:	20c0b915 	stw	r3,740(r4)
   8435c:	2080ba15 	stw	r2,744(r4)
   84360:	2000b815 	stw	zero,736(r4)
   84364:	05c00204 	movi	r23,8
   84368:	00800104 	movi	r2,4
   8436c:	2025883a 	mov	r18,r4
   84370:	b80d883a 	mov	r6,r23
   84374:	81001704 	addi	r4,r16,92
   84378:	000b883a 	mov	r5,zero
   8437c:	80000015 	stw	zero,0(r16)
   84380:	80000115 	stw	zero,4(r16)
   84384:	80000215 	stw	zero,8(r16)
   84388:	8080030d 	sth	r2,12(r16)
   8438c:	80001915 	stw	zero,100(r16)
   84390:	8000038d 	sth	zero,14(r16)
   84394:	80000415 	stw	zero,16(r16)
   84398:	80000515 	stw	zero,20(r16)
   8439c:	80000615 	stw	zero,24(r16)
   843a0:	00859300 	call	85930 <memset>
   843a4:	05800234 	movhi	r22,8
   843a8:	94400217 	ldw	r17,8(r18)
   843ac:	05400234 	movhi	r21,8
   843b0:	05000234 	movhi	r20,8
   843b4:	04c00234 	movhi	r19,8
   843b8:	b59ac704 	addi	r22,r22,27420
   843bc:	ad5ade04 	addi	r21,r21,27512
   843c0:	a51afd04 	addi	r20,r20,27636
   843c4:	9cdb1404 	addi	r19,r19,27728
   843c8:	85800815 	stw	r22,32(r16)
   843cc:	85400915 	stw	r21,36(r16)
   843d0:	85000a15 	stw	r20,40(r16)
   843d4:	84c00b15 	stw	r19,44(r16)
   843d8:	84000715 	stw	r16,28(r16)
   843dc:	00800284 	movi	r2,10
   843e0:	8880030d 	sth	r2,12(r17)
   843e4:	00800044 	movi	r2,1
   843e8:	b80d883a 	mov	r6,r23
   843ec:	89001704 	addi	r4,r17,92
   843f0:	000b883a 	mov	r5,zero
   843f4:	88000015 	stw	zero,0(r17)
   843f8:	88000115 	stw	zero,4(r17)
   843fc:	88000215 	stw	zero,8(r17)
   84400:	88001915 	stw	zero,100(r17)
   84404:	8880038d 	sth	r2,14(r17)
   84408:	88000415 	stw	zero,16(r17)
   8440c:	88000515 	stw	zero,20(r17)
   84410:	88000615 	stw	zero,24(r17)
   84414:	00859300 	call	85930 <memset>
   84418:	94000317 	ldw	r16,12(r18)
   8441c:	00800484 	movi	r2,18
   84420:	8c400715 	stw	r17,28(r17)
   84424:	8d800815 	stw	r22,32(r17)
   84428:	8d400915 	stw	r21,36(r17)
   8442c:	8d000a15 	stw	r20,40(r17)
   84430:	8cc00b15 	stw	r19,44(r17)
   84434:	8080030d 	sth	r2,12(r16)
   84438:	00800084 	movi	r2,2
   8443c:	80000015 	stw	zero,0(r16)
   84440:	80000115 	stw	zero,4(r16)
   84444:	80000215 	stw	zero,8(r16)
   84448:	80001915 	stw	zero,100(r16)
   8444c:	8080038d 	sth	r2,14(r16)
   84450:	80000415 	stw	zero,16(r16)
   84454:	80000515 	stw	zero,20(r16)
   84458:	80000615 	stw	zero,24(r16)
   8445c:	b80d883a 	mov	r6,r23
   84460:	000b883a 	mov	r5,zero
   84464:	81001704 	addi	r4,r16,92
   84468:	00859300 	call	85930 <memset>
   8446c:	00800044 	movi	r2,1
   84470:	84000715 	stw	r16,28(r16)
   84474:	85800815 	stw	r22,32(r16)
   84478:	85400915 	stw	r21,36(r16)
   8447c:	85000a15 	stw	r20,40(r16)
   84480:	84c00b15 	stw	r19,44(r16)
   84484:	90800e15 	stw	r2,56(r18)
   84488:	dfc00817 	ldw	ra,32(sp)
   8448c:	ddc00717 	ldw	r23,28(sp)
   84490:	dd800617 	ldw	r22,24(sp)
   84494:	dd400517 	ldw	r21,20(sp)
   84498:	dd000417 	ldw	r20,16(sp)
   8449c:	dcc00317 	ldw	r19,12(sp)
   844a0:	dc800217 	ldw	r18,8(sp)
   844a4:	dc400117 	ldw	r17,4(sp)
   844a8:	dc000017 	ldw	r16,0(sp)
   844ac:	dec00904 	addi	sp,sp,36
   844b0:	f800283a 	ret

000844b4 <__fp_lock>:
   844b4:	0005883a 	mov	r2,zero
   844b8:	f800283a 	ret

000844bc <__sfmoreglue>:
   844bc:	defffc04 	addi	sp,sp,-16
   844c0:	dc400115 	stw	r17,4(sp)
   844c4:	2c7fffc4 	addi	r17,r5,-1
   844c8:	8c401a24 	muli	r17,r17,104
   844cc:	dc800215 	stw	r18,8(sp)
   844d0:	2825883a 	mov	r18,r5
   844d4:	89401d04 	addi	r5,r17,116
   844d8:	dc000015 	stw	r16,0(sp)
   844dc:	dfc00315 	stw	ra,12(sp)
   844e0:	0084ef80 	call	84ef8 <_malloc_r>
   844e4:	1021883a 	mov	r16,r2
   844e8:	10000726 	beq	r2,zero,84508 <__sfmoreglue+0x4c>
   844ec:	11000304 	addi	r4,r2,12
   844f0:	10000015 	stw	zero,0(r2)
   844f4:	14800115 	stw	r18,4(r2)
   844f8:	11000215 	stw	r4,8(r2)
   844fc:	89801a04 	addi	r6,r17,104
   84500:	000b883a 	mov	r5,zero
   84504:	00859300 	call	85930 <memset>
   84508:	8005883a 	mov	r2,r16
   8450c:	dfc00317 	ldw	ra,12(sp)
   84510:	dc800217 	ldw	r18,8(sp)
   84514:	dc400117 	ldw	r17,4(sp)
   84518:	dc000017 	ldw	r16,0(sp)
   8451c:	dec00404 	addi	sp,sp,16
   84520:	f800283a 	ret

00084524 <__sfp>:
   84524:	defffb04 	addi	sp,sp,-20
   84528:	dc000015 	stw	r16,0(sp)
   8452c:	04000274 	movhi	r16,9
   84530:	8405b504 	addi	r16,r16,5844
   84534:	dcc00315 	stw	r19,12(sp)
   84538:	2027883a 	mov	r19,r4
   8453c:	81000017 	ldw	r4,0(r16)
   84540:	dfc00415 	stw	ra,16(sp)
   84544:	dc800215 	stw	r18,8(sp)
   84548:	20800e17 	ldw	r2,56(r4)
   8454c:	dc400115 	stw	r17,4(sp)
   84550:	1000021e 	bne	r2,zero,8455c <__sfp+0x38>
   84554:	00843180 	call	84318 <__sinit.part.1>
   84558:	81000017 	ldw	r4,0(r16)
   8455c:	2480b804 	addi	r18,r4,736
   84560:	047fffc4 	movi	r17,-1
   84564:	91000117 	ldw	r4,4(r18)
   84568:	94000217 	ldw	r16,8(r18)
   8456c:	213fffc4 	addi	r4,r4,-1
   84570:	20000a16 	blt	r4,zero,8459c <__sfp+0x78>
   84574:	8080030f 	ldh	r2,12(r16)
   84578:	10000c26 	beq	r2,zero,845ac <__sfp+0x88>
   8457c:	80c01d04 	addi	r3,r16,116
   84580:	00000206 	br	8458c <__sfp+0x68>
   84584:	18bfe60f 	ldh	r2,-104(r3)
   84588:	10000826 	beq	r2,zero,845ac <__sfp+0x88>
   8458c:	213fffc4 	addi	r4,r4,-1
   84590:	1c3ffd04 	addi	r16,r3,-12
   84594:	18c01a04 	addi	r3,r3,104
   84598:	247ffa1e 	bne	r4,r17,84584 <__sfp+0x60>
   8459c:	90800017 	ldw	r2,0(r18)
   845a0:	10001d26 	beq	r2,zero,84618 <__sfp+0xf4>
   845a4:	1025883a 	mov	r18,r2
   845a8:	003fee06 	br	84564 <__sfp+0x40>
   845ac:	00bfffc4 	movi	r2,-1
   845b0:	8080038d 	sth	r2,14(r16)
   845b4:	00800044 	movi	r2,1
   845b8:	8080030d 	sth	r2,12(r16)
   845bc:	80001915 	stw	zero,100(r16)
   845c0:	80000015 	stw	zero,0(r16)
   845c4:	80000215 	stw	zero,8(r16)
   845c8:	80000115 	stw	zero,4(r16)
   845cc:	80000415 	stw	zero,16(r16)
   845d0:	80000515 	stw	zero,20(r16)
   845d4:	80000615 	stw	zero,24(r16)
   845d8:	01800204 	movi	r6,8
   845dc:	000b883a 	mov	r5,zero
   845e0:	81001704 	addi	r4,r16,92
   845e4:	00859300 	call	85930 <memset>
   845e8:	8005883a 	mov	r2,r16
   845ec:	80000c15 	stw	zero,48(r16)
   845f0:	80000d15 	stw	zero,52(r16)
   845f4:	80001115 	stw	zero,68(r16)
   845f8:	80001215 	stw	zero,72(r16)
   845fc:	dfc00417 	ldw	ra,16(sp)
   84600:	dcc00317 	ldw	r19,12(sp)
   84604:	dc800217 	ldw	r18,8(sp)
   84608:	dc400117 	ldw	r17,4(sp)
   8460c:	dc000017 	ldw	r16,0(sp)
   84610:	dec00504 	addi	sp,sp,20
   84614:	f800283a 	ret
   84618:	01400104 	movi	r5,4
   8461c:	9809883a 	mov	r4,r19
   84620:	00844bc0 	call	844bc <__sfmoreglue>
   84624:	90800015 	stw	r2,0(r18)
   84628:	103fde1e 	bne	r2,zero,845a4 <__sfp+0x80>
   8462c:	00800304 	movi	r2,12
   84630:	98800015 	stw	r2,0(r19)
   84634:	0005883a 	mov	r2,zero
   84638:	003ff006 	br	845fc <__sfp+0xd8>

0008463c <_cleanup>:
   8463c:	00800274 	movhi	r2,9
   84640:	1085b504 	addi	r2,r2,5844
   84644:	11000017 	ldw	r4,0(r2)
   84648:	01400274 	movhi	r5,9
   8464c:	29616304 	addi	r5,r5,-31348
   84650:	0084b9c1 	jmpi	84b9c <_fwalk_reent>

00084654 <__sinit>:
   84654:	20800e17 	ldw	r2,56(r4)
   84658:	10000126 	beq	r2,zero,84660 <__sinit+0xc>
   8465c:	f800283a 	ret
   84660:	00843181 	jmpi	84318 <__sinit.part.1>

00084664 <__sfp_lock_acquire>:
   84664:	f800283a 	ret

00084668 <__sfp_lock_release>:
   84668:	f800283a 	ret

0008466c <__sinit_lock_acquire>:
   8466c:	f800283a 	ret

00084670 <__sinit_lock_release>:
   84670:	f800283a 	ret

00084674 <__fp_lock_all>:
   84674:	00800274 	movhi	r2,9
   84678:	1085b604 	addi	r2,r2,5848
   8467c:	11000017 	ldw	r4,0(r2)
   84680:	01400234 	movhi	r5,8
   84684:	29512d04 	addi	r5,r5,17588
   84688:	0084ad81 	jmpi	84ad8 <_fwalk>

0008468c <__fp_unlock_all>:
   8468c:	00800274 	movhi	r2,9
   84690:	1085b604 	addi	r2,r2,5848
   84694:	11000017 	ldw	r4,0(r2)
   84698:	01400234 	movhi	r5,8
   8469c:	2950c104 	addi	r5,r5,17156
   846a0:	0084ad81 	jmpi	84ad8 <_fwalk>

000846a4 <_malloc_trim_r>:
   846a4:	defffb04 	addi	sp,sp,-20
   846a8:	dcc00315 	stw	r19,12(sp)
   846ac:	04c00274 	movhi	r19,9
   846b0:	dc800215 	stw	r18,8(sp)
   846b4:	dc400115 	stw	r17,4(sp)
   846b8:	dc000015 	stw	r16,0(sp)
   846bc:	dfc00415 	stw	ra,16(sp)
   846c0:	2821883a 	mov	r16,r5
   846c4:	9cc03104 	addi	r19,r19,196
   846c8:	2025883a 	mov	r18,r4
   846cc:	008d15c0 	call	8d15c <__malloc_lock>
   846d0:	98800217 	ldw	r2,8(r19)
   846d4:	14400117 	ldw	r17,4(r2)
   846d8:	00bfff04 	movi	r2,-4
   846dc:	88a2703a 	and	r17,r17,r2
   846e0:	8c21c83a 	sub	r16,r17,r16
   846e4:	8403fbc4 	addi	r16,r16,4079
   846e8:	8020d33a 	srli	r16,r16,12
   846ec:	0083ffc4 	movi	r2,4095
   846f0:	843fffc4 	addi	r16,r16,-1
   846f4:	8020933a 	slli	r16,r16,12
   846f8:	1400060e 	bge	r2,r16,84714 <_malloc_trim_r+0x70>
   846fc:	000b883a 	mov	r5,zero
   84700:	9009883a 	mov	r4,r18
   84704:	0086ac80 	call	86ac8 <_sbrk_r>
   84708:	98c00217 	ldw	r3,8(r19)
   8470c:	1c47883a 	add	r3,r3,r17
   84710:	10c00a26 	beq	r2,r3,8473c <_malloc_trim_r+0x98>
   84714:	9009883a 	mov	r4,r18
   84718:	008d1800 	call	8d180 <__malloc_unlock>
   8471c:	0005883a 	mov	r2,zero
   84720:	dfc00417 	ldw	ra,16(sp)
   84724:	dcc00317 	ldw	r19,12(sp)
   84728:	dc800217 	ldw	r18,8(sp)
   8472c:	dc400117 	ldw	r17,4(sp)
   84730:	dc000017 	ldw	r16,0(sp)
   84734:	dec00504 	addi	sp,sp,20
   84738:	f800283a 	ret
   8473c:	040bc83a 	sub	r5,zero,r16
   84740:	9009883a 	mov	r4,r18
   84744:	0086ac80 	call	86ac8 <_sbrk_r>
   84748:	00ffffc4 	movi	r3,-1
   8474c:	10c00d26 	beq	r2,r3,84784 <_malloc_trim_r+0xe0>
   84750:	00c00274 	movhi	r3,9
   84754:	18cc8e04 	addi	r3,r3,12856
   84758:	18800017 	ldw	r2,0(r3)
   8475c:	99000217 	ldw	r4,8(r19)
   84760:	8c23c83a 	sub	r17,r17,r16
   84764:	8c400054 	ori	r17,r17,1
   84768:	1421c83a 	sub	r16,r2,r16
   8476c:	24400115 	stw	r17,4(r4)
   84770:	9009883a 	mov	r4,r18
   84774:	1c000015 	stw	r16,0(r3)
   84778:	008d1800 	call	8d180 <__malloc_unlock>
   8477c:	00800044 	movi	r2,1
   84780:	003fe706 	br	84720 <_malloc_trim_r+0x7c>
   84784:	000b883a 	mov	r5,zero
   84788:	9009883a 	mov	r4,r18
   8478c:	0086ac80 	call	86ac8 <_sbrk_r>
   84790:	99000217 	ldw	r4,8(r19)
   84794:	014003c4 	movi	r5,15
   84798:	1107c83a 	sub	r3,r2,r4
   8479c:	28ffdd0e 	bge	r5,r3,84714 <_malloc_trim_r+0x70>
   847a0:	01400274 	movhi	r5,9
   847a4:	2945b804 	addi	r5,r5,5856
   847a8:	29400017 	ldw	r5,0(r5)
   847ac:	18c00054 	ori	r3,r3,1
   847b0:	20c00115 	stw	r3,4(r4)
   847b4:	00c00274 	movhi	r3,9
   847b8:	1145c83a 	sub	r2,r2,r5
   847bc:	18cc8e04 	addi	r3,r3,12856
   847c0:	18800015 	stw	r2,0(r3)
   847c4:	003fd306 	br	84714 <_malloc_trim_r+0x70>

000847c8 <_free_r>:
   847c8:	28004126 	beq	r5,zero,848d0 <_free_r+0x108>
   847cc:	defffd04 	addi	sp,sp,-12
   847d0:	dc400115 	stw	r17,4(sp)
   847d4:	dc000015 	stw	r16,0(sp)
   847d8:	2023883a 	mov	r17,r4
   847dc:	2821883a 	mov	r16,r5
   847e0:	dfc00215 	stw	ra,8(sp)
   847e4:	008d15c0 	call	8d15c <__malloc_lock>
   847e8:	81ffff17 	ldw	r7,-4(r16)
   847ec:	00bfff84 	movi	r2,-2
   847f0:	01000274 	movhi	r4,9
   847f4:	81bffe04 	addi	r6,r16,-8
   847f8:	3884703a 	and	r2,r7,r2
   847fc:	21003104 	addi	r4,r4,196
   84800:	308b883a 	add	r5,r6,r2
   84804:	2a400117 	ldw	r9,4(r5)
   84808:	22000217 	ldw	r8,8(r4)
   8480c:	00ffff04 	movi	r3,-4
   84810:	48c6703a 	and	r3,r9,r3
   84814:	2a005726 	beq	r5,r8,84974 <_free_r+0x1ac>
   84818:	28c00115 	stw	r3,4(r5)
   8481c:	39c0004c 	andi	r7,r7,1
   84820:	3800091e 	bne	r7,zero,84848 <_free_r+0x80>
   84824:	823ffe17 	ldw	r8,-8(r16)
   84828:	22400204 	addi	r9,r4,8
   8482c:	320dc83a 	sub	r6,r6,r8
   84830:	31c00217 	ldw	r7,8(r6)
   84834:	1205883a 	add	r2,r2,r8
   84838:	3a406526 	beq	r7,r9,849d0 <_free_r+0x208>
   8483c:	32000317 	ldw	r8,12(r6)
   84840:	3a000315 	stw	r8,12(r7)
   84844:	41c00215 	stw	r7,8(r8)
   84848:	28cf883a 	add	r7,r5,r3
   8484c:	39c00117 	ldw	r7,4(r7)
   84850:	39c0004c 	andi	r7,r7,1
   84854:	38003a26 	beq	r7,zero,84940 <_free_r+0x178>
   84858:	10c00054 	ori	r3,r2,1
   8485c:	30c00115 	stw	r3,4(r6)
   84860:	3087883a 	add	r3,r6,r2
   84864:	18800015 	stw	r2,0(r3)
   84868:	00c07fc4 	movi	r3,511
   8486c:	18801936 	bltu	r3,r2,848d4 <_free_r+0x10c>
   84870:	1004d0fa 	srli	r2,r2,3
   84874:	01c00044 	movi	r7,1
   84878:	21400117 	ldw	r5,4(r4)
   8487c:	10c00044 	addi	r3,r2,1
   84880:	18c7883a 	add	r3,r3,r3
   84884:	1005d0ba 	srai	r2,r2,2
   84888:	18c7883a 	add	r3,r3,r3
   8488c:	18c7883a 	add	r3,r3,r3
   84890:	1907883a 	add	r3,r3,r4
   84894:	3884983a 	sll	r2,r7,r2
   84898:	19c00017 	ldw	r7,0(r3)
   8489c:	1a3ffe04 	addi	r8,r3,-8
   848a0:	1144b03a 	or	r2,r2,r5
   848a4:	32000315 	stw	r8,12(r6)
   848a8:	31c00215 	stw	r7,8(r6)
   848ac:	20800115 	stw	r2,4(r4)
   848b0:	19800015 	stw	r6,0(r3)
   848b4:	39800315 	stw	r6,12(r7)
   848b8:	8809883a 	mov	r4,r17
   848bc:	dfc00217 	ldw	ra,8(sp)
   848c0:	dc400117 	ldw	r17,4(sp)
   848c4:	dc000017 	ldw	r16,0(sp)
   848c8:	dec00304 	addi	sp,sp,12
   848cc:	008d1801 	jmpi	8d180 <__malloc_unlock>
   848d0:	f800283a 	ret
   848d4:	100ad27a 	srli	r5,r2,9
   848d8:	00c00104 	movi	r3,4
   848dc:	19404a36 	bltu	r3,r5,84a08 <_free_r+0x240>
   848e0:	100ad1ba 	srli	r5,r2,6
   848e4:	28c00e44 	addi	r3,r5,57
   848e8:	18c7883a 	add	r3,r3,r3
   848ec:	29400e04 	addi	r5,r5,56
   848f0:	18c7883a 	add	r3,r3,r3
   848f4:	18c7883a 	add	r3,r3,r3
   848f8:	1909883a 	add	r4,r3,r4
   848fc:	20c00017 	ldw	r3,0(r4)
   84900:	01c00274 	movhi	r7,9
   84904:	213ffe04 	addi	r4,r4,-8
   84908:	39c03104 	addi	r7,r7,196
   8490c:	20c04426 	beq	r4,r3,84a20 <_free_r+0x258>
   84910:	01ffff04 	movi	r7,-4
   84914:	19400117 	ldw	r5,4(r3)
   84918:	29ca703a 	and	r5,r5,r7
   8491c:	1140022e 	bgeu	r2,r5,84928 <_free_r+0x160>
   84920:	18c00217 	ldw	r3,8(r3)
   84924:	20fffb1e 	bne	r4,r3,84914 <_free_r+0x14c>
   84928:	19000317 	ldw	r4,12(r3)
   8492c:	31000315 	stw	r4,12(r6)
   84930:	30c00215 	stw	r3,8(r6)
   84934:	21800215 	stw	r6,8(r4)
   84938:	19800315 	stw	r6,12(r3)
   8493c:	003fde06 	br	848b8 <_free_r+0xf0>
   84940:	29c00217 	ldw	r7,8(r5)
   84944:	10c5883a 	add	r2,r2,r3
   84948:	00c00274 	movhi	r3,9
   8494c:	18c03304 	addi	r3,r3,204
   84950:	38c03b26 	beq	r7,r3,84a40 <_free_r+0x278>
   84954:	2a000317 	ldw	r8,12(r5)
   84958:	11400054 	ori	r5,r2,1
   8495c:	3087883a 	add	r3,r6,r2
   84960:	3a000315 	stw	r8,12(r7)
   84964:	41c00215 	stw	r7,8(r8)
   84968:	31400115 	stw	r5,4(r6)
   8496c:	18800015 	stw	r2,0(r3)
   84970:	003fbd06 	br	84868 <_free_r+0xa0>
   84974:	39c0004c 	andi	r7,r7,1
   84978:	10c5883a 	add	r2,r2,r3
   8497c:	3800071e 	bne	r7,zero,8499c <_free_r+0x1d4>
   84980:	81fffe17 	ldw	r7,-8(r16)
   84984:	31cdc83a 	sub	r6,r6,r7
   84988:	30c00317 	ldw	r3,12(r6)
   8498c:	31400217 	ldw	r5,8(r6)
   84990:	11c5883a 	add	r2,r2,r7
   84994:	28c00315 	stw	r3,12(r5)
   84998:	19400215 	stw	r5,8(r3)
   8499c:	10c00054 	ori	r3,r2,1
   849a0:	30c00115 	stw	r3,4(r6)
   849a4:	00c00274 	movhi	r3,9
   849a8:	18c5b904 	addi	r3,r3,5860
   849ac:	18c00017 	ldw	r3,0(r3)
   849b0:	21800215 	stw	r6,8(r4)
   849b4:	10ffc036 	bltu	r2,r3,848b8 <_free_r+0xf0>
   849b8:	00800274 	movhi	r2,9
   849bc:	108c8504 	addi	r2,r2,12820
   849c0:	11400017 	ldw	r5,0(r2)
   849c4:	8809883a 	mov	r4,r17
   849c8:	00846a40 	call	846a4 <_malloc_trim_r>
   849cc:	003fba06 	br	848b8 <_free_r+0xf0>
   849d0:	28c9883a 	add	r4,r5,r3
   849d4:	21000117 	ldw	r4,4(r4)
   849d8:	2100004c 	andi	r4,r4,1
   849dc:	2000391e 	bne	r4,zero,84ac4 <_free_r+0x2fc>
   849e0:	29c00217 	ldw	r7,8(r5)
   849e4:	29000317 	ldw	r4,12(r5)
   849e8:	1885883a 	add	r2,r3,r2
   849ec:	10c00054 	ori	r3,r2,1
   849f0:	39000315 	stw	r4,12(r7)
   849f4:	21c00215 	stw	r7,8(r4)
   849f8:	30c00115 	stw	r3,4(r6)
   849fc:	308d883a 	add	r6,r6,r2
   84a00:	30800015 	stw	r2,0(r6)
   84a04:	003fac06 	br	848b8 <_free_r+0xf0>
   84a08:	00c00504 	movi	r3,20
   84a0c:	19401536 	bltu	r3,r5,84a64 <_free_r+0x29c>
   84a10:	28c01704 	addi	r3,r5,92
   84a14:	18c7883a 	add	r3,r3,r3
   84a18:	294016c4 	addi	r5,r5,91
   84a1c:	003fb406 	br	848f0 <_free_r+0x128>
   84a20:	280bd0ba 	srai	r5,r5,2
   84a24:	00c00044 	movi	r3,1
   84a28:	38800117 	ldw	r2,4(r7)
   84a2c:	194a983a 	sll	r5,r3,r5
   84a30:	2007883a 	mov	r3,r4
   84a34:	2884b03a 	or	r2,r5,r2
   84a38:	38800115 	stw	r2,4(r7)
   84a3c:	003fbb06 	br	8492c <_free_r+0x164>
   84a40:	21800515 	stw	r6,20(r4)
   84a44:	21800415 	stw	r6,16(r4)
   84a48:	10c00054 	ori	r3,r2,1
   84a4c:	31c00315 	stw	r7,12(r6)
   84a50:	31c00215 	stw	r7,8(r6)
   84a54:	30c00115 	stw	r3,4(r6)
   84a58:	308d883a 	add	r6,r6,r2
   84a5c:	30800015 	stw	r2,0(r6)
   84a60:	003f9506 	br	848b8 <_free_r+0xf0>
   84a64:	00c01504 	movi	r3,84
   84a68:	19400536 	bltu	r3,r5,84a80 <_free_r+0x2b8>
   84a6c:	100ad33a 	srli	r5,r2,12
   84a70:	28c01bc4 	addi	r3,r5,111
   84a74:	18c7883a 	add	r3,r3,r3
   84a78:	29401b84 	addi	r5,r5,110
   84a7c:	003f9c06 	br	848f0 <_free_r+0x128>
   84a80:	00c05504 	movi	r3,340
   84a84:	19400536 	bltu	r3,r5,84a9c <_free_r+0x2d4>
   84a88:	100ad3fa 	srli	r5,r2,15
   84a8c:	28c01e04 	addi	r3,r5,120
   84a90:	18c7883a 	add	r3,r3,r3
   84a94:	29401dc4 	addi	r5,r5,119
   84a98:	003f9506 	br	848f0 <_free_r+0x128>
   84a9c:	00c15504 	movi	r3,1364
   84aa0:	19400536 	bltu	r3,r5,84ab8 <_free_r+0x2f0>
   84aa4:	100ad4ba 	srli	r5,r2,18
   84aa8:	28c01f44 	addi	r3,r5,125
   84aac:	18c7883a 	add	r3,r3,r3
   84ab0:	29401f04 	addi	r5,r5,124
   84ab4:	003f8e06 	br	848f0 <_free_r+0x128>
   84ab8:	00c03f84 	movi	r3,254
   84abc:	01401f84 	movi	r5,126
   84ac0:	003f8b06 	br	848f0 <_free_r+0x128>
   84ac4:	10c00054 	ori	r3,r2,1
   84ac8:	30c00115 	stw	r3,4(r6)
   84acc:	308d883a 	add	r6,r6,r2
   84ad0:	30800015 	stw	r2,0(r6)
   84ad4:	003f7806 	br	848b8 <_free_r+0xf0>

00084ad8 <_fwalk>:
   84ad8:	defff704 	addi	sp,sp,-36
   84adc:	dd000415 	stw	r20,16(sp)
   84ae0:	dfc00815 	stw	ra,32(sp)
   84ae4:	ddc00715 	stw	r23,28(sp)
   84ae8:	dd800615 	stw	r22,24(sp)
   84aec:	dd400515 	stw	r21,20(sp)
   84af0:	dcc00315 	stw	r19,12(sp)
   84af4:	dc800215 	stw	r18,8(sp)
   84af8:	dc400115 	stw	r17,4(sp)
   84afc:	dc000015 	stw	r16,0(sp)
   84b00:	2500b804 	addi	r20,r4,736
   84b04:	a0002326 	beq	r20,zero,84b94 <_fwalk+0xbc>
   84b08:	282b883a 	mov	r21,r5
   84b0c:	002f883a 	mov	r23,zero
   84b10:	05800044 	movi	r22,1
   84b14:	04ffffc4 	movi	r19,-1
   84b18:	a4400117 	ldw	r17,4(r20)
   84b1c:	a4800217 	ldw	r18,8(r20)
   84b20:	8c7fffc4 	addi	r17,r17,-1
   84b24:	88000d16 	blt	r17,zero,84b5c <_fwalk+0x84>
   84b28:	94000304 	addi	r16,r18,12
   84b2c:	94800384 	addi	r18,r18,14
   84b30:	8080000b 	ldhu	r2,0(r16)
   84b34:	8c7fffc4 	addi	r17,r17,-1
   84b38:	813ffd04 	addi	r4,r16,-12
   84b3c:	b080042e 	bgeu	r22,r2,84b50 <_fwalk+0x78>
   84b40:	9080000f 	ldh	r2,0(r18)
   84b44:	14c00226 	beq	r2,r19,84b50 <_fwalk+0x78>
   84b48:	a83ee83a 	callr	r21
   84b4c:	b8aeb03a 	or	r23,r23,r2
   84b50:	84001a04 	addi	r16,r16,104
   84b54:	94801a04 	addi	r18,r18,104
   84b58:	8cfff51e 	bne	r17,r19,84b30 <_fwalk+0x58>
   84b5c:	a5000017 	ldw	r20,0(r20)
   84b60:	a03fed1e 	bne	r20,zero,84b18 <_fwalk+0x40>
   84b64:	b805883a 	mov	r2,r23
   84b68:	dfc00817 	ldw	ra,32(sp)
   84b6c:	ddc00717 	ldw	r23,28(sp)
   84b70:	dd800617 	ldw	r22,24(sp)
   84b74:	dd400517 	ldw	r21,20(sp)
   84b78:	dd000417 	ldw	r20,16(sp)
   84b7c:	dcc00317 	ldw	r19,12(sp)
   84b80:	dc800217 	ldw	r18,8(sp)
   84b84:	dc400117 	ldw	r17,4(sp)
   84b88:	dc000017 	ldw	r16,0(sp)
   84b8c:	dec00904 	addi	sp,sp,36
   84b90:	f800283a 	ret
   84b94:	002f883a 	mov	r23,zero
   84b98:	003ff206 	br	84b64 <_fwalk+0x8c>

00084b9c <_fwalk_reent>:
   84b9c:	defff704 	addi	sp,sp,-36
   84ba0:	dd000415 	stw	r20,16(sp)
   84ba4:	dfc00815 	stw	ra,32(sp)
   84ba8:	ddc00715 	stw	r23,28(sp)
   84bac:	dd800615 	stw	r22,24(sp)
   84bb0:	dd400515 	stw	r21,20(sp)
   84bb4:	dcc00315 	stw	r19,12(sp)
   84bb8:	dc800215 	stw	r18,8(sp)
   84bbc:	dc400115 	stw	r17,4(sp)
   84bc0:	dc000015 	stw	r16,0(sp)
   84bc4:	2500b804 	addi	r20,r4,736
   84bc8:	a0002326 	beq	r20,zero,84c58 <_fwalk_reent+0xbc>
   84bcc:	282b883a 	mov	r21,r5
   84bd0:	2027883a 	mov	r19,r4
   84bd4:	002f883a 	mov	r23,zero
   84bd8:	05800044 	movi	r22,1
   84bdc:	04bfffc4 	movi	r18,-1
   84be0:	a4400117 	ldw	r17,4(r20)
   84be4:	a4000217 	ldw	r16,8(r20)
   84be8:	8c7fffc4 	addi	r17,r17,-1
   84bec:	88000c16 	blt	r17,zero,84c20 <_fwalk_reent+0x84>
   84bf0:	84000304 	addi	r16,r16,12
   84bf4:	8080000b 	ldhu	r2,0(r16)
   84bf8:	8c7fffc4 	addi	r17,r17,-1
   84bfc:	817ffd04 	addi	r5,r16,-12
   84c00:	b080052e 	bgeu	r22,r2,84c18 <_fwalk_reent+0x7c>
   84c04:	8080008f 	ldh	r2,2(r16)
   84c08:	9809883a 	mov	r4,r19
   84c0c:	14800226 	beq	r2,r18,84c18 <_fwalk_reent+0x7c>
   84c10:	a83ee83a 	callr	r21
   84c14:	b8aeb03a 	or	r23,r23,r2
   84c18:	84001a04 	addi	r16,r16,104
   84c1c:	8cbff51e 	bne	r17,r18,84bf4 <_fwalk_reent+0x58>
   84c20:	a5000017 	ldw	r20,0(r20)
   84c24:	a03fee1e 	bne	r20,zero,84be0 <_fwalk_reent+0x44>
   84c28:	b805883a 	mov	r2,r23
   84c2c:	dfc00817 	ldw	ra,32(sp)
   84c30:	ddc00717 	ldw	r23,28(sp)
   84c34:	dd800617 	ldw	r22,24(sp)
   84c38:	dd400517 	ldw	r21,20(sp)
   84c3c:	dd000417 	ldw	r20,16(sp)
   84c40:	dcc00317 	ldw	r19,12(sp)
   84c44:	dc800217 	ldw	r18,8(sp)
   84c48:	dc400117 	ldw	r17,4(sp)
   84c4c:	dc000017 	ldw	r16,0(sp)
   84c50:	dec00904 	addi	sp,sp,36
   84c54:	f800283a 	ret
   84c58:	002f883a 	mov	r23,zero
   84c5c:	003ff206 	br	84c28 <_fwalk_reent+0x8c>

00084c60 <_setlocale_r>:
   84c60:	30001b26 	beq	r6,zero,84cd0 <_setlocale_r+0x70>
   84c64:	01400274 	movhi	r5,9
   84c68:	defffe04 	addi	sp,sp,-8
   84c6c:	297e6b04 	addi	r5,r5,-1620
   84c70:	3009883a 	mov	r4,r6
   84c74:	dc000015 	stw	r16,0(sp)
   84c78:	dfc00115 	stw	ra,4(sp)
   84c7c:	3021883a 	mov	r16,r6
   84c80:	0086c580 	call	86c58 <strcmp>
   84c84:	1000061e 	bne	r2,zero,84ca0 <_setlocale_r+0x40>
   84c88:	00800274 	movhi	r2,9
   84c8c:	10be6a04 	addi	r2,r2,-1624
   84c90:	dfc00117 	ldw	ra,4(sp)
   84c94:	dc000017 	ldw	r16,0(sp)
   84c98:	dec00204 	addi	sp,sp,8
   84c9c:	f800283a 	ret
   84ca0:	01400274 	movhi	r5,9
   84ca4:	297e6a04 	addi	r5,r5,-1624
   84ca8:	8009883a 	mov	r4,r16
   84cac:	0086c580 	call	86c58 <strcmp>
   84cb0:	103ff526 	beq	r2,zero,84c88 <_setlocale_r+0x28>
   84cb4:	01400274 	movhi	r5,9
   84cb8:	297e5504 	addi	r5,r5,-1708
   84cbc:	8009883a 	mov	r4,r16
   84cc0:	0086c580 	call	86c58 <strcmp>
   84cc4:	103ff026 	beq	r2,zero,84c88 <_setlocale_r+0x28>
   84cc8:	0005883a 	mov	r2,zero
   84ccc:	003ff006 	br	84c90 <_setlocale_r+0x30>
   84cd0:	00800274 	movhi	r2,9
   84cd4:	10be6a04 	addi	r2,r2,-1624
   84cd8:	f800283a 	ret

00084cdc <__locale_charset>:
   84cdc:	00800274 	movhi	r2,9
   84ce0:	10801b04 	addi	r2,r2,108
   84ce4:	f800283a 	ret

00084ce8 <__locale_mb_cur_max>:
   84ce8:	00800274 	movhi	r2,9
   84cec:	1085b704 	addi	r2,r2,5852
   84cf0:	10800017 	ldw	r2,0(r2)
   84cf4:	f800283a 	ret

00084cf8 <__locale_msgcharset>:
   84cf8:	00800274 	movhi	r2,9
   84cfc:	10801304 	addi	r2,r2,76
   84d00:	f800283a 	ret

00084d04 <__locale_cjk_lang>:
   84d04:	0005883a 	mov	r2,zero
   84d08:	f800283a 	ret

00084d0c <_localeconv_r>:
   84d0c:	00800274 	movhi	r2,9
   84d10:	10802304 	addi	r2,r2,140
   84d14:	f800283a 	ret

00084d18 <setlocale>:
   84d18:	00800274 	movhi	r2,9
   84d1c:	1085b604 	addi	r2,r2,5848
   84d20:	280d883a 	mov	r6,r5
   84d24:	200b883a 	mov	r5,r4
   84d28:	11000017 	ldw	r4,0(r2)
   84d2c:	0084c601 	jmpi	84c60 <_setlocale_r>

00084d30 <localeconv>:
   84d30:	00800274 	movhi	r2,9
   84d34:	10802304 	addi	r2,r2,140
   84d38:	f800283a 	ret

00084d3c <__smakebuf_r>:
   84d3c:	2880030b 	ldhu	r2,12(r5)
   84d40:	10c0008c 	andi	r3,r2,2
   84d44:	1800411e 	bne	r3,zero,84e4c <__smakebuf_r+0x110>
   84d48:	deffec04 	addi	sp,sp,-80
   84d4c:	dc000f15 	stw	r16,60(sp)
   84d50:	2821883a 	mov	r16,r5
   84d54:	2940038f 	ldh	r5,14(r5)
   84d58:	dc401015 	stw	r17,64(sp)
   84d5c:	dfc01315 	stw	ra,76(sp)
   84d60:	dcc01215 	stw	r19,72(sp)
   84d64:	dc801115 	stw	r18,68(sp)
   84d68:	2023883a 	mov	r17,r4
   84d6c:	28001c16 	blt	r5,zero,84de0 <__smakebuf_r+0xa4>
   84d70:	d80d883a 	mov	r6,sp
   84d74:	00888980 	call	88898 <_fstat_r>
   84d78:	10001816 	blt	r2,zero,84ddc <__smakebuf_r+0xa0>
   84d7c:	d8800117 	ldw	r2,4(sp)
   84d80:	00e00014 	movui	r3,32768
   84d84:	10bc000c 	andi	r2,r2,61440
   84d88:	14c80020 	cmpeqi	r19,r2,8192
   84d8c:	10c03726 	beq	r2,r3,84e6c <__smakebuf_r+0x130>
   84d90:	80c0030b 	ldhu	r3,12(r16)
   84d94:	18c20014 	ori	r3,r3,2048
   84d98:	80c0030d 	sth	r3,12(r16)
   84d9c:	00c80004 	movi	r3,8192
   84da0:	10c0521e 	bne	r2,r3,84eec <__smakebuf_r+0x1b0>
   84da4:	8140038f 	ldh	r5,14(r16)
   84da8:	8809883a 	mov	r4,r17
   84dac:	0088db00 	call	88db0 <_isatty_r>
   84db0:	10004c26 	beq	r2,zero,84ee4 <__smakebuf_r+0x1a8>
   84db4:	8080030b 	ldhu	r2,12(r16)
   84db8:	80c010c4 	addi	r3,r16,67
   84dbc:	80c00015 	stw	r3,0(r16)
   84dc0:	10800054 	ori	r2,r2,1
   84dc4:	8080030d 	sth	r2,12(r16)
   84dc8:	00800044 	movi	r2,1
   84dcc:	80c00415 	stw	r3,16(r16)
   84dd0:	80800515 	stw	r2,20(r16)
   84dd4:	04810004 	movi	r18,1024
   84dd8:	00000706 	br	84df8 <__smakebuf_r+0xbc>
   84ddc:	8080030b 	ldhu	r2,12(r16)
   84de0:	10c0200c 	andi	r3,r2,128
   84de4:	18001f1e 	bne	r3,zero,84e64 <__smakebuf_r+0x128>
   84de8:	04810004 	movi	r18,1024
   84dec:	10820014 	ori	r2,r2,2048
   84df0:	8080030d 	sth	r2,12(r16)
   84df4:	0027883a 	mov	r19,zero
   84df8:	900b883a 	mov	r5,r18
   84dfc:	8809883a 	mov	r4,r17
   84e00:	0084ef80 	call	84ef8 <_malloc_r>
   84e04:	10002c26 	beq	r2,zero,84eb8 <__smakebuf_r+0x17c>
   84e08:	80c0030b 	ldhu	r3,12(r16)
   84e0c:	01000234 	movhi	r4,8
   84e10:	2110c304 	addi	r4,r4,17164
   84e14:	89000f15 	stw	r4,60(r17)
   84e18:	18c02014 	ori	r3,r3,128
   84e1c:	80c0030d 	sth	r3,12(r16)
   84e20:	80800015 	stw	r2,0(r16)
   84e24:	80800415 	stw	r2,16(r16)
   84e28:	84800515 	stw	r18,20(r16)
   84e2c:	98001a1e 	bne	r19,zero,84e98 <__smakebuf_r+0x15c>
   84e30:	dfc01317 	ldw	ra,76(sp)
   84e34:	dcc01217 	ldw	r19,72(sp)
   84e38:	dc801117 	ldw	r18,68(sp)
   84e3c:	dc401017 	ldw	r17,64(sp)
   84e40:	dc000f17 	ldw	r16,60(sp)
   84e44:	dec01404 	addi	sp,sp,80
   84e48:	f800283a 	ret
   84e4c:	288010c4 	addi	r2,r5,67
   84e50:	28800015 	stw	r2,0(r5)
   84e54:	28800415 	stw	r2,16(r5)
   84e58:	00800044 	movi	r2,1
   84e5c:	28800515 	stw	r2,20(r5)
   84e60:	f800283a 	ret
   84e64:	04801004 	movi	r18,64
   84e68:	003fe006 	br	84dec <__smakebuf_r+0xb0>
   84e6c:	81000a17 	ldw	r4,40(r16)
   84e70:	00c00234 	movhi	r3,8
   84e74:	18dafd04 	addi	r3,r3,27636
   84e78:	20ffc51e 	bne	r4,r3,84d90 <__smakebuf_r+0x54>
   84e7c:	8080030b 	ldhu	r2,12(r16)
   84e80:	04810004 	movi	r18,1024
   84e84:	84801315 	stw	r18,76(r16)
   84e88:	1484b03a 	or	r2,r2,r18
   84e8c:	8080030d 	sth	r2,12(r16)
   84e90:	0027883a 	mov	r19,zero
   84e94:	003fd806 	br	84df8 <__smakebuf_r+0xbc>
   84e98:	8140038f 	ldh	r5,14(r16)
   84e9c:	8809883a 	mov	r4,r17
   84ea0:	0088db00 	call	88db0 <_isatty_r>
   84ea4:	103fe226 	beq	r2,zero,84e30 <__smakebuf_r+0xf4>
   84ea8:	8080030b 	ldhu	r2,12(r16)
   84eac:	10800054 	ori	r2,r2,1
   84eb0:	8080030d 	sth	r2,12(r16)
   84eb4:	003fde06 	br	84e30 <__smakebuf_r+0xf4>
   84eb8:	8080030b 	ldhu	r2,12(r16)
   84ebc:	10c0800c 	andi	r3,r2,512
   84ec0:	183fdb1e 	bne	r3,zero,84e30 <__smakebuf_r+0xf4>
   84ec4:	10800094 	ori	r2,r2,2
   84ec8:	80c010c4 	addi	r3,r16,67
   84ecc:	8080030d 	sth	r2,12(r16)
   84ed0:	00800044 	movi	r2,1
   84ed4:	80c00015 	stw	r3,0(r16)
   84ed8:	80c00415 	stw	r3,16(r16)
   84edc:	80800515 	stw	r2,20(r16)
   84ee0:	003fd306 	br	84e30 <__smakebuf_r+0xf4>
   84ee4:	04810004 	movi	r18,1024
   84ee8:	003fc306 	br	84df8 <__smakebuf_r+0xbc>
   84eec:	0027883a 	mov	r19,zero
   84ef0:	04810004 	movi	r18,1024
   84ef4:	003fc006 	br	84df8 <__smakebuf_r+0xbc>

00084ef8 <_malloc_r>:
   84ef8:	defff504 	addi	sp,sp,-44
   84efc:	dc800315 	stw	r18,12(sp)
   84f00:	dfc00a15 	stw	ra,40(sp)
   84f04:	df000915 	stw	fp,36(sp)
   84f08:	ddc00815 	stw	r23,32(sp)
   84f0c:	dd800715 	stw	r22,28(sp)
   84f10:	dd400615 	stw	r21,24(sp)
   84f14:	dd000515 	stw	r20,20(sp)
   84f18:	dcc00415 	stw	r19,16(sp)
   84f1c:	dc400215 	stw	r17,8(sp)
   84f20:	dc000115 	stw	r16,4(sp)
   84f24:	288002c4 	addi	r2,r5,11
   84f28:	00c00584 	movi	r3,22
   84f2c:	2025883a 	mov	r18,r4
   84f30:	18807f2e 	bgeu	r3,r2,85130 <_malloc_r+0x238>
   84f34:	047ffe04 	movi	r17,-8
   84f38:	1462703a 	and	r17,r2,r17
   84f3c:	8800a316 	blt	r17,zero,851cc <_malloc_r+0x2d4>
   84f40:	8940a236 	bltu	r17,r5,851cc <_malloc_r+0x2d4>
   84f44:	008d15c0 	call	8d15c <__malloc_lock>
   84f48:	00807dc4 	movi	r2,503
   84f4c:	1441e92e 	bgeu	r2,r17,856f4 <_malloc_r+0x7fc>
   84f50:	8804d27a 	srli	r2,r17,9
   84f54:	1000a126 	beq	r2,zero,851dc <_malloc_r+0x2e4>
   84f58:	00c00104 	movi	r3,4
   84f5c:	18811e36 	bltu	r3,r2,853d8 <_malloc_r+0x4e0>
   84f60:	8804d1ba 	srli	r2,r17,6
   84f64:	12000e44 	addi	r8,r2,57
   84f68:	11c00e04 	addi	r7,r2,56
   84f6c:	4209883a 	add	r4,r8,r8
   84f70:	04c00274 	movhi	r19,9
   84f74:	2109883a 	add	r4,r4,r4
   84f78:	9cc03104 	addi	r19,r19,196
   84f7c:	2109883a 	add	r4,r4,r4
   84f80:	9909883a 	add	r4,r19,r4
   84f84:	24000117 	ldw	r16,4(r4)
   84f88:	213ffe04 	addi	r4,r4,-8
   84f8c:	24009726 	beq	r4,r16,851ec <_malloc_r+0x2f4>
   84f90:	80800117 	ldw	r2,4(r16)
   84f94:	01bfff04 	movi	r6,-4
   84f98:	014003c4 	movi	r5,15
   84f9c:	1184703a 	and	r2,r2,r6
   84fa0:	1447c83a 	sub	r3,r2,r17
   84fa4:	28c00716 	blt	r5,r3,84fc4 <_malloc_r+0xcc>
   84fa8:	1800920e 	bge	r3,zero,851f4 <_malloc_r+0x2fc>
   84fac:	84000317 	ldw	r16,12(r16)
   84fb0:	24008e26 	beq	r4,r16,851ec <_malloc_r+0x2f4>
   84fb4:	80800117 	ldw	r2,4(r16)
   84fb8:	1184703a 	and	r2,r2,r6
   84fbc:	1447c83a 	sub	r3,r2,r17
   84fc0:	28fff90e 	bge	r5,r3,84fa8 <_malloc_r+0xb0>
   84fc4:	3809883a 	mov	r4,r7
   84fc8:	01800274 	movhi	r6,9
   84fcc:	9c000417 	ldw	r16,16(r19)
   84fd0:	31803104 	addi	r6,r6,196
   84fd4:	32000204 	addi	r8,r6,8
   84fd8:	82013426 	beq	r16,r8,854ac <_malloc_r+0x5b4>
   84fdc:	80c00117 	ldw	r3,4(r16)
   84fe0:	00bfff04 	movi	r2,-4
   84fe4:	188e703a 	and	r7,r3,r2
   84fe8:	3c45c83a 	sub	r2,r7,r17
   84fec:	00c003c4 	movi	r3,15
   84ff0:	18811f16 	blt	r3,r2,85470 <_malloc_r+0x578>
   84ff4:	32000515 	stw	r8,20(r6)
   84ff8:	32000415 	stw	r8,16(r6)
   84ffc:	10007f0e 	bge	r2,zero,851fc <_malloc_r+0x304>
   85000:	00807fc4 	movi	r2,511
   85004:	11c0fd36 	bltu	r2,r7,853fc <_malloc_r+0x504>
   85008:	3806d0fa 	srli	r3,r7,3
   8500c:	01c00044 	movi	r7,1
   85010:	30800117 	ldw	r2,4(r6)
   85014:	19400044 	addi	r5,r3,1
   85018:	294b883a 	add	r5,r5,r5
   8501c:	1807d0ba 	srai	r3,r3,2
   85020:	294b883a 	add	r5,r5,r5
   85024:	294b883a 	add	r5,r5,r5
   85028:	298b883a 	add	r5,r5,r6
   8502c:	38c6983a 	sll	r3,r7,r3
   85030:	29c00017 	ldw	r7,0(r5)
   85034:	2a7ffe04 	addi	r9,r5,-8
   85038:	1886b03a 	or	r3,r3,r2
   8503c:	82400315 	stw	r9,12(r16)
   85040:	81c00215 	stw	r7,8(r16)
   85044:	30c00115 	stw	r3,4(r6)
   85048:	2c000015 	stw	r16,0(r5)
   8504c:	3c000315 	stw	r16,12(r7)
   85050:	2005d0ba 	srai	r2,r4,2
   85054:	01400044 	movi	r5,1
   85058:	288a983a 	sll	r5,r5,r2
   8505c:	19406f36 	bltu	r3,r5,8521c <_malloc_r+0x324>
   85060:	28c4703a 	and	r2,r5,r3
   85064:	10000a1e 	bne	r2,zero,85090 <_malloc_r+0x198>
   85068:	00bfff04 	movi	r2,-4
   8506c:	294b883a 	add	r5,r5,r5
   85070:	2088703a 	and	r4,r4,r2
   85074:	28c4703a 	and	r2,r5,r3
   85078:	21000104 	addi	r4,r4,4
   8507c:	1000041e 	bne	r2,zero,85090 <_malloc_r+0x198>
   85080:	294b883a 	add	r5,r5,r5
   85084:	28c4703a 	and	r2,r5,r3
   85088:	21000104 	addi	r4,r4,4
   8508c:	103ffc26 	beq	r2,zero,85080 <_malloc_r+0x188>
   85090:	02bfff04 	movi	r10,-4
   85094:	024003c4 	movi	r9,15
   85098:	21800044 	addi	r6,r4,1
   8509c:	318d883a 	add	r6,r6,r6
   850a0:	318d883a 	add	r6,r6,r6
   850a4:	318d883a 	add	r6,r6,r6
   850a8:	998d883a 	add	r6,r19,r6
   850ac:	333ffe04 	addi	r12,r6,-8
   850b0:	2017883a 	mov	r11,r4
   850b4:	31800104 	addi	r6,r6,4
   850b8:	34000017 	ldw	r16,0(r6)
   850bc:	31fffd04 	addi	r7,r6,-12
   850c0:	81c0041e 	bne	r16,r7,850d4 <_malloc_r+0x1dc>
   850c4:	0000fb06 	br	854b4 <_malloc_r+0x5bc>
   850c8:	1801030e 	bge	r3,zero,854d8 <_malloc_r+0x5e0>
   850cc:	84000317 	ldw	r16,12(r16)
   850d0:	81c0f826 	beq	r16,r7,854b4 <_malloc_r+0x5bc>
   850d4:	80800117 	ldw	r2,4(r16)
   850d8:	1284703a 	and	r2,r2,r10
   850dc:	1447c83a 	sub	r3,r2,r17
   850e0:	48fff90e 	bge	r9,r3,850c8 <_malloc_r+0x1d0>
   850e4:	80800317 	ldw	r2,12(r16)
   850e8:	81000217 	ldw	r4,8(r16)
   850ec:	89400054 	ori	r5,r17,1
   850f0:	81400115 	stw	r5,4(r16)
   850f4:	20800315 	stw	r2,12(r4)
   850f8:	11000215 	stw	r4,8(r2)
   850fc:	8463883a 	add	r17,r16,r17
   85100:	9c400515 	stw	r17,20(r19)
   85104:	9c400415 	stw	r17,16(r19)
   85108:	18800054 	ori	r2,r3,1
   8510c:	88800115 	stw	r2,4(r17)
   85110:	8a000315 	stw	r8,12(r17)
   85114:	8a000215 	stw	r8,8(r17)
   85118:	88e3883a 	add	r17,r17,r3
   8511c:	88c00015 	stw	r3,0(r17)
   85120:	9009883a 	mov	r4,r18
   85124:	008d1800 	call	8d180 <__malloc_unlock>
   85128:	80800204 	addi	r2,r16,8
   8512c:	00001b06 	br	8519c <_malloc_r+0x2a4>
   85130:	04400404 	movi	r17,16
   85134:	89402536 	bltu	r17,r5,851cc <_malloc_r+0x2d4>
   85138:	008d15c0 	call	8d15c <__malloc_lock>
   8513c:	00800184 	movi	r2,6
   85140:	01000084 	movi	r4,2
   85144:	04c00274 	movhi	r19,9
   85148:	1085883a 	add	r2,r2,r2
   8514c:	9cc03104 	addi	r19,r19,196
   85150:	1085883a 	add	r2,r2,r2
   85154:	9885883a 	add	r2,r19,r2
   85158:	14000117 	ldw	r16,4(r2)
   8515c:	10fffe04 	addi	r3,r2,-8
   85160:	80c0d926 	beq	r16,r3,854c8 <_malloc_r+0x5d0>
   85164:	80c00117 	ldw	r3,4(r16)
   85168:	81000317 	ldw	r4,12(r16)
   8516c:	00bfff04 	movi	r2,-4
   85170:	1884703a 	and	r2,r3,r2
   85174:	81400217 	ldw	r5,8(r16)
   85178:	8085883a 	add	r2,r16,r2
   8517c:	10c00117 	ldw	r3,4(r2)
   85180:	29000315 	stw	r4,12(r5)
   85184:	21400215 	stw	r5,8(r4)
   85188:	18c00054 	ori	r3,r3,1
   8518c:	10c00115 	stw	r3,4(r2)
   85190:	9009883a 	mov	r4,r18
   85194:	008d1800 	call	8d180 <__malloc_unlock>
   85198:	80800204 	addi	r2,r16,8
   8519c:	dfc00a17 	ldw	ra,40(sp)
   851a0:	df000917 	ldw	fp,36(sp)
   851a4:	ddc00817 	ldw	r23,32(sp)
   851a8:	dd800717 	ldw	r22,28(sp)
   851ac:	dd400617 	ldw	r21,24(sp)
   851b0:	dd000517 	ldw	r20,20(sp)
   851b4:	dcc00417 	ldw	r19,16(sp)
   851b8:	dc800317 	ldw	r18,12(sp)
   851bc:	dc400217 	ldw	r17,8(sp)
   851c0:	dc000117 	ldw	r16,4(sp)
   851c4:	dec00b04 	addi	sp,sp,44
   851c8:	f800283a 	ret
   851cc:	00800304 	movi	r2,12
   851d0:	90800015 	stw	r2,0(r18)
   851d4:	0005883a 	mov	r2,zero
   851d8:	003ff006 	br	8519c <_malloc_r+0x2a4>
   851dc:	01002004 	movi	r4,128
   851e0:	02001004 	movi	r8,64
   851e4:	01c00fc4 	movi	r7,63
   851e8:	003f6106 	br	84f70 <_malloc_r+0x78>
   851ec:	4009883a 	mov	r4,r8
   851f0:	003f7506 	br	84fc8 <_malloc_r+0xd0>
   851f4:	81000317 	ldw	r4,12(r16)
   851f8:	003fde06 	br	85174 <_malloc_r+0x27c>
   851fc:	81c5883a 	add	r2,r16,r7
   85200:	11400117 	ldw	r5,4(r2)
   85204:	9009883a 	mov	r4,r18
   85208:	29400054 	ori	r5,r5,1
   8520c:	11400115 	stw	r5,4(r2)
   85210:	008d1800 	call	8d180 <__malloc_unlock>
   85214:	80800204 	addi	r2,r16,8
   85218:	003fe006 	br	8519c <_malloc_r+0x2a4>
   8521c:	9c000217 	ldw	r16,8(r19)
   85220:	00bfff04 	movi	r2,-4
   85224:	85800117 	ldw	r22,4(r16)
   85228:	b0ac703a 	and	r22,r22,r2
   8522c:	b4400336 	bltu	r22,r17,8523c <_malloc_r+0x344>
   85230:	b445c83a 	sub	r2,r22,r17
   85234:	00c003c4 	movi	r3,15
   85238:	18805d16 	blt	r3,r2,853b0 <_malloc_r+0x4b8>
   8523c:	05c00274 	movhi	r23,9
   85240:	00800274 	movhi	r2,9
   85244:	108c8504 	addi	r2,r2,12820
   85248:	bdc5b804 	addi	r23,r23,5856
   8524c:	15400017 	ldw	r21,0(r2)
   85250:	b8c00017 	ldw	r3,0(r23)
   85254:	00bfffc4 	movi	r2,-1
   85258:	858d883a 	add	r6,r16,r22
   8525c:	8d6b883a 	add	r21,r17,r21
   85260:	1880ea26 	beq	r3,r2,8560c <_malloc_r+0x714>
   85264:	ad4403c4 	addi	r21,r21,4111
   85268:	00bc0004 	movi	r2,-4096
   8526c:	a8aa703a 	and	r21,r21,r2
   85270:	a80b883a 	mov	r5,r21
   85274:	9009883a 	mov	r4,r18
   85278:	d9800015 	stw	r6,0(sp)
   8527c:	0086ac80 	call	86ac8 <_sbrk_r>
   85280:	1029883a 	mov	r20,r2
   85284:	00bfffc4 	movi	r2,-1
   85288:	d9800017 	ldw	r6,0(sp)
   8528c:	a080e826 	beq	r20,r2,85630 <_malloc_r+0x738>
   85290:	a180a636 	bltu	r20,r6,8552c <_malloc_r+0x634>
   85294:	07000274 	movhi	fp,9
   85298:	e70c8e04 	addi	fp,fp,12856
   8529c:	e0800017 	ldw	r2,0(fp)
   852a0:	a887883a 	add	r3,r21,r2
   852a4:	e0c00015 	stw	r3,0(fp)
   852a8:	3500e626 	beq	r6,r20,85644 <_malloc_r+0x74c>
   852ac:	b9000017 	ldw	r4,0(r23)
   852b0:	00bfffc4 	movi	r2,-1
   852b4:	2080ee26 	beq	r4,r2,85670 <_malloc_r+0x778>
   852b8:	a185c83a 	sub	r2,r20,r6
   852bc:	10c5883a 	add	r2,r2,r3
   852c0:	e0800015 	stw	r2,0(fp)
   852c4:	a0c001cc 	andi	r3,r20,7
   852c8:	1800bc26 	beq	r3,zero,855bc <_malloc_r+0x6c4>
   852cc:	a0e9c83a 	sub	r20,r20,r3
   852d0:	00840204 	movi	r2,4104
   852d4:	a5000204 	addi	r20,r20,8
   852d8:	10c7c83a 	sub	r3,r2,r3
   852dc:	a545883a 	add	r2,r20,r21
   852e0:	1083ffcc 	andi	r2,r2,4095
   852e4:	18abc83a 	sub	r21,r3,r2
   852e8:	a80b883a 	mov	r5,r21
   852ec:	9009883a 	mov	r4,r18
   852f0:	0086ac80 	call	86ac8 <_sbrk_r>
   852f4:	00ffffc4 	movi	r3,-1
   852f8:	10c0e126 	beq	r2,r3,85680 <_malloc_r+0x788>
   852fc:	1505c83a 	sub	r2,r2,r20
   85300:	1545883a 	add	r2,r2,r21
   85304:	10800054 	ori	r2,r2,1
   85308:	e0c00017 	ldw	r3,0(fp)
   8530c:	9d000215 	stw	r20,8(r19)
   85310:	a0800115 	stw	r2,4(r20)
   85314:	a8c7883a 	add	r3,r21,r3
   85318:	e0c00015 	stw	r3,0(fp)
   8531c:	84c00e26 	beq	r16,r19,85358 <_malloc_r+0x460>
   85320:	018003c4 	movi	r6,15
   85324:	3580a72e 	bgeu	r6,r22,855c4 <_malloc_r+0x6cc>
   85328:	81400117 	ldw	r5,4(r16)
   8532c:	013ffe04 	movi	r4,-8
   85330:	b0bffd04 	addi	r2,r22,-12
   85334:	1104703a 	and	r2,r2,r4
   85338:	2900004c 	andi	r4,r5,1
   8533c:	2088b03a 	or	r4,r4,r2
   85340:	81000115 	stw	r4,4(r16)
   85344:	01400144 	movi	r5,5
   85348:	8089883a 	add	r4,r16,r2
   8534c:	21400115 	stw	r5,4(r4)
   85350:	21400215 	stw	r5,8(r4)
   85354:	3080cd36 	bltu	r6,r2,8568c <_malloc_r+0x794>
   85358:	00800274 	movhi	r2,9
   8535c:	108c8404 	addi	r2,r2,12816
   85360:	11000017 	ldw	r4,0(r2)
   85364:	20c0012e 	bgeu	r4,r3,8536c <_malloc_r+0x474>
   85368:	10c00015 	stw	r3,0(r2)
   8536c:	00800274 	movhi	r2,9
   85370:	108c8304 	addi	r2,r2,12812
   85374:	11000017 	ldw	r4,0(r2)
   85378:	9c000217 	ldw	r16,8(r19)
   8537c:	20c0012e 	bgeu	r4,r3,85384 <_malloc_r+0x48c>
   85380:	10c00015 	stw	r3,0(r2)
   85384:	80c00117 	ldw	r3,4(r16)
   85388:	00bfff04 	movi	r2,-4
   8538c:	1886703a 	and	r3,r3,r2
   85390:	1c45c83a 	sub	r2,r3,r17
   85394:	1c400236 	bltu	r3,r17,853a0 <_malloc_r+0x4a8>
   85398:	00c003c4 	movi	r3,15
   8539c:	18800416 	blt	r3,r2,853b0 <_malloc_r+0x4b8>
   853a0:	9009883a 	mov	r4,r18
   853a4:	008d1800 	call	8d180 <__malloc_unlock>
   853a8:	0005883a 	mov	r2,zero
   853ac:	003f7b06 	br	8519c <_malloc_r+0x2a4>
   853b0:	88c00054 	ori	r3,r17,1
   853b4:	80c00115 	stw	r3,4(r16)
   853b8:	8463883a 	add	r17,r16,r17
   853bc:	10800054 	ori	r2,r2,1
   853c0:	9c400215 	stw	r17,8(r19)
   853c4:	88800115 	stw	r2,4(r17)
   853c8:	9009883a 	mov	r4,r18
   853cc:	008d1800 	call	8d180 <__malloc_unlock>
   853d0:	80800204 	addi	r2,r16,8
   853d4:	003f7106 	br	8519c <_malloc_r+0x2a4>
   853d8:	00c00504 	movi	r3,20
   853dc:	18804a2e 	bgeu	r3,r2,85508 <_malloc_r+0x610>
   853e0:	00c01504 	movi	r3,84
   853e4:	18806e36 	bltu	r3,r2,855a0 <_malloc_r+0x6a8>
   853e8:	8804d33a 	srli	r2,r17,12
   853ec:	12001bc4 	addi	r8,r2,111
   853f0:	11c01b84 	addi	r7,r2,110
   853f4:	4209883a 	add	r4,r8,r8
   853f8:	003edd06 	br	84f70 <_malloc_r+0x78>
   853fc:	3804d27a 	srli	r2,r7,9
   85400:	00c00104 	movi	r3,4
   85404:	1880442e 	bgeu	r3,r2,85518 <_malloc_r+0x620>
   85408:	00c00504 	movi	r3,20
   8540c:	18808136 	bltu	r3,r2,85614 <_malloc_r+0x71c>
   85410:	11401704 	addi	r5,r2,92
   85414:	10c016c4 	addi	r3,r2,91
   85418:	294b883a 	add	r5,r5,r5
   8541c:	294b883a 	add	r5,r5,r5
   85420:	294b883a 	add	r5,r5,r5
   85424:	994b883a 	add	r5,r19,r5
   85428:	28800017 	ldw	r2,0(r5)
   8542c:	01800274 	movhi	r6,9
   85430:	297ffe04 	addi	r5,r5,-8
   85434:	31803104 	addi	r6,r6,196
   85438:	28806526 	beq	r5,r2,855d0 <_malloc_r+0x6d8>
   8543c:	01bfff04 	movi	r6,-4
   85440:	10c00117 	ldw	r3,4(r2)
   85444:	1986703a 	and	r3,r3,r6
   85448:	38c0022e 	bgeu	r7,r3,85454 <_malloc_r+0x55c>
   8544c:	10800217 	ldw	r2,8(r2)
   85450:	28bffb1e 	bne	r5,r2,85440 <_malloc_r+0x548>
   85454:	11400317 	ldw	r5,12(r2)
   85458:	98c00117 	ldw	r3,4(r19)
   8545c:	81400315 	stw	r5,12(r16)
   85460:	80800215 	stw	r2,8(r16)
   85464:	2c000215 	stw	r16,8(r5)
   85468:	14000315 	stw	r16,12(r2)
   8546c:	003ef806 	br	85050 <_malloc_r+0x158>
   85470:	88c00054 	ori	r3,r17,1
   85474:	80c00115 	stw	r3,4(r16)
   85478:	8463883a 	add	r17,r16,r17
   8547c:	34400515 	stw	r17,20(r6)
   85480:	34400415 	stw	r17,16(r6)
   85484:	10c00054 	ori	r3,r2,1
   85488:	8a000315 	stw	r8,12(r17)
   8548c:	8a000215 	stw	r8,8(r17)
   85490:	88c00115 	stw	r3,4(r17)
   85494:	88a3883a 	add	r17,r17,r2
   85498:	88800015 	stw	r2,0(r17)
   8549c:	9009883a 	mov	r4,r18
   854a0:	008d1800 	call	8d180 <__malloc_unlock>
   854a4:	80800204 	addi	r2,r16,8
   854a8:	003f3c06 	br	8519c <_malloc_r+0x2a4>
   854ac:	30c00117 	ldw	r3,4(r6)
   854b0:	003ee706 	br	85050 <_malloc_r+0x158>
   854b4:	5ac00044 	addi	r11,r11,1
   854b8:	588000cc 	andi	r2,r11,3
   854bc:	31800204 	addi	r6,r6,8
   854c0:	103efd1e 	bne	r2,zero,850b8 <_malloc_r+0x1c0>
   854c4:	00002406 	br	85558 <_malloc_r+0x660>
   854c8:	14000317 	ldw	r16,12(r2)
   854cc:	143f251e 	bne	r2,r16,85164 <_malloc_r+0x26c>
   854d0:	21000084 	addi	r4,r4,2
   854d4:	003ebc06 	br	84fc8 <_malloc_r+0xd0>
   854d8:	8085883a 	add	r2,r16,r2
   854dc:	10c00117 	ldw	r3,4(r2)
   854e0:	81000317 	ldw	r4,12(r16)
   854e4:	81400217 	ldw	r5,8(r16)
   854e8:	18c00054 	ori	r3,r3,1
   854ec:	10c00115 	stw	r3,4(r2)
   854f0:	29000315 	stw	r4,12(r5)
   854f4:	21400215 	stw	r5,8(r4)
   854f8:	9009883a 	mov	r4,r18
   854fc:	008d1800 	call	8d180 <__malloc_unlock>
   85500:	80800204 	addi	r2,r16,8
   85504:	003f2506 	br	8519c <_malloc_r+0x2a4>
   85508:	12001704 	addi	r8,r2,92
   8550c:	11c016c4 	addi	r7,r2,91
   85510:	4209883a 	add	r4,r8,r8
   85514:	003e9606 	br	84f70 <_malloc_r+0x78>
   85518:	3804d1ba 	srli	r2,r7,6
   8551c:	11400e44 	addi	r5,r2,57
   85520:	10c00e04 	addi	r3,r2,56
   85524:	294b883a 	add	r5,r5,r5
   85528:	003fbc06 	br	8541c <_malloc_r+0x524>
   8552c:	84ff5926 	beq	r16,r19,85294 <_malloc_r+0x39c>
   85530:	00800274 	movhi	r2,9
   85534:	10803104 	addi	r2,r2,196
   85538:	14000217 	ldw	r16,8(r2)
   8553c:	00bfff04 	movi	r2,-4
   85540:	80c00117 	ldw	r3,4(r16)
   85544:	1886703a 	and	r3,r3,r2
   85548:	003f9106 	br	85390 <_malloc_r+0x498>
   8554c:	60800217 	ldw	r2,8(r12)
   85550:	213fffc4 	addi	r4,r4,-1
   85554:	1300651e 	bne	r2,r12,856ec <_malloc_r+0x7f4>
   85558:	208000cc 	andi	r2,r4,3
   8555c:	633ffe04 	addi	r12,r12,-8
   85560:	103ffa1e 	bne	r2,zero,8554c <_malloc_r+0x654>
   85564:	98800117 	ldw	r2,4(r19)
   85568:	0146303a 	nor	r3,zero,r5
   8556c:	1884703a 	and	r2,r3,r2
   85570:	98800115 	stw	r2,4(r19)
   85574:	294b883a 	add	r5,r5,r5
   85578:	117f2836 	bltu	r2,r5,8521c <_malloc_r+0x324>
   8557c:	283f2726 	beq	r5,zero,8521c <_malloc_r+0x324>
   85580:	2886703a 	and	r3,r5,r2
   85584:	5809883a 	mov	r4,r11
   85588:	183ec31e 	bne	r3,zero,85098 <_malloc_r+0x1a0>
   8558c:	294b883a 	add	r5,r5,r5
   85590:	2886703a 	and	r3,r5,r2
   85594:	21000104 	addi	r4,r4,4
   85598:	183ffc26 	beq	r3,zero,8558c <_malloc_r+0x694>
   8559c:	003ebe06 	br	85098 <_malloc_r+0x1a0>
   855a0:	00c05504 	movi	r3,340
   855a4:	18801236 	bltu	r3,r2,855f0 <_malloc_r+0x6f8>
   855a8:	8804d3fa 	srli	r2,r17,15
   855ac:	12001e04 	addi	r8,r2,120
   855b0:	11c01dc4 	addi	r7,r2,119
   855b4:	4209883a 	add	r4,r8,r8
   855b8:	003e6d06 	br	84f70 <_malloc_r+0x78>
   855bc:	00c40004 	movi	r3,4096
   855c0:	003f4606 	br	852dc <_malloc_r+0x3e4>
   855c4:	00800044 	movi	r2,1
   855c8:	a0800115 	stw	r2,4(r20)
   855cc:	003f7406 	br	853a0 <_malloc_r+0x4a8>
   855d0:	1805d0ba 	srai	r2,r3,2
   855d4:	01c00044 	movi	r7,1
   855d8:	30c00117 	ldw	r3,4(r6)
   855dc:	388e983a 	sll	r7,r7,r2
   855e0:	2805883a 	mov	r2,r5
   855e4:	38c6b03a 	or	r3,r7,r3
   855e8:	30c00115 	stw	r3,4(r6)
   855ec:	003f9b06 	br	8545c <_malloc_r+0x564>
   855f0:	00c15504 	movi	r3,1364
   855f4:	18801a36 	bltu	r3,r2,85660 <_malloc_r+0x768>
   855f8:	8804d4ba 	srli	r2,r17,18
   855fc:	12001f44 	addi	r8,r2,125
   85600:	11c01f04 	addi	r7,r2,124
   85604:	4209883a 	add	r4,r8,r8
   85608:	003e5906 	br	84f70 <_malloc_r+0x78>
   8560c:	ad400404 	addi	r21,r21,16
   85610:	003f1706 	br	85270 <_malloc_r+0x378>
   85614:	00c01504 	movi	r3,84
   85618:	18802336 	bltu	r3,r2,856a8 <_malloc_r+0x7b0>
   8561c:	3804d33a 	srli	r2,r7,12
   85620:	11401bc4 	addi	r5,r2,111
   85624:	10c01b84 	addi	r3,r2,110
   85628:	294b883a 	add	r5,r5,r5
   8562c:	003f7b06 	br	8541c <_malloc_r+0x524>
   85630:	9c000217 	ldw	r16,8(r19)
   85634:	00bfff04 	movi	r2,-4
   85638:	80c00117 	ldw	r3,4(r16)
   8563c:	1886703a 	and	r3,r3,r2
   85640:	003f5306 	br	85390 <_malloc_r+0x498>
   85644:	3083ffcc 	andi	r2,r6,4095
   85648:	103f181e 	bne	r2,zero,852ac <_malloc_r+0x3b4>
   8564c:	99000217 	ldw	r4,8(r19)
   85650:	b545883a 	add	r2,r22,r21
   85654:	10800054 	ori	r2,r2,1
   85658:	20800115 	stw	r2,4(r4)
   8565c:	003f3e06 	br	85358 <_malloc_r+0x460>
   85660:	01003f84 	movi	r4,254
   85664:	02001fc4 	movi	r8,127
   85668:	01c01f84 	movi	r7,126
   8566c:	003e4006 	br	84f70 <_malloc_r+0x78>
   85670:	00800274 	movhi	r2,9
   85674:	1085b804 	addi	r2,r2,5856
   85678:	15000015 	stw	r20,0(r2)
   8567c:	003f1106 	br	852c4 <_malloc_r+0x3cc>
   85680:	00800044 	movi	r2,1
   85684:	002b883a 	mov	r21,zero
   85688:	003f1f06 	br	85308 <_malloc_r+0x410>
   8568c:	81400204 	addi	r5,r16,8
   85690:	9009883a 	mov	r4,r18
   85694:	00847c80 	call	847c8 <_free_r>
   85698:	00800274 	movhi	r2,9
   8569c:	108c8e04 	addi	r2,r2,12856
   856a0:	10c00017 	ldw	r3,0(r2)
   856a4:	003f2c06 	br	85358 <_malloc_r+0x460>
   856a8:	00c05504 	movi	r3,340
   856ac:	18800536 	bltu	r3,r2,856c4 <_malloc_r+0x7cc>
   856b0:	3804d3fa 	srli	r2,r7,15
   856b4:	11401e04 	addi	r5,r2,120
   856b8:	10c01dc4 	addi	r3,r2,119
   856bc:	294b883a 	add	r5,r5,r5
   856c0:	003f5606 	br	8541c <_malloc_r+0x524>
   856c4:	00c15504 	movi	r3,1364
   856c8:	18800536 	bltu	r3,r2,856e0 <_malloc_r+0x7e8>
   856cc:	3804d4ba 	srli	r2,r7,18
   856d0:	11401f44 	addi	r5,r2,125
   856d4:	10c01f04 	addi	r3,r2,124
   856d8:	294b883a 	add	r5,r5,r5
   856dc:	003f4f06 	br	8541c <_malloc_r+0x524>
   856e0:	01403f84 	movi	r5,254
   856e4:	00c01f84 	movi	r3,126
   856e8:	003f4c06 	br	8541c <_malloc_r+0x524>
   856ec:	98800117 	ldw	r2,4(r19)
   856f0:	003fa006 	br	85574 <_malloc_r+0x67c>
   856f4:	8808d0fa 	srli	r4,r17,3
   856f8:	20800044 	addi	r2,r4,1
   856fc:	1085883a 	add	r2,r2,r2
   85700:	003e9006 	br	85144 <_malloc_r+0x24c>

00085704 <memchr>:
   85704:	208000cc 	andi	r2,r4,3
   85708:	280f883a 	mov	r7,r5
   8570c:	10003426 	beq	r2,zero,857e0 <memchr+0xdc>
   85710:	30bfffc4 	addi	r2,r6,-1
   85714:	30001a26 	beq	r6,zero,85780 <memchr+0x7c>
   85718:	20c00003 	ldbu	r3,0(r4)
   8571c:	29803fcc 	andi	r6,r5,255
   85720:	30c0051e 	bne	r6,r3,85738 <memchr+0x34>
   85724:	00001806 	br	85788 <memchr+0x84>
   85728:	10001526 	beq	r2,zero,85780 <memchr+0x7c>
   8572c:	20c00003 	ldbu	r3,0(r4)
   85730:	10bfffc4 	addi	r2,r2,-1
   85734:	30c01426 	beq	r6,r3,85788 <memchr+0x84>
   85738:	21000044 	addi	r4,r4,1
   8573c:	20c000cc 	andi	r3,r4,3
   85740:	183ff91e 	bne	r3,zero,85728 <memchr+0x24>
   85744:	020000c4 	movi	r8,3
   85748:	40801136 	bltu	r8,r2,85790 <memchr+0x8c>
   8574c:	10000c26 	beq	r2,zero,85780 <memchr+0x7c>
   85750:	20c00003 	ldbu	r3,0(r4)
   85754:	29403fcc 	andi	r5,r5,255
   85758:	28c00b26 	beq	r5,r3,85788 <memchr+0x84>
   8575c:	20c00044 	addi	r3,r4,1
   85760:	39803fcc 	andi	r6,r7,255
   85764:	2089883a 	add	r4,r4,r2
   85768:	00000306 	br	85778 <memchr+0x74>
   8576c:	18c00044 	addi	r3,r3,1
   85770:	197fffc3 	ldbu	r5,-1(r3)
   85774:	31400526 	beq	r6,r5,8578c <memchr+0x88>
   85778:	1805883a 	mov	r2,r3
   8577c:	20fffb1e 	bne	r4,r3,8576c <memchr+0x68>
   85780:	0005883a 	mov	r2,zero
   85784:	f800283a 	ret
   85788:	2005883a 	mov	r2,r4
   8578c:	f800283a 	ret
   85790:	28c03fcc 	andi	r3,r5,255
   85794:	1812923a 	slli	r9,r3,8
   85798:	02ffbff4 	movhi	r11,65279
   8579c:	02a02074 	movhi	r10,32897
   857a0:	48d2b03a 	or	r9,r9,r3
   857a4:	4806943a 	slli	r3,r9,16
   857a8:	5affbfc4 	addi	r11,r11,-257
   857ac:	52a02004 	addi	r10,r10,-32640
   857b0:	48d2b03a 	or	r9,r9,r3
   857b4:	20c00017 	ldw	r3,0(r4)
   857b8:	48c6f03a 	xor	r3,r9,r3
   857bc:	1acd883a 	add	r6,r3,r11
   857c0:	00c6303a 	nor	r3,zero,r3
   857c4:	30c6703a 	and	r3,r6,r3
   857c8:	1a86703a 	and	r3,r3,r10
   857cc:	183fe01e 	bne	r3,zero,85750 <memchr+0x4c>
   857d0:	10bfff04 	addi	r2,r2,-4
   857d4:	21000104 	addi	r4,r4,4
   857d8:	40bff636 	bltu	r8,r2,857b4 <memchr+0xb0>
   857dc:	003fdb06 	br	8574c <memchr+0x48>
   857e0:	3005883a 	mov	r2,r6
   857e4:	003fd706 	br	85744 <memchr+0x40>

000857e8 <memcpy>:
   857e8:	defffd04 	addi	sp,sp,-12
   857ec:	dfc00215 	stw	ra,8(sp)
   857f0:	dc400115 	stw	r17,4(sp)
   857f4:	dc000015 	stw	r16,0(sp)
   857f8:	00c003c4 	movi	r3,15
   857fc:	2005883a 	mov	r2,r4
   85800:	1980452e 	bgeu	r3,r6,85918 <memcpy+0x130>
   85804:	2906b03a 	or	r3,r5,r4
   85808:	18c000cc 	andi	r3,r3,3
   8580c:	1800441e 	bne	r3,zero,85920 <memcpy+0x138>
   85810:	347ffc04 	addi	r17,r6,-16
   85814:	8822d13a 	srli	r17,r17,4
   85818:	28c00104 	addi	r3,r5,4
   8581c:	23400104 	addi	r13,r4,4
   85820:	8820913a 	slli	r16,r17,4
   85824:	2b000204 	addi	r12,r5,8
   85828:	22c00204 	addi	r11,r4,8
   8582c:	84000504 	addi	r16,r16,20
   85830:	2a800304 	addi	r10,r5,12
   85834:	22400304 	addi	r9,r4,12
   85838:	2c21883a 	add	r16,r5,r16
   8583c:	2811883a 	mov	r8,r5
   85840:	200f883a 	mov	r7,r4
   85844:	41000017 	ldw	r4,0(r8)
   85848:	1fc00017 	ldw	ra,0(r3)
   8584c:	63c00017 	ldw	r15,0(r12)
   85850:	39000015 	stw	r4,0(r7)
   85854:	53800017 	ldw	r14,0(r10)
   85858:	6fc00015 	stw	ra,0(r13)
   8585c:	5bc00015 	stw	r15,0(r11)
   85860:	4b800015 	stw	r14,0(r9)
   85864:	18c00404 	addi	r3,r3,16
   85868:	39c00404 	addi	r7,r7,16
   8586c:	42000404 	addi	r8,r8,16
   85870:	6b400404 	addi	r13,r13,16
   85874:	63000404 	addi	r12,r12,16
   85878:	5ac00404 	addi	r11,r11,16
   8587c:	52800404 	addi	r10,r10,16
   85880:	4a400404 	addi	r9,r9,16
   85884:	1c3fef1e 	bne	r3,r16,85844 <memcpy+0x5c>
   85888:	89c00044 	addi	r7,r17,1
   8588c:	380e913a 	slli	r7,r7,4
   85890:	310003cc 	andi	r4,r6,15
   85894:	02c000c4 	movi	r11,3
   85898:	11c7883a 	add	r3,r2,r7
   8589c:	29cb883a 	add	r5,r5,r7
   858a0:	5900212e 	bgeu	r11,r4,85928 <memcpy+0x140>
   858a4:	1813883a 	mov	r9,r3
   858a8:	2811883a 	mov	r8,r5
   858ac:	200f883a 	mov	r7,r4
   858b0:	42800017 	ldw	r10,0(r8)
   858b4:	4a400104 	addi	r9,r9,4
   858b8:	39ffff04 	addi	r7,r7,-4
   858bc:	4abfff15 	stw	r10,-4(r9)
   858c0:	42000104 	addi	r8,r8,4
   858c4:	59fffa36 	bltu	r11,r7,858b0 <memcpy+0xc8>
   858c8:	213fff04 	addi	r4,r4,-4
   858cc:	2008d0ba 	srli	r4,r4,2
   858d0:	318000cc 	andi	r6,r6,3
   858d4:	21000044 	addi	r4,r4,1
   858d8:	2109883a 	add	r4,r4,r4
   858dc:	2109883a 	add	r4,r4,r4
   858e0:	1907883a 	add	r3,r3,r4
   858e4:	290b883a 	add	r5,r5,r4
   858e8:	30000626 	beq	r6,zero,85904 <memcpy+0x11c>
   858ec:	198d883a 	add	r6,r3,r6
   858f0:	29c00003 	ldbu	r7,0(r5)
   858f4:	18c00044 	addi	r3,r3,1
   858f8:	29400044 	addi	r5,r5,1
   858fc:	19ffffc5 	stb	r7,-1(r3)
   85900:	19bffb1e 	bne	r3,r6,858f0 <memcpy+0x108>
   85904:	dfc00217 	ldw	ra,8(sp)
   85908:	dc400117 	ldw	r17,4(sp)
   8590c:	dc000017 	ldw	r16,0(sp)
   85910:	dec00304 	addi	sp,sp,12
   85914:	f800283a 	ret
   85918:	2007883a 	mov	r3,r4
   8591c:	003ff206 	br	858e8 <memcpy+0x100>
   85920:	2007883a 	mov	r3,r4
   85924:	003ff106 	br	858ec <memcpy+0x104>
   85928:	200d883a 	mov	r6,r4
   8592c:	003fee06 	br	858e8 <memcpy+0x100>

00085930 <memset>:
   85930:	20c000cc 	andi	r3,r4,3
   85934:	2005883a 	mov	r2,r4
   85938:	18004426 	beq	r3,zero,85a4c <memset+0x11c>
   8593c:	31ffffc4 	addi	r7,r6,-1
   85940:	30004026 	beq	r6,zero,85a44 <memset+0x114>
   85944:	2813883a 	mov	r9,r5
   85948:	200d883a 	mov	r6,r4
   8594c:	2007883a 	mov	r3,r4
   85950:	00000406 	br	85964 <memset+0x34>
   85954:	3a3fffc4 	addi	r8,r7,-1
   85958:	31800044 	addi	r6,r6,1
   8595c:	38003926 	beq	r7,zero,85a44 <memset+0x114>
   85960:	400f883a 	mov	r7,r8
   85964:	18c00044 	addi	r3,r3,1
   85968:	32400005 	stb	r9,0(r6)
   8596c:	1a0000cc 	andi	r8,r3,3
   85970:	403ff81e 	bne	r8,zero,85954 <memset+0x24>
   85974:	010000c4 	movi	r4,3
   85978:	21c02d2e 	bgeu	r4,r7,85a30 <memset+0x100>
   8597c:	29003fcc 	andi	r4,r5,255
   85980:	200c923a 	slli	r6,r4,8
   85984:	3108b03a 	or	r4,r6,r4
   85988:	200c943a 	slli	r6,r4,16
   8598c:	218cb03a 	or	r6,r4,r6
   85990:	010003c4 	movi	r4,15
   85994:	21c0182e 	bgeu	r4,r7,859f8 <memset+0xc8>
   85998:	3b3ffc04 	addi	r12,r7,-16
   8599c:	6018d13a 	srli	r12,r12,4
   859a0:	1a000104 	addi	r8,r3,4
   859a4:	1ac00204 	addi	r11,r3,8
   859a8:	6008913a 	slli	r4,r12,4
   859ac:	1a800304 	addi	r10,r3,12
   859b0:	1813883a 	mov	r9,r3
   859b4:	21000504 	addi	r4,r4,20
   859b8:	1909883a 	add	r4,r3,r4
   859bc:	49800015 	stw	r6,0(r9)
   859c0:	41800015 	stw	r6,0(r8)
   859c4:	59800015 	stw	r6,0(r11)
   859c8:	51800015 	stw	r6,0(r10)
   859cc:	42000404 	addi	r8,r8,16
   859d0:	4a400404 	addi	r9,r9,16
   859d4:	5ac00404 	addi	r11,r11,16
   859d8:	52800404 	addi	r10,r10,16
   859dc:	413ff71e 	bne	r8,r4,859bc <memset+0x8c>
   859e0:	63000044 	addi	r12,r12,1
   859e4:	6018913a 	slli	r12,r12,4
   859e8:	39c003cc 	andi	r7,r7,15
   859ec:	010000c4 	movi	r4,3
   859f0:	1b07883a 	add	r3,r3,r12
   859f4:	21c00e2e 	bgeu	r4,r7,85a30 <memset+0x100>
   859f8:	1813883a 	mov	r9,r3
   859fc:	3811883a 	mov	r8,r7
   85a00:	010000c4 	movi	r4,3
   85a04:	49800015 	stw	r6,0(r9)
   85a08:	423fff04 	addi	r8,r8,-4
   85a0c:	4a400104 	addi	r9,r9,4
   85a10:	223ffc36 	bltu	r4,r8,85a04 <memset+0xd4>
   85a14:	393fff04 	addi	r4,r7,-4
   85a18:	2008d0ba 	srli	r4,r4,2
   85a1c:	39c000cc 	andi	r7,r7,3
   85a20:	21000044 	addi	r4,r4,1
   85a24:	2109883a 	add	r4,r4,r4
   85a28:	2109883a 	add	r4,r4,r4
   85a2c:	1907883a 	add	r3,r3,r4
   85a30:	38000526 	beq	r7,zero,85a48 <memset+0x118>
   85a34:	19cf883a 	add	r7,r3,r7
   85a38:	19400005 	stb	r5,0(r3)
   85a3c:	18c00044 	addi	r3,r3,1
   85a40:	38fffd1e 	bne	r7,r3,85a38 <memset+0x108>
   85a44:	f800283a 	ret
   85a48:	f800283a 	ret
   85a4c:	2007883a 	mov	r3,r4
   85a50:	300f883a 	mov	r7,r6
   85a54:	003fc706 	br	85974 <memset+0x44>

00085a58 <_Balloc>:
   85a58:	20801317 	ldw	r2,76(r4)
   85a5c:	defffc04 	addi	sp,sp,-16
   85a60:	dc400115 	stw	r17,4(sp)
   85a64:	dc000015 	stw	r16,0(sp)
   85a68:	dfc00315 	stw	ra,12(sp)
   85a6c:	dc800215 	stw	r18,8(sp)
   85a70:	2023883a 	mov	r17,r4
   85a74:	2821883a 	mov	r16,r5
   85a78:	10000f26 	beq	r2,zero,85ab8 <_Balloc+0x60>
   85a7c:	8407883a 	add	r3,r16,r16
   85a80:	18c7883a 	add	r3,r3,r3
   85a84:	10c7883a 	add	r3,r2,r3
   85a88:	18800017 	ldw	r2,0(r3)
   85a8c:	10001126 	beq	r2,zero,85ad4 <_Balloc+0x7c>
   85a90:	11000017 	ldw	r4,0(r2)
   85a94:	19000015 	stw	r4,0(r3)
   85a98:	10000415 	stw	zero,16(r2)
   85a9c:	10000315 	stw	zero,12(r2)
   85aa0:	dfc00317 	ldw	ra,12(sp)
   85aa4:	dc800217 	ldw	r18,8(sp)
   85aa8:	dc400117 	ldw	r17,4(sp)
   85aac:	dc000017 	ldw	r16,0(sp)
   85ab0:	dec00404 	addi	sp,sp,16
   85ab4:	f800283a 	ret
   85ab8:	01800844 	movi	r6,33
   85abc:	01400104 	movi	r5,4
   85ac0:	00884c80 	call	884c8 <_calloc_r>
   85ac4:	88801315 	stw	r2,76(r17)
   85ac8:	103fec1e 	bne	r2,zero,85a7c <_Balloc+0x24>
   85acc:	0005883a 	mov	r2,zero
   85ad0:	003ff306 	br	85aa0 <_Balloc+0x48>
   85ad4:	01400044 	movi	r5,1
   85ad8:	2c24983a 	sll	r18,r5,r16
   85adc:	8809883a 	mov	r4,r17
   85ae0:	91800144 	addi	r6,r18,5
   85ae4:	318d883a 	add	r6,r6,r6
   85ae8:	318d883a 	add	r6,r6,r6
   85aec:	00884c80 	call	884c8 <_calloc_r>
   85af0:	103ff626 	beq	r2,zero,85acc <_Balloc+0x74>
   85af4:	14000115 	stw	r16,4(r2)
   85af8:	14800215 	stw	r18,8(r2)
   85afc:	003fe606 	br	85a98 <_Balloc+0x40>

00085b00 <_Bfree>:
   85b00:	28000826 	beq	r5,zero,85b24 <_Bfree+0x24>
   85b04:	28c00117 	ldw	r3,4(r5)
   85b08:	20801317 	ldw	r2,76(r4)
   85b0c:	18c7883a 	add	r3,r3,r3
   85b10:	18c7883a 	add	r3,r3,r3
   85b14:	10c5883a 	add	r2,r2,r3
   85b18:	10c00017 	ldw	r3,0(r2)
   85b1c:	28c00015 	stw	r3,0(r5)
   85b20:	11400015 	stw	r5,0(r2)
   85b24:	f800283a 	ret

00085b28 <__multadd>:
   85b28:	defffa04 	addi	sp,sp,-24
   85b2c:	dc800315 	stw	r18,12(sp)
   85b30:	dc400215 	stw	r17,8(sp)
   85b34:	dc000115 	stw	r16,4(sp)
   85b38:	2823883a 	mov	r17,r5
   85b3c:	2c000417 	ldw	r16,16(r5)
   85b40:	dfc00515 	stw	ra,20(sp)
   85b44:	dcc00415 	stw	r19,16(sp)
   85b48:	2025883a 	mov	r18,r4
   85b4c:	29400504 	addi	r5,r5,20
   85b50:	0011883a 	mov	r8,zero
   85b54:	28c00017 	ldw	r3,0(r5)
   85b58:	29400104 	addi	r5,r5,4
   85b5c:	42000044 	addi	r8,r8,1
   85b60:	18bfffcc 	andi	r2,r3,65535
   85b64:	1185383a 	mul	r2,r2,r6
   85b68:	1806d43a 	srli	r3,r3,16
   85b6c:	11cf883a 	add	r7,r2,r7
   85b70:	3808d43a 	srli	r4,r7,16
   85b74:	1987383a 	mul	r3,r3,r6
   85b78:	38bfffcc 	andi	r2,r7,65535
   85b7c:	1907883a 	add	r3,r3,r4
   85b80:	1808943a 	slli	r4,r3,16
   85b84:	180ed43a 	srli	r7,r3,16
   85b88:	2085883a 	add	r2,r4,r2
   85b8c:	28bfff15 	stw	r2,-4(r5)
   85b90:	443ff016 	blt	r8,r16,85b54 <__multadd+0x2c>
   85b94:	38000926 	beq	r7,zero,85bbc <__multadd+0x94>
   85b98:	88800217 	ldw	r2,8(r17)
   85b9c:	80800f0e 	bge	r16,r2,85bdc <__multadd+0xb4>
   85ba0:	80800144 	addi	r2,r16,5
   85ba4:	1085883a 	add	r2,r2,r2
   85ba8:	1085883a 	add	r2,r2,r2
   85bac:	8885883a 	add	r2,r17,r2
   85bb0:	11c00015 	stw	r7,0(r2)
   85bb4:	84000044 	addi	r16,r16,1
   85bb8:	8c000415 	stw	r16,16(r17)
   85bbc:	8805883a 	mov	r2,r17
   85bc0:	dfc00517 	ldw	ra,20(sp)
   85bc4:	dcc00417 	ldw	r19,16(sp)
   85bc8:	dc800317 	ldw	r18,12(sp)
   85bcc:	dc400217 	ldw	r17,8(sp)
   85bd0:	dc000117 	ldw	r16,4(sp)
   85bd4:	dec00604 	addi	sp,sp,24
   85bd8:	f800283a 	ret
   85bdc:	89400117 	ldw	r5,4(r17)
   85be0:	9009883a 	mov	r4,r18
   85be4:	d9c00015 	stw	r7,0(sp)
   85be8:	29400044 	addi	r5,r5,1
   85bec:	0085a580 	call	85a58 <_Balloc>
   85bf0:	89800417 	ldw	r6,16(r17)
   85bf4:	89400304 	addi	r5,r17,12
   85bf8:	11000304 	addi	r4,r2,12
   85bfc:	31800084 	addi	r6,r6,2
   85c00:	318d883a 	add	r6,r6,r6
   85c04:	318d883a 	add	r6,r6,r6
   85c08:	1027883a 	mov	r19,r2
   85c0c:	00857e80 	call	857e8 <memcpy>
   85c10:	d9c00017 	ldw	r7,0(sp)
   85c14:	88000a26 	beq	r17,zero,85c40 <__multadd+0x118>
   85c18:	88c00117 	ldw	r3,4(r17)
   85c1c:	90801317 	ldw	r2,76(r18)
   85c20:	18c7883a 	add	r3,r3,r3
   85c24:	18c7883a 	add	r3,r3,r3
   85c28:	10c5883a 	add	r2,r2,r3
   85c2c:	10c00017 	ldw	r3,0(r2)
   85c30:	88c00015 	stw	r3,0(r17)
   85c34:	14400015 	stw	r17,0(r2)
   85c38:	9823883a 	mov	r17,r19
   85c3c:	003fd806 	br	85ba0 <__multadd+0x78>
   85c40:	9823883a 	mov	r17,r19
   85c44:	003fd606 	br	85ba0 <__multadd+0x78>

00085c48 <__s2b>:
   85c48:	defff904 	addi	sp,sp,-28
   85c4c:	dc400115 	stw	r17,4(sp)
   85c50:	dc000015 	stw	r16,0(sp)
   85c54:	2023883a 	mov	r17,r4
   85c58:	2821883a 	mov	r16,r5
   85c5c:	39000204 	addi	r4,r7,8
   85c60:	01400244 	movi	r5,9
   85c64:	dcc00315 	stw	r19,12(sp)
   85c68:	dc800215 	stw	r18,8(sp)
   85c6c:	dfc00615 	stw	ra,24(sp)
   85c70:	dd400515 	stw	r21,20(sp)
   85c74:	dd000415 	stw	r20,16(sp)
   85c78:	3825883a 	mov	r18,r7
   85c7c:	3027883a 	mov	r19,r6
   85c80:	008a3740 	call	8a374 <__divsi3>
   85c84:	00c00044 	movi	r3,1
   85c88:	000b883a 	mov	r5,zero
   85c8c:	1880030e 	bge	r3,r2,85c9c <__s2b+0x54>
   85c90:	18c7883a 	add	r3,r3,r3
   85c94:	29400044 	addi	r5,r5,1
   85c98:	18bffd16 	blt	r3,r2,85c90 <__s2b+0x48>
   85c9c:	8809883a 	mov	r4,r17
   85ca0:	0085a580 	call	85a58 <_Balloc>
   85ca4:	d8c00717 	ldw	r3,28(sp)
   85ca8:	10c00515 	stw	r3,20(r2)
   85cac:	00c00044 	movi	r3,1
   85cb0:	10c00415 	stw	r3,16(r2)
   85cb4:	00c00244 	movi	r3,9
   85cb8:	1cc0210e 	bge	r3,r19,85d40 <__s2b+0xf8>
   85cbc:	80eb883a 	add	r21,r16,r3
   85cc0:	a829883a 	mov	r20,r21
   85cc4:	84e1883a 	add	r16,r16,r19
   85cc8:	a1c00007 	ldb	r7,0(r20)
   85ccc:	01800284 	movi	r6,10
   85cd0:	a5000044 	addi	r20,r20,1
   85cd4:	100b883a 	mov	r5,r2
   85cd8:	39fff404 	addi	r7,r7,-48
   85cdc:	8809883a 	mov	r4,r17
   85ce0:	0085b280 	call	85b28 <__multadd>
   85ce4:	a43ff81e 	bne	r20,r16,85cc8 <__s2b+0x80>
   85ce8:	ace1883a 	add	r16,r21,r19
   85cec:	843ffe04 	addi	r16,r16,-8
   85cf0:	9c800a0e 	bge	r19,r18,85d1c <__s2b+0xd4>
   85cf4:	94e5c83a 	sub	r18,r18,r19
   85cf8:	84a5883a 	add	r18,r16,r18
   85cfc:	81c00007 	ldb	r7,0(r16)
   85d00:	01800284 	movi	r6,10
   85d04:	84000044 	addi	r16,r16,1
   85d08:	100b883a 	mov	r5,r2
   85d0c:	39fff404 	addi	r7,r7,-48
   85d10:	8809883a 	mov	r4,r17
   85d14:	0085b280 	call	85b28 <__multadd>
   85d18:	84bff81e 	bne	r16,r18,85cfc <__s2b+0xb4>
   85d1c:	dfc00617 	ldw	ra,24(sp)
   85d20:	dd400517 	ldw	r21,20(sp)
   85d24:	dd000417 	ldw	r20,16(sp)
   85d28:	dcc00317 	ldw	r19,12(sp)
   85d2c:	dc800217 	ldw	r18,8(sp)
   85d30:	dc400117 	ldw	r17,4(sp)
   85d34:	dc000017 	ldw	r16,0(sp)
   85d38:	dec00704 	addi	sp,sp,28
   85d3c:	f800283a 	ret
   85d40:	84000284 	addi	r16,r16,10
   85d44:	1827883a 	mov	r19,r3
   85d48:	003fe906 	br	85cf0 <__s2b+0xa8>

00085d4c <__hi0bits>:
   85d4c:	20bfffec 	andhi	r2,r4,65535
   85d50:	1000141e 	bne	r2,zero,85da4 <__hi0bits+0x58>
   85d54:	2008943a 	slli	r4,r4,16
   85d58:	00800404 	movi	r2,16
   85d5c:	20ffc02c 	andhi	r3,r4,65280
   85d60:	1800021e 	bne	r3,zero,85d6c <__hi0bits+0x20>
   85d64:	2008923a 	slli	r4,r4,8
   85d68:	10800204 	addi	r2,r2,8
   85d6c:	20fc002c 	andhi	r3,r4,61440
   85d70:	1800021e 	bne	r3,zero,85d7c <__hi0bits+0x30>
   85d74:	2008913a 	slli	r4,r4,4
   85d78:	10800104 	addi	r2,r2,4
   85d7c:	20f0002c 	andhi	r3,r4,49152
   85d80:	1800031e 	bne	r3,zero,85d90 <__hi0bits+0x44>
   85d84:	2109883a 	add	r4,r4,r4
   85d88:	10800084 	addi	r2,r2,2
   85d8c:	2109883a 	add	r4,r4,r4
   85d90:	20000316 	blt	r4,zero,85da0 <__hi0bits+0x54>
   85d94:	2110002c 	andhi	r4,r4,16384
   85d98:	2000041e 	bne	r4,zero,85dac <__hi0bits+0x60>
   85d9c:	00800804 	movi	r2,32
   85da0:	f800283a 	ret
   85da4:	0005883a 	mov	r2,zero
   85da8:	003fec06 	br	85d5c <__hi0bits+0x10>
   85dac:	10800044 	addi	r2,r2,1
   85db0:	f800283a 	ret

00085db4 <__lo0bits>:
   85db4:	20c00017 	ldw	r3,0(r4)
   85db8:	188001cc 	andi	r2,r3,7
   85dbc:	10000826 	beq	r2,zero,85de0 <__lo0bits+0x2c>
   85dc0:	1880004c 	andi	r2,r3,1
   85dc4:	1000211e 	bne	r2,zero,85e4c <__lo0bits+0x98>
   85dc8:	1880008c 	andi	r2,r3,2
   85dcc:	1000211e 	bne	r2,zero,85e54 <__lo0bits+0xa0>
   85dd0:	1806d0ba 	srli	r3,r3,2
   85dd4:	00800084 	movi	r2,2
   85dd8:	20c00015 	stw	r3,0(r4)
   85ddc:	f800283a 	ret
   85de0:	18bfffcc 	andi	r2,r3,65535
   85de4:	10001326 	beq	r2,zero,85e34 <__lo0bits+0x80>
   85de8:	0005883a 	mov	r2,zero
   85dec:	19403fcc 	andi	r5,r3,255
   85df0:	2800021e 	bne	r5,zero,85dfc <__lo0bits+0x48>
   85df4:	1806d23a 	srli	r3,r3,8
   85df8:	10800204 	addi	r2,r2,8
   85dfc:	194003cc 	andi	r5,r3,15
   85e00:	2800021e 	bne	r5,zero,85e0c <__lo0bits+0x58>
   85e04:	1806d13a 	srli	r3,r3,4
   85e08:	10800104 	addi	r2,r2,4
   85e0c:	194000cc 	andi	r5,r3,3
   85e10:	2800021e 	bne	r5,zero,85e1c <__lo0bits+0x68>
   85e14:	1806d0ba 	srli	r3,r3,2
   85e18:	10800084 	addi	r2,r2,2
   85e1c:	1940004c 	andi	r5,r3,1
   85e20:	2800081e 	bne	r5,zero,85e44 <__lo0bits+0x90>
   85e24:	1806d07a 	srli	r3,r3,1
   85e28:	1800051e 	bne	r3,zero,85e40 <__lo0bits+0x8c>
   85e2c:	00800804 	movi	r2,32
   85e30:	f800283a 	ret
   85e34:	1806d43a 	srli	r3,r3,16
   85e38:	00800404 	movi	r2,16
   85e3c:	003feb06 	br	85dec <__lo0bits+0x38>
   85e40:	10800044 	addi	r2,r2,1
   85e44:	20c00015 	stw	r3,0(r4)
   85e48:	f800283a 	ret
   85e4c:	0005883a 	mov	r2,zero
   85e50:	f800283a 	ret
   85e54:	1806d07a 	srli	r3,r3,1
   85e58:	00800044 	movi	r2,1
   85e5c:	20c00015 	stw	r3,0(r4)
   85e60:	f800283a 	ret

00085e64 <__i2b>:
   85e64:	defffd04 	addi	sp,sp,-12
   85e68:	dc000015 	stw	r16,0(sp)
   85e6c:	04000044 	movi	r16,1
   85e70:	dc400115 	stw	r17,4(sp)
   85e74:	2823883a 	mov	r17,r5
   85e78:	800b883a 	mov	r5,r16
   85e7c:	dfc00215 	stw	ra,8(sp)
   85e80:	0085a580 	call	85a58 <_Balloc>
   85e84:	14400515 	stw	r17,20(r2)
   85e88:	14000415 	stw	r16,16(r2)
   85e8c:	dfc00217 	ldw	ra,8(sp)
   85e90:	dc400117 	ldw	r17,4(sp)
   85e94:	dc000017 	ldw	r16,0(sp)
   85e98:	dec00304 	addi	sp,sp,12
   85e9c:	f800283a 	ret

00085ea0 <__multiply>:
   85ea0:	defffa04 	addi	sp,sp,-24
   85ea4:	dcc00315 	stw	r19,12(sp)
   85ea8:	dc800215 	stw	r18,8(sp)
   85eac:	34c00417 	ldw	r19,16(r6)
   85eb0:	2c800417 	ldw	r18,16(r5)
   85eb4:	dd000415 	stw	r20,16(sp)
   85eb8:	dc400115 	stw	r17,4(sp)
   85ebc:	dfc00515 	stw	ra,20(sp)
   85ec0:	dc000015 	stw	r16,0(sp)
   85ec4:	2829883a 	mov	r20,r5
   85ec8:	3023883a 	mov	r17,r6
   85ecc:	94c0050e 	bge	r18,r19,85ee4 <__multiply+0x44>
   85ed0:	9007883a 	mov	r3,r18
   85ed4:	3029883a 	mov	r20,r6
   85ed8:	9825883a 	mov	r18,r19
   85edc:	2823883a 	mov	r17,r5
   85ee0:	1827883a 	mov	r19,r3
   85ee4:	a0800217 	ldw	r2,8(r20)
   85ee8:	94e1883a 	add	r16,r18,r19
   85eec:	a1400117 	ldw	r5,4(r20)
   85ef0:	1400010e 	bge	r2,r16,85ef8 <__multiply+0x58>
   85ef4:	29400044 	addi	r5,r5,1
   85ef8:	0085a580 	call	85a58 <_Balloc>
   85efc:	8415883a 	add	r10,r16,r16
   85f00:	12c00504 	addi	r11,r2,20
   85f04:	5295883a 	add	r10,r10,r10
   85f08:	5a95883a 	add	r10,r11,r10
   85f0c:	5807883a 	mov	r3,r11
   85f10:	5a80032e 	bgeu	r11,r10,85f20 <__multiply+0x80>
   85f14:	18000015 	stw	zero,0(r3)
   85f18:	18c00104 	addi	r3,r3,4
   85f1c:	1abffd36 	bltu	r3,r10,85f14 <__multiply+0x74>
   85f20:	9ce7883a 	add	r19,r19,r19
   85f24:	94a5883a 	add	r18,r18,r18
   85f28:	89800504 	addi	r6,r17,20
   85f2c:	9ce7883a 	add	r19,r19,r19
   85f30:	a3400504 	addi	r13,r20,20
   85f34:	94a5883a 	add	r18,r18,r18
   85f38:	34d9883a 	add	r12,r6,r19
   85f3c:	6c93883a 	add	r9,r13,r18
   85f40:	3300422e 	bgeu	r6,r12,8604c <__multiply+0x1ac>
   85f44:	37c00017 	ldw	ra,0(r6)
   85f48:	fbffffcc 	andi	r15,ra,65535
   85f4c:	78001b26 	beq	r15,zero,85fbc <__multiply+0x11c>
   85f50:	5811883a 	mov	r8,r11
   85f54:	681d883a 	mov	r14,r13
   85f58:	000f883a 	mov	r7,zero
   85f5c:	71000017 	ldw	r4,0(r14)
   85f60:	40c00017 	ldw	r3,0(r8)
   85f64:	73800104 	addi	r14,r14,4
   85f68:	217fffcc 	andi	r5,r4,65535
   85f6c:	2bcb383a 	mul	r5,r5,r15
   85f70:	2008d43a 	srli	r4,r4,16
   85f74:	1c7fffcc 	andi	r17,r3,65535
   85f78:	2c4b883a 	add	r5,r5,r17
   85f7c:	29cb883a 	add	r5,r5,r7
   85f80:	23c9383a 	mul	r4,r4,r15
   85f84:	1806d43a 	srli	r3,r3,16
   85f88:	280ed43a 	srli	r7,r5,16
   85f8c:	297fffcc 	andi	r5,r5,65535
   85f90:	20c7883a 	add	r3,r4,r3
   85f94:	19c7883a 	add	r3,r3,r7
   85f98:	1808943a 	slli	r4,r3,16
   85f9c:	4023883a 	mov	r17,r8
   85fa0:	180ed43a 	srli	r7,r3,16
   85fa4:	214ab03a 	or	r5,r4,r5
   85fa8:	41400015 	stw	r5,0(r8)
   85fac:	42000104 	addi	r8,r8,4
   85fb0:	727fea36 	bltu	r14,r9,85f5c <__multiply+0xbc>
   85fb4:	89c00115 	stw	r7,4(r17)
   85fb8:	37c00017 	ldw	ra,0(r6)
   85fbc:	f83ed43a 	srli	ra,ra,16
   85fc0:	f8001f26 	beq	ra,zero,86040 <__multiply+0x1a0>
   85fc4:	58c00017 	ldw	r3,0(r11)
   85fc8:	681d883a 	mov	r14,r13
   85fcc:	581f883a 	mov	r15,r11
   85fd0:	1811883a 	mov	r8,r3
   85fd4:	5825883a 	mov	r18,r11
   85fd8:	000f883a 	mov	r7,zero
   85fdc:	00000106 	br	85fe4 <__multiply+0x144>
   85fe0:	8825883a 	mov	r18,r17
   85fe4:	7140000b 	ldhu	r5,0(r14)
   85fe8:	4010d43a 	srli	r8,r8,16
   85fec:	193fffcc 	andi	r4,r3,65535
   85ff0:	2fcb383a 	mul	r5,r5,ra
   85ff4:	7bc00104 	addi	r15,r15,4
   85ff8:	73800104 	addi	r14,r14,4
   85ffc:	2a0b883a 	add	r5,r5,r8
   86000:	29cb883a 	add	r5,r5,r7
   86004:	2806943a 	slli	r3,r5,16
   86008:	94400104 	addi	r17,r18,4
   8600c:	280ad43a 	srli	r5,r5,16
   86010:	1908b03a 	or	r4,r3,r4
   86014:	793fff15 	stw	r4,-4(r15)
   86018:	70ffff17 	ldw	r3,-4(r14)
   8601c:	8a000017 	ldw	r8,0(r17)
   86020:	1806d43a 	srli	r3,r3,16
   86024:	413fffcc 	andi	r4,r8,65535
   86028:	1fc7383a 	mul	r3,r3,ra
   8602c:	1907883a 	add	r3,r3,r4
   86030:	1947883a 	add	r3,r3,r5
   86034:	180ed43a 	srli	r7,r3,16
   86038:	727fe936 	bltu	r14,r9,85fe0 <__multiply+0x140>
   8603c:	90c00115 	stw	r3,4(r18)
   86040:	31800104 	addi	r6,r6,4
   86044:	5ac00104 	addi	r11,r11,4
   86048:	333fbe36 	bltu	r6,r12,85f44 <__multiply+0xa4>
   8604c:	0400090e 	bge	zero,r16,86074 <__multiply+0x1d4>
   86050:	50ffff17 	ldw	r3,-4(r10)
   86054:	52bfff04 	addi	r10,r10,-4
   86058:	18000326 	beq	r3,zero,86068 <__multiply+0x1c8>
   8605c:	00000506 	br	86074 <__multiply+0x1d4>
   86060:	50c00017 	ldw	r3,0(r10)
   86064:	1800031e 	bne	r3,zero,86074 <__multiply+0x1d4>
   86068:	843fffc4 	addi	r16,r16,-1
   8606c:	52bfff04 	addi	r10,r10,-4
   86070:	803ffb1e 	bne	r16,zero,86060 <__multiply+0x1c0>
   86074:	14000415 	stw	r16,16(r2)
   86078:	dfc00517 	ldw	ra,20(sp)
   8607c:	dd000417 	ldw	r20,16(sp)
   86080:	dcc00317 	ldw	r19,12(sp)
   86084:	dc800217 	ldw	r18,8(sp)
   86088:	dc400117 	ldw	r17,4(sp)
   8608c:	dc000017 	ldw	r16,0(sp)
   86090:	dec00604 	addi	sp,sp,24
   86094:	f800283a 	ret

00086098 <__pow5mult>:
   86098:	defffa04 	addi	sp,sp,-24
   8609c:	dcc00315 	stw	r19,12(sp)
   860a0:	dc000015 	stw	r16,0(sp)
   860a4:	dfc00515 	stw	ra,20(sp)
   860a8:	dd000415 	stw	r20,16(sp)
   860ac:	dc800215 	stw	r18,8(sp)
   860b0:	dc400115 	stw	r17,4(sp)
   860b4:	308000cc 	andi	r2,r6,3
   860b8:	3021883a 	mov	r16,r6
   860bc:	2027883a 	mov	r19,r4
   860c0:	10002f1e 	bne	r2,zero,86180 <__pow5mult+0xe8>
   860c4:	2825883a 	mov	r18,r5
   860c8:	8021d0ba 	srai	r16,r16,2
   860cc:	80001a26 	beq	r16,zero,86138 <__pow5mult+0xa0>
   860d0:	9c401217 	ldw	r17,72(r19)
   860d4:	8800061e 	bne	r17,zero,860f0 <__pow5mult+0x58>
   860d8:	00003406 	br	861ac <__pow5mult+0x114>
   860dc:	8021d07a 	srai	r16,r16,1
   860e0:	80001526 	beq	r16,zero,86138 <__pow5mult+0xa0>
   860e4:	88800017 	ldw	r2,0(r17)
   860e8:	10001c26 	beq	r2,zero,8615c <__pow5mult+0xc4>
   860ec:	1023883a 	mov	r17,r2
   860f0:	8080004c 	andi	r2,r16,1
   860f4:	103ff926 	beq	r2,zero,860dc <__pow5mult+0x44>
   860f8:	880d883a 	mov	r6,r17
   860fc:	900b883a 	mov	r5,r18
   86100:	9809883a 	mov	r4,r19
   86104:	0085ea00 	call	85ea0 <__multiply>
   86108:	90001b26 	beq	r18,zero,86178 <__pow5mult+0xe0>
   8610c:	91000117 	ldw	r4,4(r18)
   86110:	98c01317 	ldw	r3,76(r19)
   86114:	8021d07a 	srai	r16,r16,1
   86118:	2109883a 	add	r4,r4,r4
   8611c:	2109883a 	add	r4,r4,r4
   86120:	1907883a 	add	r3,r3,r4
   86124:	19000017 	ldw	r4,0(r3)
   86128:	91000015 	stw	r4,0(r18)
   8612c:	1c800015 	stw	r18,0(r3)
   86130:	1025883a 	mov	r18,r2
   86134:	803feb1e 	bne	r16,zero,860e4 <__pow5mult+0x4c>
   86138:	9005883a 	mov	r2,r18
   8613c:	dfc00517 	ldw	ra,20(sp)
   86140:	dd000417 	ldw	r20,16(sp)
   86144:	dcc00317 	ldw	r19,12(sp)
   86148:	dc800217 	ldw	r18,8(sp)
   8614c:	dc400117 	ldw	r17,4(sp)
   86150:	dc000017 	ldw	r16,0(sp)
   86154:	dec00604 	addi	sp,sp,24
   86158:	f800283a 	ret
   8615c:	880d883a 	mov	r6,r17
   86160:	880b883a 	mov	r5,r17
   86164:	9809883a 	mov	r4,r19
   86168:	0085ea00 	call	85ea0 <__multiply>
   8616c:	88800015 	stw	r2,0(r17)
   86170:	10000015 	stw	zero,0(r2)
   86174:	003fdd06 	br	860ec <__pow5mult+0x54>
   86178:	1025883a 	mov	r18,r2
   8617c:	003fd706 	br	860dc <__pow5mult+0x44>
   86180:	10bfffc4 	addi	r2,r2,-1
   86184:	1085883a 	add	r2,r2,r2
   86188:	00c00274 	movhi	r3,9
   8618c:	18fe6e04 	addi	r3,r3,-1608
   86190:	1085883a 	add	r2,r2,r2
   86194:	1885883a 	add	r2,r3,r2
   86198:	11800017 	ldw	r6,0(r2)
   8619c:	000f883a 	mov	r7,zero
   861a0:	0085b280 	call	85b28 <__multadd>
   861a4:	1025883a 	mov	r18,r2
   861a8:	003fc706 	br	860c8 <__pow5mult+0x30>
   861ac:	05000044 	movi	r20,1
   861b0:	a00b883a 	mov	r5,r20
   861b4:	9809883a 	mov	r4,r19
   861b8:	0085a580 	call	85a58 <_Balloc>
   861bc:	1023883a 	mov	r17,r2
   861c0:	00809c44 	movi	r2,625
   861c4:	88800515 	stw	r2,20(r17)
   861c8:	8d000415 	stw	r20,16(r17)
   861cc:	9c401215 	stw	r17,72(r19)
   861d0:	88000015 	stw	zero,0(r17)
   861d4:	003fc606 	br	860f0 <__pow5mult+0x58>

000861d8 <__lshift>:
   861d8:	defff904 	addi	sp,sp,-28
   861dc:	dd400515 	stw	r21,20(sp)
   861e0:	dcc00315 	stw	r19,12(sp)
   861e4:	302bd17a 	srai	r21,r6,5
   861e8:	2cc00417 	ldw	r19,16(r5)
   861ec:	28800217 	ldw	r2,8(r5)
   861f0:	dd000415 	stw	r20,16(sp)
   861f4:	ace7883a 	add	r19,r21,r19
   861f8:	dc800215 	stw	r18,8(sp)
   861fc:	dc400115 	stw	r17,4(sp)
   86200:	dc000015 	stw	r16,0(sp)
   86204:	dfc00615 	stw	ra,24(sp)
   86208:	9c000044 	addi	r16,r19,1
   8620c:	2823883a 	mov	r17,r5
   86210:	3029883a 	mov	r20,r6
   86214:	2025883a 	mov	r18,r4
   86218:	29400117 	ldw	r5,4(r5)
   8621c:	1400030e 	bge	r2,r16,8622c <__lshift+0x54>
   86220:	1085883a 	add	r2,r2,r2
   86224:	29400044 	addi	r5,r5,1
   86228:	143ffd16 	blt	r2,r16,86220 <__lshift+0x48>
   8622c:	9009883a 	mov	r4,r18
   86230:	0085a580 	call	85a58 <_Balloc>
   86234:	10c00504 	addi	r3,r2,20
   86238:	0540070e 	bge	zero,r21,86258 <__lshift+0x80>
   8623c:	ad6b883a 	add	r21,r21,r21
   86240:	ad6b883a 	add	r21,r21,r21
   86244:	1809883a 	mov	r4,r3
   86248:	1d47883a 	add	r3,r3,r21
   8624c:	20000015 	stw	zero,0(r4)
   86250:	21000104 	addi	r4,r4,4
   86254:	193ffd1e 	bne	r3,r4,8624c <__lshift+0x74>
   86258:	8a000417 	ldw	r8,16(r17)
   8625c:	89000504 	addi	r4,r17,20
   86260:	a18007cc 	andi	r6,r20,31
   86264:	4211883a 	add	r8,r8,r8
   86268:	4211883a 	add	r8,r8,r8
   8626c:	2211883a 	add	r8,r4,r8
   86270:	30002326 	beq	r6,zero,86300 <__lshift+0x128>
   86274:	02400804 	movi	r9,32
   86278:	4993c83a 	sub	r9,r9,r6
   8627c:	000b883a 	mov	r5,zero
   86280:	21c00017 	ldw	r7,0(r4)
   86284:	1815883a 	mov	r10,r3
   86288:	18c00104 	addi	r3,r3,4
   8628c:	398e983a 	sll	r7,r7,r6
   86290:	21000104 	addi	r4,r4,4
   86294:	394ab03a 	or	r5,r7,r5
   86298:	197fff15 	stw	r5,-4(r3)
   8629c:	217fff17 	ldw	r5,-4(r4)
   862a0:	2a4ad83a 	srl	r5,r5,r9
   862a4:	223ff636 	bltu	r4,r8,86280 <__lshift+0xa8>
   862a8:	51400115 	stw	r5,4(r10)
   862ac:	28001a1e 	bne	r5,zero,86318 <__lshift+0x140>
   862b0:	843fffc4 	addi	r16,r16,-1
   862b4:	14000415 	stw	r16,16(r2)
   862b8:	88000826 	beq	r17,zero,862dc <__lshift+0x104>
   862bc:	89000117 	ldw	r4,4(r17)
   862c0:	90c01317 	ldw	r3,76(r18)
   862c4:	2109883a 	add	r4,r4,r4
   862c8:	2109883a 	add	r4,r4,r4
   862cc:	1907883a 	add	r3,r3,r4
   862d0:	19000017 	ldw	r4,0(r3)
   862d4:	89000015 	stw	r4,0(r17)
   862d8:	1c400015 	stw	r17,0(r3)
   862dc:	dfc00617 	ldw	ra,24(sp)
   862e0:	dd400517 	ldw	r21,20(sp)
   862e4:	dd000417 	ldw	r20,16(sp)
   862e8:	dcc00317 	ldw	r19,12(sp)
   862ec:	dc800217 	ldw	r18,8(sp)
   862f0:	dc400117 	ldw	r17,4(sp)
   862f4:	dc000017 	ldw	r16,0(sp)
   862f8:	dec00704 	addi	sp,sp,28
   862fc:	f800283a 	ret
   86300:	21400017 	ldw	r5,0(r4)
   86304:	18c00104 	addi	r3,r3,4
   86308:	21000104 	addi	r4,r4,4
   8630c:	197fff15 	stw	r5,-4(r3)
   86310:	223ffb36 	bltu	r4,r8,86300 <__lshift+0x128>
   86314:	003fe606 	br	862b0 <__lshift+0xd8>
   86318:	9c000084 	addi	r16,r19,2
   8631c:	003fe406 	br	862b0 <__lshift+0xd8>

00086320 <__mcmp>:
   86320:	20800417 	ldw	r2,16(r4)
   86324:	28c00417 	ldw	r3,16(r5)
   86328:	10c5c83a 	sub	r2,r2,r3
   8632c:	1000111e 	bne	r2,zero,86374 <__mcmp+0x54>
   86330:	18c7883a 	add	r3,r3,r3
   86334:	18c7883a 	add	r3,r3,r3
   86338:	21000504 	addi	r4,r4,20
   8633c:	29400504 	addi	r5,r5,20
   86340:	20c5883a 	add	r2,r4,r3
   86344:	28cb883a 	add	r5,r5,r3
   86348:	00000106 	br	86350 <__mcmp+0x30>
   8634c:	20800a2e 	bgeu	r4,r2,86378 <__mcmp+0x58>
   86350:	10bfff04 	addi	r2,r2,-4
   86354:	297fff04 	addi	r5,r5,-4
   86358:	11800017 	ldw	r6,0(r2)
   8635c:	28c00017 	ldw	r3,0(r5)
   86360:	30fffa26 	beq	r6,r3,8634c <__mcmp+0x2c>
   86364:	30c00236 	bltu	r6,r3,86370 <__mcmp+0x50>
   86368:	00800044 	movi	r2,1
   8636c:	f800283a 	ret
   86370:	00bfffc4 	movi	r2,-1
   86374:	f800283a 	ret
   86378:	0005883a 	mov	r2,zero
   8637c:	f800283a 	ret

00086380 <__mdiff>:
   86380:	28c00417 	ldw	r3,16(r5)
   86384:	30800417 	ldw	r2,16(r6)
   86388:	defffa04 	addi	sp,sp,-24
   8638c:	dcc00315 	stw	r19,12(sp)
   86390:	dc800215 	stw	r18,8(sp)
   86394:	dfc00515 	stw	ra,20(sp)
   86398:	dd000415 	stw	r20,16(sp)
   8639c:	dc400115 	stw	r17,4(sp)
   863a0:	dc000015 	stw	r16,0(sp)
   863a4:	1887c83a 	sub	r3,r3,r2
   863a8:	2825883a 	mov	r18,r5
   863ac:	3027883a 	mov	r19,r6
   863b0:	1800141e 	bne	r3,zero,86404 <__mdiff+0x84>
   863b4:	1085883a 	add	r2,r2,r2
   863b8:	1085883a 	add	r2,r2,r2
   863bc:	2a000504 	addi	r8,r5,20
   863c0:	34000504 	addi	r16,r6,20
   863c4:	4087883a 	add	r3,r8,r2
   863c8:	8085883a 	add	r2,r16,r2
   863cc:	00000106 	br	863d4 <__mdiff+0x54>
   863d0:	40c0592e 	bgeu	r8,r3,86538 <__mdiff+0x1b8>
   863d4:	18ffff04 	addi	r3,r3,-4
   863d8:	10bfff04 	addi	r2,r2,-4
   863dc:	19c00017 	ldw	r7,0(r3)
   863e0:	11400017 	ldw	r5,0(r2)
   863e4:	397ffa26 	beq	r7,r5,863d0 <__mdiff+0x50>
   863e8:	3940592e 	bgeu	r7,r5,86550 <__mdiff+0x1d0>
   863ec:	9005883a 	mov	r2,r18
   863f0:	4023883a 	mov	r17,r8
   863f4:	9825883a 	mov	r18,r19
   863f8:	05000044 	movi	r20,1
   863fc:	1027883a 	mov	r19,r2
   86400:	00000406 	br	86414 <__mdiff+0x94>
   86404:	18005616 	blt	r3,zero,86560 <__mdiff+0x1e0>
   86408:	34400504 	addi	r17,r6,20
   8640c:	2c000504 	addi	r16,r5,20
   86410:	0029883a 	mov	r20,zero
   86414:	91400117 	ldw	r5,4(r18)
   86418:	0085a580 	call	85a58 <_Balloc>
   8641c:	92400417 	ldw	r9,16(r18)
   86420:	9b000417 	ldw	r12,16(r19)
   86424:	12c00504 	addi	r11,r2,20
   86428:	4a51883a 	add	r8,r9,r9
   8642c:	6319883a 	add	r12,r12,r12
   86430:	4211883a 	add	r8,r8,r8
   86434:	6319883a 	add	r12,r12,r12
   86438:	15000315 	stw	r20,12(r2)
   8643c:	8211883a 	add	r8,r16,r8
   86440:	8b19883a 	add	r12,r17,r12
   86444:	0007883a 	mov	r3,zero
   86448:	81400017 	ldw	r5,0(r16)
   8644c:	89c00017 	ldw	r7,0(r17)
   86450:	59800104 	addi	r6,r11,4
   86454:	293fffcc 	andi	r4,r5,65535
   86458:	20c7883a 	add	r3,r4,r3
   8645c:	393fffcc 	andi	r4,r7,65535
   86460:	1909c83a 	sub	r4,r3,r4
   86464:	280ad43a 	srli	r5,r5,16
   86468:	380ed43a 	srli	r7,r7,16
   8646c:	2007d43a 	srai	r3,r4,16
   86470:	213fffcc 	andi	r4,r4,65535
   86474:	29cbc83a 	sub	r5,r5,r7
   86478:	28c7883a 	add	r3,r5,r3
   8647c:	180a943a 	slli	r5,r3,16
   86480:	8c400104 	addi	r17,r17,4
   86484:	84000104 	addi	r16,r16,4
   86488:	2908b03a 	or	r4,r5,r4
   8648c:	59000015 	stw	r4,0(r11)
   86490:	1807d43a 	srai	r3,r3,16
   86494:	3015883a 	mov	r10,r6
   86498:	3017883a 	mov	r11,r6
   8649c:	8b3fea36 	bltu	r17,r12,86448 <__mdiff+0xc8>
   864a0:	8200162e 	bgeu	r16,r8,864fc <__mdiff+0x17c>
   864a4:	8017883a 	mov	r11,r16
   864a8:	59400017 	ldw	r5,0(r11)
   864ac:	31800104 	addi	r6,r6,4
   864b0:	5ac00104 	addi	r11,r11,4
   864b4:	293fffcc 	andi	r4,r5,65535
   864b8:	20c7883a 	add	r3,r4,r3
   864bc:	280ed43a 	srli	r7,r5,16
   864c0:	180bd43a 	srai	r5,r3,16
   864c4:	193fffcc 	andi	r4,r3,65535
   864c8:	3947883a 	add	r3,r7,r5
   864cc:	180a943a 	slli	r5,r3,16
   864d0:	1807d43a 	srai	r3,r3,16
   864d4:	2908b03a 	or	r4,r5,r4
   864d8:	313fff15 	stw	r4,-4(r6)
   864dc:	5a3ff236 	bltu	r11,r8,864a8 <__mdiff+0x128>
   864e0:	0406303a 	nor	r3,zero,r16
   864e4:	1a07883a 	add	r3,r3,r8
   864e8:	1806d0ba 	srli	r3,r3,2
   864ec:	18c00044 	addi	r3,r3,1
   864f0:	18c7883a 	add	r3,r3,r3
   864f4:	18c7883a 	add	r3,r3,r3
   864f8:	50d5883a 	add	r10,r10,r3
   864fc:	50ffff04 	addi	r3,r10,-4
   86500:	2000041e 	bne	r4,zero,86514 <__mdiff+0x194>
   86504:	18ffff04 	addi	r3,r3,-4
   86508:	19000017 	ldw	r4,0(r3)
   8650c:	4a7fffc4 	addi	r9,r9,-1
   86510:	203ffc26 	beq	r4,zero,86504 <__mdiff+0x184>
   86514:	12400415 	stw	r9,16(r2)
   86518:	dfc00517 	ldw	ra,20(sp)
   8651c:	dd000417 	ldw	r20,16(sp)
   86520:	dcc00317 	ldw	r19,12(sp)
   86524:	dc800217 	ldw	r18,8(sp)
   86528:	dc400117 	ldw	r17,4(sp)
   8652c:	dc000017 	ldw	r16,0(sp)
   86530:	dec00604 	addi	sp,sp,24
   86534:	f800283a 	ret
   86538:	000b883a 	mov	r5,zero
   8653c:	0085a580 	call	85a58 <_Balloc>
   86540:	00c00044 	movi	r3,1
   86544:	10c00415 	stw	r3,16(r2)
   86548:	10000515 	stw	zero,20(r2)
   8654c:	003ff206 	br	86518 <__mdiff+0x198>
   86550:	8023883a 	mov	r17,r16
   86554:	0029883a 	mov	r20,zero
   86558:	4021883a 	mov	r16,r8
   8655c:	003fad06 	br	86414 <__mdiff+0x94>
   86560:	9005883a 	mov	r2,r18
   86564:	94400504 	addi	r17,r18,20
   86568:	9c000504 	addi	r16,r19,20
   8656c:	9825883a 	mov	r18,r19
   86570:	05000044 	movi	r20,1
   86574:	1027883a 	mov	r19,r2
   86578:	003fa606 	br	86414 <__mdiff+0x94>

0008657c <__ulp>:
   8657c:	295ffc2c 	andhi	r5,r5,32752
   86580:	00bf3034 	movhi	r2,64704
   86584:	2887883a 	add	r3,r5,r2
   86588:	00c0020e 	bge	zero,r3,86594 <__ulp+0x18>
   8658c:	0005883a 	mov	r2,zero
   86590:	f800283a 	ret
   86594:	00c7c83a 	sub	r3,zero,r3
   86598:	1807d53a 	srai	r3,r3,20
   8659c:	008004c4 	movi	r2,19
   865a0:	10c00b0e 	bge	r2,r3,865d0 <__ulp+0x54>
   865a4:	18bffb04 	addi	r2,r3,-20
   865a8:	01000784 	movi	r4,30
   865ac:	0007883a 	mov	r3,zero
   865b0:	20800516 	blt	r4,r2,865c8 <__ulp+0x4c>
   865b4:	010007c4 	movi	r4,31
   865b8:	2089c83a 	sub	r4,r4,r2
   865bc:	00800044 	movi	r2,1
   865c0:	1104983a 	sll	r2,r2,r4
   865c4:	f800283a 	ret
   865c8:	00800044 	movi	r2,1
   865cc:	f800283a 	ret
   865d0:	01400234 	movhi	r5,8
   865d4:	28c7d83a 	sra	r3,r5,r3
   865d8:	0005883a 	mov	r2,zero
   865dc:	f800283a 	ret

000865e0 <__b2d>:
   865e0:	defffa04 	addi	sp,sp,-24
   865e4:	dc000015 	stw	r16,0(sp)
   865e8:	24000417 	ldw	r16,16(r4)
   865ec:	dc400115 	stw	r17,4(sp)
   865f0:	24400504 	addi	r17,r4,20
   865f4:	8421883a 	add	r16,r16,r16
   865f8:	8421883a 	add	r16,r16,r16
   865fc:	8c21883a 	add	r16,r17,r16
   86600:	dc800215 	stw	r18,8(sp)
   86604:	84bfff17 	ldw	r18,-4(r16)
   86608:	dd000415 	stw	r20,16(sp)
   8660c:	dcc00315 	stw	r19,12(sp)
   86610:	9009883a 	mov	r4,r18
   86614:	2829883a 	mov	r20,r5
   86618:	dfc00515 	stw	ra,20(sp)
   8661c:	0085d4c0 	call	85d4c <__hi0bits>
   86620:	00c00804 	movi	r3,32
   86624:	1889c83a 	sub	r4,r3,r2
   86628:	a1000015 	stw	r4,0(r20)
   8662c:	01000284 	movi	r4,10
   86630:	84ffff04 	addi	r19,r16,-4
   86634:	20801216 	blt	r4,r2,86680 <__b2d+0xa0>
   86638:	018002c4 	movi	r6,11
   8663c:	308dc83a 	sub	r6,r6,r2
   86640:	9186d83a 	srl	r3,r18,r6
   86644:	18cffc34 	orhi	r3,r3,16368
   86648:	8cc0212e 	bgeu	r17,r19,866d0 <__b2d+0xf0>
   8664c:	813ffe17 	ldw	r4,-8(r16)
   86650:	218cd83a 	srl	r6,r4,r6
   86654:	10800544 	addi	r2,r2,21
   86658:	9084983a 	sll	r2,r18,r2
   8665c:	1184b03a 	or	r2,r2,r6
   86660:	dfc00517 	ldw	ra,20(sp)
   86664:	dd000417 	ldw	r20,16(sp)
   86668:	dcc00317 	ldw	r19,12(sp)
   8666c:	dc800217 	ldw	r18,8(sp)
   86670:	dc400117 	ldw	r17,4(sp)
   86674:	dc000017 	ldw	r16,0(sp)
   86678:	dec00604 	addi	sp,sp,24
   8667c:	f800283a 	ret
   86680:	8cc00f2e 	bgeu	r17,r19,866c0 <__b2d+0xe0>
   86684:	117ffd44 	addi	r5,r2,-11
   86688:	80bffe17 	ldw	r2,-8(r16)
   8668c:	28000e26 	beq	r5,zero,866c8 <__b2d+0xe8>
   86690:	1949c83a 	sub	r4,r3,r5
   86694:	9164983a 	sll	r18,r18,r5
   86698:	1106d83a 	srl	r3,r2,r4
   8669c:	81bffe04 	addi	r6,r16,-8
   866a0:	948ffc34 	orhi	r18,r18,16368
   866a4:	90c6b03a 	or	r3,r18,r3
   866a8:	89800e2e 	bgeu	r17,r6,866e4 <__b2d+0x104>
   866ac:	81bffd17 	ldw	r6,-12(r16)
   866b0:	1144983a 	sll	r2,r2,r5
   866b4:	310ad83a 	srl	r5,r6,r4
   866b8:	2884b03a 	or	r2,r5,r2
   866bc:	003fe806 	br	86660 <__b2d+0x80>
   866c0:	10bffd44 	addi	r2,r2,-11
   866c4:	1000041e 	bne	r2,zero,866d8 <__b2d+0xf8>
   866c8:	90cffc34 	orhi	r3,r18,16368
   866cc:	003fe406 	br	86660 <__b2d+0x80>
   866d0:	000d883a 	mov	r6,zero
   866d4:	003fdf06 	br	86654 <__b2d+0x74>
   866d8:	90a4983a 	sll	r18,r18,r2
   866dc:	0005883a 	mov	r2,zero
   866e0:	003ff906 	br	866c8 <__b2d+0xe8>
   866e4:	1144983a 	sll	r2,r2,r5
   866e8:	003fdd06 	br	86660 <__b2d+0x80>

000866ec <__d2b>:
   866ec:	defff804 	addi	sp,sp,-32
   866f0:	dc000215 	stw	r16,8(sp)
   866f4:	3021883a 	mov	r16,r6
   866f8:	dc400315 	stw	r17,12(sp)
   866fc:	8022907a 	slli	r17,r16,1
   86700:	dd000615 	stw	r20,24(sp)
   86704:	2829883a 	mov	r20,r5
   86708:	01400044 	movi	r5,1
   8670c:	dcc00515 	stw	r19,20(sp)
   86710:	dc800415 	stw	r18,16(sp)
   86714:	dfc00715 	stw	ra,28(sp)
   86718:	3825883a 	mov	r18,r7
   8671c:	8822d57a 	srli	r17,r17,21
   86720:	0085a580 	call	85a58 <_Balloc>
   86724:	1027883a 	mov	r19,r2
   86728:	00800434 	movhi	r2,16
   8672c:	10bfffc4 	addi	r2,r2,-1
   86730:	808c703a 	and	r6,r16,r2
   86734:	88000126 	beq	r17,zero,8673c <__d2b+0x50>
   86738:	31800434 	orhi	r6,r6,16
   8673c:	d9800015 	stw	r6,0(sp)
   86740:	a0002426 	beq	r20,zero,867d4 <__d2b+0xe8>
   86744:	d9000104 	addi	r4,sp,4
   86748:	dd000115 	stw	r20,4(sp)
   8674c:	0085db40 	call	85db4 <__lo0bits>
   86750:	d8c00017 	ldw	r3,0(sp)
   86754:	10002f1e 	bne	r2,zero,86814 <__d2b+0x128>
   86758:	d9000117 	ldw	r4,4(sp)
   8675c:	99000515 	stw	r4,20(r19)
   86760:	1821003a 	cmpeq	r16,r3,zero
   86764:	01000084 	movi	r4,2
   86768:	2421c83a 	sub	r16,r4,r16
   8676c:	98c00615 	stw	r3,24(r19)
   86770:	9c000415 	stw	r16,16(r19)
   86774:	88001f1e 	bne	r17,zero,867f4 <__d2b+0x108>
   86778:	10bef384 	addi	r2,r2,-1074
   8677c:	90800015 	stw	r2,0(r18)
   86780:	00900034 	movhi	r2,16384
   86784:	10bfffc4 	addi	r2,r2,-1
   86788:	8085883a 	add	r2,r16,r2
   8678c:	1085883a 	add	r2,r2,r2
   86790:	1085883a 	add	r2,r2,r2
   86794:	9885883a 	add	r2,r19,r2
   86798:	11000517 	ldw	r4,20(r2)
   8679c:	8020917a 	slli	r16,r16,5
   867a0:	0085d4c0 	call	85d4c <__hi0bits>
   867a4:	d8c00817 	ldw	r3,32(sp)
   867a8:	8085c83a 	sub	r2,r16,r2
   867ac:	18800015 	stw	r2,0(r3)
   867b0:	9805883a 	mov	r2,r19
   867b4:	dfc00717 	ldw	ra,28(sp)
   867b8:	dd000617 	ldw	r20,24(sp)
   867bc:	dcc00517 	ldw	r19,20(sp)
   867c0:	dc800417 	ldw	r18,16(sp)
   867c4:	dc400317 	ldw	r17,12(sp)
   867c8:	dc000217 	ldw	r16,8(sp)
   867cc:	dec00804 	addi	sp,sp,32
   867d0:	f800283a 	ret
   867d4:	d809883a 	mov	r4,sp
   867d8:	0085db40 	call	85db4 <__lo0bits>
   867dc:	d8c00017 	ldw	r3,0(sp)
   867e0:	04000044 	movi	r16,1
   867e4:	9c000415 	stw	r16,16(r19)
   867e8:	98c00515 	stw	r3,20(r19)
   867ec:	10800804 	addi	r2,r2,32
   867f0:	883fe126 	beq	r17,zero,86778 <__d2b+0x8c>
   867f4:	00c00d44 	movi	r3,53
   867f8:	8c7ef344 	addi	r17,r17,-1075
   867fc:	88a3883a 	add	r17,r17,r2
   86800:	1885c83a 	sub	r2,r3,r2
   86804:	d8c00817 	ldw	r3,32(sp)
   86808:	94400015 	stw	r17,0(r18)
   8680c:	18800015 	stw	r2,0(r3)
   86810:	003fe706 	br	867b0 <__d2b+0xc4>
   86814:	01000804 	movi	r4,32
   86818:	2089c83a 	sub	r4,r4,r2
   8681c:	1908983a 	sll	r4,r3,r4
   86820:	d9400117 	ldw	r5,4(sp)
   86824:	1886d83a 	srl	r3,r3,r2
   86828:	2148b03a 	or	r4,r4,r5
   8682c:	99000515 	stw	r4,20(r19)
   86830:	d8c00015 	stw	r3,0(sp)
   86834:	003fca06 	br	86760 <__d2b+0x74>

00086838 <__ratio>:
   86838:	defff904 	addi	sp,sp,-28
   8683c:	dc400315 	stw	r17,12(sp)
   86840:	2823883a 	mov	r17,r5
   86844:	d9400104 	addi	r5,sp,4
   86848:	dfc00615 	stw	ra,24(sp)
   8684c:	dcc00515 	stw	r19,20(sp)
   86850:	dc800415 	stw	r18,16(sp)
   86854:	2027883a 	mov	r19,r4
   86858:	dc000215 	stw	r16,8(sp)
   8685c:	00865e00 	call	865e0 <__b2d>
   86860:	d80b883a 	mov	r5,sp
   86864:	8809883a 	mov	r4,r17
   86868:	1025883a 	mov	r18,r2
   8686c:	1821883a 	mov	r16,r3
   86870:	00865e00 	call	865e0 <__b2d>
   86874:	8a000417 	ldw	r8,16(r17)
   86878:	99000417 	ldw	r4,16(r19)
   8687c:	d9400117 	ldw	r5,4(sp)
   86880:	2209c83a 	sub	r4,r4,r8
   86884:	2010917a 	slli	r8,r4,5
   86888:	d9000017 	ldw	r4,0(sp)
   8688c:	2909c83a 	sub	r4,r5,r4
   86890:	4109883a 	add	r4,r8,r4
   86894:	01000e0e 	bge	zero,r4,868d0 <__ratio+0x98>
   86898:	2008953a 	slli	r4,r4,20
   8689c:	2421883a 	add	r16,r4,r16
   868a0:	100d883a 	mov	r6,r2
   868a4:	180f883a 	mov	r7,r3
   868a8:	9009883a 	mov	r4,r18
   868ac:	800b883a 	mov	r5,r16
   868b0:	008add40 	call	8add4 <__divdf3>
   868b4:	dfc00617 	ldw	ra,24(sp)
   868b8:	dcc00517 	ldw	r19,20(sp)
   868bc:	dc800417 	ldw	r18,16(sp)
   868c0:	dc400317 	ldw	r17,12(sp)
   868c4:	dc000217 	ldw	r16,8(sp)
   868c8:	dec00704 	addi	sp,sp,28
   868cc:	f800283a 	ret
   868d0:	2008953a 	slli	r4,r4,20
   868d4:	1907c83a 	sub	r3,r3,r4
   868d8:	003ff106 	br	868a0 <__ratio+0x68>

000868dc <_mprec_log10>:
   868dc:	defffe04 	addi	sp,sp,-8
   868e0:	dc000015 	stw	r16,0(sp)
   868e4:	dfc00115 	stw	ra,4(sp)
   868e8:	008005c4 	movi	r2,23
   868ec:	2021883a 	mov	r16,r4
   868f0:	11000d0e 	bge	r2,r4,86928 <_mprec_log10+0x4c>
   868f4:	0005883a 	mov	r2,zero
   868f8:	00cffc34 	movhi	r3,16368
   868fc:	843fffc4 	addi	r16,r16,-1
   86900:	000d883a 	mov	r6,zero
   86904:	01d00934 	movhi	r7,16420
   86908:	1009883a 	mov	r4,r2
   8690c:	180b883a 	mov	r5,r3
   86910:	008b9140 	call	8b914 <__muldf3>
   86914:	803ff91e 	bne	r16,zero,868fc <_mprec_log10+0x20>
   86918:	dfc00117 	ldw	ra,4(sp)
   8691c:	dc000017 	ldw	r16,0(sp)
   86920:	dec00204 	addi	sp,sp,8
   86924:	f800283a 	ret
   86928:	202090fa 	slli	r16,r4,3
   8692c:	00800274 	movhi	r2,9
   86930:	10be8504 	addi	r2,r2,-1516
   86934:	1421883a 	add	r16,r2,r16
   86938:	80800017 	ldw	r2,0(r16)
   8693c:	80c00117 	ldw	r3,4(r16)
   86940:	dfc00117 	ldw	ra,4(sp)
   86944:	dc000017 	ldw	r16,0(sp)
   86948:	dec00204 	addi	sp,sp,8
   8694c:	f800283a 	ret

00086950 <__copybits>:
   86950:	297fffc4 	addi	r5,r5,-1
   86954:	280fd17a 	srai	r7,r5,5
   86958:	30c00417 	ldw	r3,16(r6)
   8695c:	30800504 	addi	r2,r6,20
   86960:	39c00044 	addi	r7,r7,1
   86964:	18c7883a 	add	r3,r3,r3
   86968:	39cf883a 	add	r7,r7,r7
   8696c:	18c7883a 	add	r3,r3,r3
   86970:	39cf883a 	add	r7,r7,r7
   86974:	10c7883a 	add	r3,r2,r3
   86978:	21cf883a 	add	r7,r4,r7
   8697c:	10c00d2e 	bgeu	r2,r3,869b4 <__copybits+0x64>
   86980:	200b883a 	mov	r5,r4
   86984:	12000017 	ldw	r8,0(r2)
   86988:	29400104 	addi	r5,r5,4
   8698c:	10800104 	addi	r2,r2,4
   86990:	2a3fff15 	stw	r8,-4(r5)
   86994:	10fffb36 	bltu	r2,r3,86984 <__copybits+0x34>
   86998:	1985c83a 	sub	r2,r3,r6
   8699c:	10bffac4 	addi	r2,r2,-21
   869a0:	1004d0ba 	srli	r2,r2,2
   869a4:	10800044 	addi	r2,r2,1
   869a8:	1085883a 	add	r2,r2,r2
   869ac:	1085883a 	add	r2,r2,r2
   869b0:	2089883a 	add	r4,r4,r2
   869b4:	21c0032e 	bgeu	r4,r7,869c4 <__copybits+0x74>
   869b8:	20000015 	stw	zero,0(r4)
   869bc:	21000104 	addi	r4,r4,4
   869c0:	21fffd36 	bltu	r4,r7,869b8 <__copybits+0x68>
   869c4:	f800283a 	ret

000869c8 <__any_on>:
   869c8:	20c00417 	ldw	r3,16(r4)
   869cc:	2805d17a 	srai	r2,r5,5
   869d0:	21000504 	addi	r4,r4,20
   869d4:	18800d0e 	bge	r3,r2,86a0c <__any_on+0x44>
   869d8:	18c7883a 	add	r3,r3,r3
   869dc:	18c7883a 	add	r3,r3,r3
   869e0:	20c7883a 	add	r3,r4,r3
   869e4:	20c0192e 	bgeu	r4,r3,86a4c <__any_on+0x84>
   869e8:	18bfff17 	ldw	r2,-4(r3)
   869ec:	18ffff04 	addi	r3,r3,-4
   869f0:	1000041e 	bne	r2,zero,86a04 <__any_on+0x3c>
   869f4:	20c0142e 	bgeu	r4,r3,86a48 <__any_on+0x80>
   869f8:	18ffff04 	addi	r3,r3,-4
   869fc:	19400017 	ldw	r5,0(r3)
   86a00:	283ffc26 	beq	r5,zero,869f4 <__any_on+0x2c>
   86a04:	00800044 	movi	r2,1
   86a08:	f800283a 	ret
   86a0c:	10c00a0e 	bge	r2,r3,86a38 <__any_on+0x70>
   86a10:	1085883a 	add	r2,r2,r2
   86a14:	1085883a 	add	r2,r2,r2
   86a18:	294007cc 	andi	r5,r5,31
   86a1c:	2087883a 	add	r3,r4,r2
   86a20:	283ff026 	beq	r5,zero,869e4 <__any_on+0x1c>
   86a24:	19800017 	ldw	r6,0(r3)
   86a28:	3144d83a 	srl	r2,r6,r5
   86a2c:	114a983a 	sll	r5,r2,r5
   86a30:	317ff41e 	bne	r6,r5,86a04 <__any_on+0x3c>
   86a34:	003feb06 	br	869e4 <__any_on+0x1c>
   86a38:	1085883a 	add	r2,r2,r2
   86a3c:	1085883a 	add	r2,r2,r2
   86a40:	2087883a 	add	r3,r4,r2
   86a44:	003fe706 	br	869e4 <__any_on+0x1c>
   86a48:	f800283a 	ret
   86a4c:	0005883a 	mov	r2,zero
   86a50:	f800283a 	ret

00086a54 <__fpclassifyd>:
   86a54:	00a00034 	movhi	r2,32768
   86a58:	10bfffc4 	addi	r2,r2,-1
   86a5c:	2884703a 	and	r2,r5,r2
   86a60:	10000726 	beq	r2,zero,86a80 <__fpclassifyd+0x2c>
   86a64:	00fffc34 	movhi	r3,65520
   86a68:	019ff834 	movhi	r6,32736
   86a6c:	28c7883a 	add	r3,r5,r3
   86a70:	31bfffc4 	addi	r6,r6,-1
   86a74:	30c00536 	bltu	r6,r3,86a8c <__fpclassifyd+0x38>
   86a78:	00800104 	movi	r2,4
   86a7c:	f800283a 	ret
   86a80:	2000021e 	bne	r4,zero,86a8c <__fpclassifyd+0x38>
   86a84:	00800084 	movi	r2,2
   86a88:	f800283a 	ret
   86a8c:	00dffc34 	movhi	r3,32752
   86a90:	019ff834 	movhi	r6,32736
   86a94:	28cb883a 	add	r5,r5,r3
   86a98:	31bfffc4 	addi	r6,r6,-1
   86a9c:	317ff62e 	bgeu	r6,r5,86a78 <__fpclassifyd+0x24>
   86aa0:	01400434 	movhi	r5,16
   86aa4:	297fffc4 	addi	r5,r5,-1
   86aa8:	28800236 	bltu	r5,r2,86ab4 <__fpclassifyd+0x60>
   86aac:	008000c4 	movi	r2,3
   86ab0:	f800283a 	ret
   86ab4:	10c00226 	beq	r2,r3,86ac0 <__fpclassifyd+0x6c>
   86ab8:	0005883a 	mov	r2,zero
   86abc:	f800283a 	ret
   86ac0:	2005003a 	cmpeq	r2,r4,zero
   86ac4:	f800283a 	ret

00086ac8 <_sbrk_r>:
   86ac8:	defffd04 	addi	sp,sp,-12
   86acc:	dc000015 	stw	r16,0(sp)
   86ad0:	04000274 	movhi	r16,9
   86ad4:	dc400115 	stw	r17,4(sp)
   86ad8:	840c8604 	addi	r16,r16,12824
   86adc:	2023883a 	mov	r17,r4
   86ae0:	2809883a 	mov	r4,r5
   86ae4:	dfc00215 	stw	ra,8(sp)
   86ae8:	80000015 	stw	zero,0(r16)
   86aec:	008d5c40 	call	8d5c4 <sbrk>
   86af0:	00ffffc4 	movi	r3,-1
   86af4:	10c00526 	beq	r2,r3,86b0c <_sbrk_r+0x44>
   86af8:	dfc00217 	ldw	ra,8(sp)
   86afc:	dc400117 	ldw	r17,4(sp)
   86b00:	dc000017 	ldw	r16,0(sp)
   86b04:	dec00304 	addi	sp,sp,12
   86b08:	f800283a 	ret
   86b0c:	80c00017 	ldw	r3,0(r16)
   86b10:	183ff926 	beq	r3,zero,86af8 <_sbrk_r+0x30>
   86b14:	88c00015 	stw	r3,0(r17)
   86b18:	003ff706 	br	86af8 <_sbrk_r+0x30>

00086b1c <__sread>:
   86b1c:	defffe04 	addi	sp,sp,-8
   86b20:	dc000015 	stw	r16,0(sp)
   86b24:	2821883a 	mov	r16,r5
   86b28:	2940038f 	ldh	r5,14(r5)
   86b2c:	dfc00115 	stw	ra,4(sp)
   86b30:	0088fc00 	call	88fc0 <_read_r>
   86b34:	10000716 	blt	r2,zero,86b54 <__sread+0x38>
   86b38:	80c01417 	ldw	r3,80(r16)
   86b3c:	1887883a 	add	r3,r3,r2
   86b40:	80c01415 	stw	r3,80(r16)
   86b44:	dfc00117 	ldw	ra,4(sp)
   86b48:	dc000017 	ldw	r16,0(sp)
   86b4c:	dec00204 	addi	sp,sp,8
   86b50:	f800283a 	ret
   86b54:	80c0030b 	ldhu	r3,12(r16)
   86b58:	18fbffcc 	andi	r3,r3,61439
   86b5c:	80c0030d 	sth	r3,12(r16)
   86b60:	dfc00117 	ldw	ra,4(sp)
   86b64:	dc000017 	ldw	r16,0(sp)
   86b68:	dec00204 	addi	sp,sp,8
   86b6c:	f800283a 	ret

00086b70 <__seofread>:
   86b70:	0005883a 	mov	r2,zero
   86b74:	f800283a 	ret

00086b78 <__swrite>:
   86b78:	2880030b 	ldhu	r2,12(r5)
   86b7c:	defffb04 	addi	sp,sp,-20
   86b80:	dcc00315 	stw	r19,12(sp)
   86b84:	dc800215 	stw	r18,8(sp)
   86b88:	dc400115 	stw	r17,4(sp)
   86b8c:	dc000015 	stw	r16,0(sp)
   86b90:	dfc00415 	stw	ra,16(sp)
   86b94:	10c0400c 	andi	r3,r2,256
   86b98:	2821883a 	mov	r16,r5
   86b9c:	2023883a 	mov	r17,r4
   86ba0:	3025883a 	mov	r18,r6
   86ba4:	3827883a 	mov	r19,r7
   86ba8:	18000526 	beq	r3,zero,86bc0 <__swrite+0x48>
   86bac:	2940038f 	ldh	r5,14(r5)
   86bb0:	01c00084 	movi	r7,2
   86bb4:	000d883a 	mov	r6,zero
   86bb8:	0088e040 	call	88e04 <_lseek_r>
   86bbc:	8080030b 	ldhu	r2,12(r16)
   86bc0:	8140038f 	ldh	r5,14(r16)
   86bc4:	10bbffcc 	andi	r2,r2,61439
   86bc8:	980f883a 	mov	r7,r19
   86bcc:	900d883a 	mov	r6,r18
   86bd0:	8809883a 	mov	r4,r17
   86bd4:	8080030d 	sth	r2,12(r16)
   86bd8:	dfc00417 	ldw	ra,16(sp)
   86bdc:	dcc00317 	ldw	r19,12(sp)
   86be0:	dc800217 	ldw	r18,8(sp)
   86be4:	dc400117 	ldw	r17,4(sp)
   86be8:	dc000017 	ldw	r16,0(sp)
   86bec:	dec00504 	addi	sp,sp,20
   86bf0:	00884141 	jmpi	88414 <_write_r>

00086bf4 <__sseek>:
   86bf4:	defffe04 	addi	sp,sp,-8
   86bf8:	dc000015 	stw	r16,0(sp)
   86bfc:	2821883a 	mov	r16,r5
   86c00:	2940038f 	ldh	r5,14(r5)
   86c04:	dfc00115 	stw	ra,4(sp)
   86c08:	0088e040 	call	88e04 <_lseek_r>
   86c0c:	00ffffc4 	movi	r3,-1
   86c10:	10c00826 	beq	r2,r3,86c34 <__sseek+0x40>
   86c14:	80c0030b 	ldhu	r3,12(r16)
   86c18:	80801415 	stw	r2,80(r16)
   86c1c:	18c40014 	ori	r3,r3,4096
   86c20:	80c0030d 	sth	r3,12(r16)
   86c24:	dfc00117 	ldw	ra,4(sp)
   86c28:	dc000017 	ldw	r16,0(sp)
   86c2c:	dec00204 	addi	sp,sp,8
   86c30:	f800283a 	ret
   86c34:	80c0030b 	ldhu	r3,12(r16)
   86c38:	18fbffcc 	andi	r3,r3,61439
   86c3c:	80c0030d 	sth	r3,12(r16)
   86c40:	dfc00117 	ldw	ra,4(sp)
   86c44:	dc000017 	ldw	r16,0(sp)
   86c48:	dec00204 	addi	sp,sp,8
   86c4c:	f800283a 	ret

00086c50 <__sclose>:
   86c50:	2940038f 	ldh	r5,14(r5)
   86c54:	00884741 	jmpi	88474 <_close_r>

00086c58 <strcmp>:
   86c58:	2144b03a 	or	r2,r4,r5
   86c5c:	108000cc 	andi	r2,r2,3
   86c60:	1000171e 	bne	r2,zero,86cc0 <strcmp+0x68>
   86c64:	20800017 	ldw	r2,0(r4)
   86c68:	28c00017 	ldw	r3,0(r5)
   86c6c:	10c0141e 	bne	r2,r3,86cc0 <strcmp+0x68>
   86c70:	027fbff4 	movhi	r9,65279
   86c74:	4a7fbfc4 	addi	r9,r9,-257
   86c78:	0086303a 	nor	r3,zero,r2
   86c7c:	02202074 	movhi	r8,32897
   86c80:	1245883a 	add	r2,r2,r9
   86c84:	42202004 	addi	r8,r8,-32640
   86c88:	10c4703a 	and	r2,r2,r3
   86c8c:	1204703a 	and	r2,r2,r8
   86c90:	10000226 	beq	r2,zero,86c9c <strcmp+0x44>
   86c94:	00002306 	br	86d24 <strcmp+0xcc>
   86c98:	1000221e 	bne	r2,zero,86d24 <strcmp+0xcc>
   86c9c:	21000104 	addi	r4,r4,4
   86ca0:	20c00017 	ldw	r3,0(r4)
   86ca4:	29400104 	addi	r5,r5,4
   86ca8:	29800017 	ldw	r6,0(r5)
   86cac:	1a4f883a 	add	r7,r3,r9
   86cb0:	00c4303a 	nor	r2,zero,r3
   86cb4:	3884703a 	and	r2,r7,r2
   86cb8:	1204703a 	and	r2,r2,r8
   86cbc:	19bff626 	beq	r3,r6,86c98 <strcmp+0x40>
   86cc0:	20800003 	ldbu	r2,0(r4)
   86cc4:	10c03fcc 	andi	r3,r2,255
   86cc8:	18c0201c 	xori	r3,r3,128
   86ccc:	18ffe004 	addi	r3,r3,-128
   86cd0:	18000c26 	beq	r3,zero,86d04 <strcmp+0xac>
   86cd4:	29800007 	ldb	r6,0(r5)
   86cd8:	19800326 	beq	r3,r6,86ce8 <strcmp+0x90>
   86cdc:	00001306 	br	86d2c <strcmp+0xd4>
   86ce0:	29800007 	ldb	r6,0(r5)
   86ce4:	11800b1e 	bne	r2,r6,86d14 <strcmp+0xbc>
   86ce8:	21000044 	addi	r4,r4,1
   86cec:	20c00003 	ldbu	r3,0(r4)
   86cf0:	29400044 	addi	r5,r5,1
   86cf4:	18803fcc 	andi	r2,r3,255
   86cf8:	1080201c 	xori	r2,r2,128
   86cfc:	10bfe004 	addi	r2,r2,-128
   86d00:	103ff71e 	bne	r2,zero,86ce0 <strcmp+0x88>
   86d04:	0007883a 	mov	r3,zero
   86d08:	28800003 	ldbu	r2,0(r5)
   86d0c:	1885c83a 	sub	r2,r3,r2
   86d10:	f800283a 	ret
   86d14:	28800003 	ldbu	r2,0(r5)
   86d18:	18c03fcc 	andi	r3,r3,255
   86d1c:	1885c83a 	sub	r2,r3,r2
   86d20:	f800283a 	ret
   86d24:	0005883a 	mov	r2,zero
   86d28:	f800283a 	ret
   86d2c:	10c03fcc 	andi	r3,r2,255
   86d30:	003ff506 	br	86d08 <strcmp+0xb0>

00086d34 <strlen>:
   86d34:	208000cc 	andi	r2,r4,3
   86d38:	10002026 	beq	r2,zero,86dbc <strlen+0x88>
   86d3c:	20800007 	ldb	r2,0(r4)
   86d40:	10002026 	beq	r2,zero,86dc4 <strlen+0x90>
   86d44:	2005883a 	mov	r2,r4
   86d48:	00000206 	br	86d54 <strlen+0x20>
   86d4c:	10c00007 	ldb	r3,0(r2)
   86d50:	18001826 	beq	r3,zero,86db4 <strlen+0x80>
   86d54:	10800044 	addi	r2,r2,1
   86d58:	10c000cc 	andi	r3,r2,3
   86d5c:	183ffb1e 	bne	r3,zero,86d4c <strlen+0x18>
   86d60:	10c00017 	ldw	r3,0(r2)
   86d64:	01ffbff4 	movhi	r7,65279
   86d68:	39ffbfc4 	addi	r7,r7,-257
   86d6c:	00ca303a 	nor	r5,zero,r3
   86d70:	01a02074 	movhi	r6,32897
   86d74:	19c7883a 	add	r3,r3,r7
   86d78:	31a02004 	addi	r6,r6,-32640
   86d7c:	1946703a 	and	r3,r3,r5
   86d80:	1986703a 	and	r3,r3,r6
   86d84:	1800091e 	bne	r3,zero,86dac <strlen+0x78>
   86d88:	10800104 	addi	r2,r2,4
   86d8c:	10c00017 	ldw	r3,0(r2)
   86d90:	19cb883a 	add	r5,r3,r7
   86d94:	00c6303a 	nor	r3,zero,r3
   86d98:	28c6703a 	and	r3,r5,r3
   86d9c:	1986703a 	and	r3,r3,r6
   86da0:	183ff926 	beq	r3,zero,86d88 <strlen+0x54>
   86da4:	00000106 	br	86dac <strlen+0x78>
   86da8:	10800044 	addi	r2,r2,1
   86dac:	10c00007 	ldb	r3,0(r2)
   86db0:	183ffd1e 	bne	r3,zero,86da8 <strlen+0x74>
   86db4:	1105c83a 	sub	r2,r2,r4
   86db8:	f800283a 	ret
   86dbc:	2005883a 	mov	r2,r4
   86dc0:	003fe706 	br	86d60 <strlen+0x2c>
   86dc4:	0005883a 	mov	r2,zero
   86dc8:	f800283a 	ret

00086dcc <__sprint_r.part.0>:
   86dcc:	28801917 	ldw	r2,100(r5)
   86dd0:	defff604 	addi	sp,sp,-40
   86dd4:	dd400515 	stw	r21,20(sp)
   86dd8:	dfc00915 	stw	ra,36(sp)
   86ddc:	df000815 	stw	fp,32(sp)
   86de0:	ddc00715 	stw	r23,28(sp)
   86de4:	dd800615 	stw	r22,24(sp)
   86de8:	dd000415 	stw	r20,16(sp)
   86dec:	dcc00315 	stw	r19,12(sp)
   86df0:	dc800215 	stw	r18,8(sp)
   86df4:	dc400115 	stw	r17,4(sp)
   86df8:	dc000015 	stw	r16,0(sp)
   86dfc:	1088000c 	andi	r2,r2,8192
   86e00:	302b883a 	mov	r21,r6
   86e04:	10002e26 	beq	r2,zero,86ec0 <__sprint_r.part.0+0xf4>
   86e08:	30800217 	ldw	r2,8(r6)
   86e0c:	35800017 	ldw	r22,0(r6)
   86e10:	10002926 	beq	r2,zero,86eb8 <__sprint_r.part.0+0xec>
   86e14:	2827883a 	mov	r19,r5
   86e18:	2029883a 	mov	r20,r4
   86e1c:	b5c00104 	addi	r23,r22,4
   86e20:	04bfffc4 	movi	r18,-1
   86e24:	bc400017 	ldw	r17,0(r23)
   86e28:	b4000017 	ldw	r16,0(r22)
   86e2c:	0039883a 	mov	fp,zero
   86e30:	8822d0ba 	srli	r17,r17,2
   86e34:	8800031e 	bne	r17,zero,86e44 <__sprint_r.part.0+0x78>
   86e38:	00001806 	br	86e9c <__sprint_r.part.0+0xd0>
   86e3c:	84000104 	addi	r16,r16,4
   86e40:	8f001526 	beq	r17,fp,86e98 <__sprint_r.part.0+0xcc>
   86e44:	81400017 	ldw	r5,0(r16)
   86e48:	980d883a 	mov	r6,r19
   86e4c:	a009883a 	mov	r4,r20
   86e50:	00887f40 	call	887f4 <_fputwc_r>
   86e54:	e7000044 	addi	fp,fp,1
   86e58:	14bff81e 	bne	r2,r18,86e3c <__sprint_r.part.0+0x70>
   86e5c:	9005883a 	mov	r2,r18
   86e60:	a8000215 	stw	zero,8(r21)
   86e64:	a8000115 	stw	zero,4(r21)
   86e68:	dfc00917 	ldw	ra,36(sp)
   86e6c:	df000817 	ldw	fp,32(sp)
   86e70:	ddc00717 	ldw	r23,28(sp)
   86e74:	dd800617 	ldw	r22,24(sp)
   86e78:	dd400517 	ldw	r21,20(sp)
   86e7c:	dd000417 	ldw	r20,16(sp)
   86e80:	dcc00317 	ldw	r19,12(sp)
   86e84:	dc800217 	ldw	r18,8(sp)
   86e88:	dc400117 	ldw	r17,4(sp)
   86e8c:	dc000017 	ldw	r16,0(sp)
   86e90:	dec00a04 	addi	sp,sp,40
   86e94:	f800283a 	ret
   86e98:	a8800217 	ldw	r2,8(r21)
   86e9c:	8c63883a 	add	r17,r17,r17
   86ea0:	8c63883a 	add	r17,r17,r17
   86ea4:	1445c83a 	sub	r2,r2,r17
   86ea8:	a8800215 	stw	r2,8(r21)
   86eac:	b5800204 	addi	r22,r22,8
   86eb0:	bdc00204 	addi	r23,r23,8
   86eb4:	103fdb1e 	bne	r2,zero,86e24 <__sprint_r.part.0+0x58>
   86eb8:	0005883a 	mov	r2,zero
   86ebc:	003fe806 	br	86e60 <__sprint_r.part.0+0x94>
   86ec0:	00888f40 	call	888f4 <__sfvwrite_r>
   86ec4:	003fe606 	br	86e60 <__sprint_r.part.0+0x94>

00086ec8 <__sprint_r>:
   86ec8:	30c00217 	ldw	r3,8(r6)
   86ecc:	18000126 	beq	r3,zero,86ed4 <__sprint_r+0xc>
   86ed0:	0086dcc1 	jmpi	86dcc <__sprint_r.part.0>
   86ed4:	30000115 	stw	zero,4(r6)
   86ed8:	0005883a 	mov	r2,zero
   86edc:	f800283a 	ret

00086ee0 <___vfiprintf_internal_r>:
   86ee0:	deffc904 	addi	sp,sp,-220
   86ee4:	df003515 	stw	fp,212(sp)
   86ee8:	dd003115 	stw	r20,196(sp)
   86eec:	dfc03615 	stw	ra,216(sp)
   86ef0:	ddc03415 	stw	r23,208(sp)
   86ef4:	dd803315 	stw	r22,204(sp)
   86ef8:	dd403215 	stw	r21,200(sp)
   86efc:	dcc03015 	stw	r19,192(sp)
   86f00:	dc802f15 	stw	r18,188(sp)
   86f04:	dc402e15 	stw	r17,184(sp)
   86f08:	dc002d15 	stw	r16,180(sp)
   86f0c:	d9002015 	stw	r4,128(sp)
   86f10:	d9c02215 	stw	r7,136(sp)
   86f14:	2829883a 	mov	r20,r5
   86f18:	3039883a 	mov	fp,r6
   86f1c:	20000226 	beq	r4,zero,86f28 <___vfiprintf_internal_r+0x48>
   86f20:	20800e17 	ldw	r2,56(r4)
   86f24:	1000cf26 	beq	r2,zero,87264 <___vfiprintf_internal_r+0x384>
   86f28:	a080030b 	ldhu	r2,12(r20)
   86f2c:	10c8000c 	andi	r3,r2,8192
   86f30:	1800061e 	bne	r3,zero,86f4c <___vfiprintf_internal_r+0x6c>
   86f34:	a1001917 	ldw	r4,100(r20)
   86f38:	00f7ffc4 	movi	r3,-8193
   86f3c:	10880014 	ori	r2,r2,8192
   86f40:	20c6703a 	and	r3,r4,r3
   86f44:	a080030d 	sth	r2,12(r20)
   86f48:	a0c01915 	stw	r3,100(r20)
   86f4c:	10c0020c 	andi	r3,r2,8
   86f50:	1800a926 	beq	r3,zero,871f8 <___vfiprintf_internal_r+0x318>
   86f54:	a0c00417 	ldw	r3,16(r20)
   86f58:	1800a726 	beq	r3,zero,871f8 <___vfiprintf_internal_r+0x318>
   86f5c:	1080068c 	andi	r2,r2,26
   86f60:	00c00284 	movi	r3,10
   86f64:	10c0ac26 	beq	r2,r3,87218 <___vfiprintf_internal_r+0x338>
   86f68:	da801a04 	addi	r10,sp,104
   86f6c:	da801e15 	stw	r10,120(sp)
   86f70:	d8801e17 	ldw	r2,120(sp)
   86f74:	da8019c4 	addi	r10,sp,103
   86f78:	05800274 	movhi	r22,9
   86f7c:	05c00274 	movhi	r23,9
   86f80:	da801f15 	stw	r10,124(sp)
   86f84:	1295c83a 	sub	r10,r2,r10
   86f88:	b5bebb04 	addi	r22,r22,-1300
   86f8c:	bdfeb704 	addi	r23,r23,-1316
   86f90:	dec01a15 	stw	sp,104(sp)
   86f94:	d8001c15 	stw	zero,112(sp)
   86f98:	d8001b15 	stw	zero,108(sp)
   86f9c:	d8002615 	stw	zero,152(sp)
   86fa0:	d8002315 	stw	zero,140(sp)
   86fa4:	da802715 	stw	r10,156(sp)
   86fa8:	d811883a 	mov	r8,sp
   86fac:	dd002115 	stw	r20,132(sp)
   86fb0:	e021883a 	mov	r16,fp
   86fb4:	80800007 	ldb	r2,0(r16)
   86fb8:	1003ea26 	beq	r2,zero,87f64 <___vfiprintf_internal_r+0x1084>
   86fbc:	00c00944 	movi	r3,37
   86fc0:	8025883a 	mov	r18,r16
   86fc4:	10c0021e 	bne	r2,r3,86fd0 <___vfiprintf_internal_r+0xf0>
   86fc8:	00001606 	br	87024 <___vfiprintf_internal_r+0x144>
   86fcc:	10c00326 	beq	r2,r3,86fdc <___vfiprintf_internal_r+0xfc>
   86fd0:	94800044 	addi	r18,r18,1
   86fd4:	90800007 	ldb	r2,0(r18)
   86fd8:	103ffc1e 	bne	r2,zero,86fcc <___vfiprintf_internal_r+0xec>
   86fdc:	9423c83a 	sub	r17,r18,r16
   86fe0:	88001026 	beq	r17,zero,87024 <___vfiprintf_internal_r+0x144>
   86fe4:	d8c01c17 	ldw	r3,112(sp)
   86fe8:	d8801b17 	ldw	r2,108(sp)
   86fec:	44000015 	stw	r16,0(r8)
   86ff0:	88c7883a 	add	r3,r17,r3
   86ff4:	10800044 	addi	r2,r2,1
   86ff8:	44400115 	stw	r17,4(r8)
   86ffc:	d8c01c15 	stw	r3,112(sp)
   87000:	d8801b15 	stw	r2,108(sp)
   87004:	010001c4 	movi	r4,7
   87008:	2080760e 	bge	r4,r2,871e4 <___vfiprintf_internal_r+0x304>
   8700c:	1803821e 	bne	r3,zero,87e18 <___vfiprintf_internal_r+0xf38>
   87010:	da802317 	ldw	r10,140(sp)
   87014:	d8001b15 	stw	zero,108(sp)
   87018:	d811883a 	mov	r8,sp
   8701c:	5455883a 	add	r10,r10,r17
   87020:	da802315 	stw	r10,140(sp)
   87024:	90800007 	ldb	r2,0(r18)
   87028:	10044626 	beq	r2,zero,88144 <___vfiprintf_internal_r+0x1264>
   8702c:	90c00047 	ldb	r3,1(r18)
   87030:	94000044 	addi	r16,r18,1
   87034:	d8001d85 	stb	zero,118(sp)
   87038:	0009883a 	mov	r4,zero
   8703c:	000f883a 	mov	r7,zero
   87040:	027fffc4 	movi	r9,-1
   87044:	0023883a 	mov	r17,zero
   87048:	0029883a 	mov	r20,zero
   8704c:	01401604 	movi	r5,88
   87050:	01800244 	movi	r6,9
   87054:	03400a84 	movi	r13,42
   87058:	03001b04 	movi	r12,108
   8705c:	84000044 	addi	r16,r16,1
   87060:	18bff804 	addi	r2,r3,-32
   87064:	28827336 	bltu	r5,r2,87a34 <___vfiprintf_internal_r+0xb54>
   87068:	100490ba 	slli	r2,r2,2
   8706c:	02800234 	movhi	r10,8
   87070:	529c2004 	addi	r10,r10,28800
   87074:	1285883a 	add	r2,r2,r10
   87078:	10800017 	ldw	r2,0(r2)
   8707c:	1000683a 	jmp	r2
   87080:	00087768 	cmpgeui	zero,zero,8669
   87084:	00087a34 	movhi	zero,8680
   87088:	00087a34 	movhi	zero,8680
   8708c:	00087788 	cmpgei	zero,zero,8670
   87090:	00087a34 	movhi	zero,8680
   87094:	00087a34 	movhi	zero,8680
   87098:	00087a34 	movhi	zero,8680
   8709c:	00087a34 	movhi	zero,8680
   870a0:	00087a34 	movhi	zero,8680
   870a4:	00087a34 	movhi	zero,8680
   870a8:	00087970 	cmpltui	zero,zero,8677
   870ac:	0008798c 	andi	zero,zero,8678
   870b0:	00087a34 	movhi	zero,8680
   870b4:	00087274 	movhi	zero,8649
   870b8:	0008799c 	xori	zero,zero,8678
   870bc:	00087a34 	movhi	zero,8680
   870c0:	00087794 	movui	zero,8670
   870c4:	000877a0 	cmpeqi	zero,zero,8670
   870c8:	000877a0 	cmpeqi	zero,zero,8670
   870cc:	000877a0 	cmpeqi	zero,zero,8670
   870d0:	000877a0 	cmpeqi	zero,zero,8670
   870d4:	000877a0 	cmpeqi	zero,zero,8670
   870d8:	000877a0 	cmpeqi	zero,zero,8670
   870dc:	000877a0 	cmpeqi	zero,zero,8670
   870e0:	000877a0 	cmpeqi	zero,zero,8670
   870e4:	000877a0 	cmpeqi	zero,zero,8670
   870e8:	00087a34 	movhi	zero,8680
   870ec:	00087a34 	movhi	zero,8680
   870f0:	00087a34 	movhi	zero,8680
   870f4:	00087a34 	movhi	zero,8680
   870f8:	00087a34 	movhi	zero,8680
   870fc:	00087a34 	movhi	zero,8680
   87100:	00087a34 	movhi	zero,8680
   87104:	00087a34 	movhi	zero,8680
   87108:	00087a34 	movhi	zero,8680
   8710c:	00087a34 	movhi	zero,8680
   87110:	000877cc 	andi	zero,zero,8671
   87114:	00087a34 	movhi	zero,8680
   87118:	00087a34 	movhi	zero,8680
   8711c:	00087a34 	movhi	zero,8680
   87120:	00087a34 	movhi	zero,8680
   87124:	00087a34 	movhi	zero,8680
   87128:	00087a34 	movhi	zero,8680
   8712c:	00087a34 	movhi	zero,8680
   87130:	00087a34 	movhi	zero,8680
   87134:	00087a34 	movhi	zero,8680
   87138:	00087a34 	movhi	zero,8680
   8713c:	00087804 	movi	zero,8672
   87140:	00087a34 	movhi	zero,8680
   87144:	00087a34 	movhi	zero,8680
   87148:	00087a34 	movhi	zero,8680
   8714c:	00087a34 	movhi	zero,8680
   87150:	00087a34 	movhi	zero,8680
   87154:	0008785c 	xori	zero,zero,8673
   87158:	00087a34 	movhi	zero,8680
   8715c:	00087a34 	movhi	zero,8680
   87160:	000878cc 	andi	zero,zero,8675
   87164:	00087a34 	movhi	zero,8680
   87168:	00087a34 	movhi	zero,8680
   8716c:	00087a34 	movhi	zero,8680
   87170:	00087a34 	movhi	zero,8680
   87174:	00087a34 	movhi	zero,8680
   87178:	00087a34 	movhi	zero,8680
   8717c:	00087a34 	movhi	zero,8680
   87180:	00087a34 	movhi	zero,8680
   87184:	00087a34 	movhi	zero,8680
   87188:	00087a34 	movhi	zero,8680
   8718c:	00087678 	rdprs	zero,zero,8665
   87190:	000876a4 	muli	zero,zero,8666
   87194:	00087a34 	movhi	zero,8680
   87198:	00087a34 	movhi	zero,8680
   8719c:	00087a34 	movhi	zero,8680
   871a0:	000879dc 	xori	zero,zero,8679
   871a4:	000876a4 	muli	zero,zero,8666
   871a8:	00087a34 	movhi	zero,8680
   871ac:	00087a34 	movhi	zero,8680
   871b0:	00087538 	rdprs	zero,zero,8660
   871b4:	00087a34 	movhi	zero,8680
   871b8:	00087548 	cmpgei	zero,zero,8661
   871bc:	00087584 	movi	zero,8662
   871c0:	00087280 	call	8728 <__alt_mem_mm-0x778d8>
   871c4:	0008752c 	andhi	zero,zero,8660
   871c8:	00087a34 	movhi	zero,8680
   871cc:	00087908 	cmpgei	zero,zero,8676
   871d0:	00087a34 	movhi	zero,8680
   871d4:	00087960 	cmpeqi	zero,zero,8677
   871d8:	00087a34 	movhi	zero,8680
   871dc:	00087a34 	movhi	zero,8680
   871e0:	00087624 	muli	zero,zero,8664
   871e4:	42000204 	addi	r8,r8,8
   871e8:	da802317 	ldw	r10,140(sp)
   871ec:	5455883a 	add	r10,r10,r17
   871f0:	da802315 	stw	r10,140(sp)
   871f4:	003f8b06 	br	87024 <___vfiprintf_internal_r+0x144>
   871f8:	d9002017 	ldw	r4,128(sp)
   871fc:	a00b883a 	mov	r5,r20
   87200:	00826800 	call	82680 <__swsetup_r>
   87204:	1003b11e 	bne	r2,zero,880cc <___vfiprintf_internal_r+0x11ec>
   87208:	a080030b 	ldhu	r2,12(r20)
   8720c:	00c00284 	movi	r3,10
   87210:	1080068c 	andi	r2,r2,26
   87214:	10ff541e 	bne	r2,r3,86f68 <___vfiprintf_internal_r+0x88>
   87218:	a080038f 	ldh	r2,14(r20)
   8721c:	103f5216 	blt	r2,zero,86f68 <___vfiprintf_internal_r+0x88>
   87220:	d9c02217 	ldw	r7,136(sp)
   87224:	d9002017 	ldw	r4,128(sp)
   87228:	e00d883a 	mov	r6,fp
   8722c:	a00b883a 	mov	r5,r20
   87230:	00883580 	call	88358 <__sbprintf>
   87234:	dfc03617 	ldw	ra,216(sp)
   87238:	df003517 	ldw	fp,212(sp)
   8723c:	ddc03417 	ldw	r23,208(sp)
   87240:	dd803317 	ldw	r22,204(sp)
   87244:	dd403217 	ldw	r21,200(sp)
   87248:	dd003117 	ldw	r20,196(sp)
   8724c:	dcc03017 	ldw	r19,192(sp)
   87250:	dc802f17 	ldw	r18,188(sp)
   87254:	dc402e17 	ldw	r17,184(sp)
   87258:	dc002d17 	ldw	r16,180(sp)
   8725c:	dec03704 	addi	sp,sp,220
   87260:	f800283a 	ret
   87264:	00846540 	call	84654 <__sinit>
   87268:	003f2f06 	br	86f28 <___vfiprintf_internal_r+0x48>
   8726c:	0463c83a 	sub	r17,zero,r17
   87270:	d8802215 	stw	r2,136(sp)
   87274:	a5000114 	ori	r20,r20,4
   87278:	80c00007 	ldb	r3,0(r16)
   8727c:	003f7706 	br	8705c <___vfiprintf_internal_r+0x17c>
   87280:	00800c04 	movi	r2,48
   87284:	da802217 	ldw	r10,136(sp)
   87288:	d8801d05 	stb	r2,116(sp)
   8728c:	00801e04 	movi	r2,120
   87290:	d8801d45 	stb	r2,117(sp)
   87294:	d8001d85 	stb	zero,118(sp)
   87298:	50c00104 	addi	r3,r10,4
   8729c:	54800017 	ldw	r18,0(r10)
   872a0:	0027883a 	mov	r19,zero
   872a4:	a0800094 	ori	r2,r20,2
   872a8:	48030b16 	blt	r9,zero,87ed8 <___vfiprintf_internal_r+0xff8>
   872ac:	00bfdfc4 	movi	r2,-129
   872b0:	a096703a 	and	r11,r20,r2
   872b4:	d8c02215 	stw	r3,136(sp)
   872b8:	5d000094 	ori	r20,r11,2
   872bc:	90032b1e 	bne	r18,zero,87f6c <___vfiprintf_internal_r+0x108c>
   872c0:	00800274 	movhi	r2,9
   872c4:	10be5604 	addi	r2,r2,-1704
   872c8:	d8802615 	stw	r2,152(sp)
   872cc:	0039883a 	mov	fp,zero
   872d0:	48017b1e 	bne	r9,zero,878c0 <___vfiprintf_internal_r+0x9e0>
   872d4:	0013883a 	mov	r9,zero
   872d8:	0027883a 	mov	r19,zero
   872dc:	dd401a04 	addi	r21,sp,104
   872e0:	4825883a 	mov	r18,r9
   872e4:	4cc0010e 	bge	r9,r19,872ec <___vfiprintf_internal_r+0x40c>
   872e8:	9825883a 	mov	r18,r19
   872ec:	e7003fcc 	andi	fp,fp,255
   872f0:	e700201c 	xori	fp,fp,128
   872f4:	e73fe004 	addi	fp,fp,-128
   872f8:	e0000126 	beq	fp,zero,87300 <___vfiprintf_internal_r+0x420>
   872fc:	94800044 	addi	r18,r18,1
   87300:	a380008c 	andi	r14,r20,2
   87304:	70000126 	beq	r14,zero,8730c <___vfiprintf_internal_r+0x42c>
   87308:	94800084 	addi	r18,r18,2
   8730c:	a700210c 	andi	fp,r20,132
   87310:	e001df1e 	bne	fp,zero,87a90 <___vfiprintf_internal_r+0xbb0>
   87314:	8c87c83a 	sub	r3,r17,r18
   87318:	00c1dd0e 	bge	zero,r3,87a90 <___vfiprintf_internal_r+0xbb0>
   8731c:	01c00404 	movi	r7,16
   87320:	d8801c17 	ldw	r2,112(sp)
   87324:	38c3ad0e 	bge	r7,r3,881dc <___vfiprintf_internal_r+0x12fc>
   87328:	02800274 	movhi	r10,9
   8732c:	52bebb04 	addi	r10,r10,-1300
   87330:	dc002915 	stw	r16,164(sp)
   87334:	d9801b17 	ldw	r6,108(sp)
   87338:	da802415 	stw	r10,144(sp)
   8733c:	03c001c4 	movi	r15,7
   87340:	da402515 	stw	r9,148(sp)
   87344:	db802815 	stw	r14,160(sp)
   87348:	1821883a 	mov	r16,r3
   8734c:	00000506 	br	87364 <___vfiprintf_internal_r+0x484>
   87350:	31400084 	addi	r5,r6,2
   87354:	42000204 	addi	r8,r8,8
   87358:	200d883a 	mov	r6,r4
   8735c:	843ffc04 	addi	r16,r16,-16
   87360:	3c000d0e 	bge	r7,r16,87398 <___vfiprintf_internal_r+0x4b8>
   87364:	10800404 	addi	r2,r2,16
   87368:	31000044 	addi	r4,r6,1
   8736c:	45800015 	stw	r22,0(r8)
   87370:	41c00115 	stw	r7,4(r8)
   87374:	d8801c15 	stw	r2,112(sp)
   87378:	d9001b15 	stw	r4,108(sp)
   8737c:	793ff40e 	bge	r15,r4,87350 <___vfiprintf_internal_r+0x470>
   87380:	1001b51e 	bne	r2,zero,87a58 <___vfiprintf_internal_r+0xb78>
   87384:	843ffc04 	addi	r16,r16,-16
   87388:	000d883a 	mov	r6,zero
   8738c:	01400044 	movi	r5,1
   87390:	d811883a 	mov	r8,sp
   87394:	3c3ff316 	blt	r7,r16,87364 <___vfiprintf_internal_r+0x484>
   87398:	8007883a 	mov	r3,r16
   8739c:	da402517 	ldw	r9,148(sp)
   873a0:	db802817 	ldw	r14,160(sp)
   873a4:	dc002917 	ldw	r16,164(sp)
   873a8:	da802417 	ldw	r10,144(sp)
   873ac:	1885883a 	add	r2,r3,r2
   873b0:	40c00115 	stw	r3,4(r8)
   873b4:	42800015 	stw	r10,0(r8)
   873b8:	d8801c15 	stw	r2,112(sp)
   873bc:	d9401b15 	stw	r5,108(sp)
   873c0:	00c001c4 	movi	r3,7
   873c4:	19426016 	blt	r3,r5,87d48 <___vfiprintf_internal_r+0xe68>
   873c8:	d8c01d87 	ldb	r3,118(sp)
   873cc:	42000204 	addi	r8,r8,8
   873d0:	29000044 	addi	r4,r5,1
   873d4:	1801b31e 	bne	r3,zero,87aa4 <___vfiprintf_internal_r+0xbc4>
   873d8:	7001c026 	beq	r14,zero,87adc <___vfiprintf_internal_r+0xbfc>
   873dc:	d8c01d04 	addi	r3,sp,116
   873e0:	10800084 	addi	r2,r2,2
   873e4:	40c00015 	stw	r3,0(r8)
   873e8:	00c00084 	movi	r3,2
   873ec:	40c00115 	stw	r3,4(r8)
   873f0:	d8801c15 	stw	r2,112(sp)
   873f4:	d9001b15 	stw	r4,108(sp)
   873f8:	00c001c4 	movi	r3,7
   873fc:	1902650e 	bge	r3,r4,87d94 <___vfiprintf_internal_r+0xeb4>
   87400:	10029a1e 	bne	r2,zero,87e6c <___vfiprintf_internal_r+0xf8c>
   87404:	00c02004 	movi	r3,128
   87408:	01000044 	movi	r4,1
   8740c:	000b883a 	mov	r5,zero
   87410:	d811883a 	mov	r8,sp
   87414:	e0c1b31e 	bne	fp,r3,87ae4 <___vfiprintf_internal_r+0xc04>
   87418:	8cb9c83a 	sub	fp,r17,r18
   8741c:	0701b10e 	bge	zero,fp,87ae4 <___vfiprintf_internal_r+0xc04>
   87420:	01c00404 	movi	r7,16
   87424:	3f03890e 	bge	r7,fp,8824c <___vfiprintf_internal_r+0x136c>
   87428:	00c00274 	movhi	r3,9
   8742c:	18feb704 	addi	r3,r3,-1316
   87430:	d8c02415 	stw	r3,144(sp)
   87434:	8007883a 	mov	r3,r16
   87438:	034001c4 	movi	r13,7
   8743c:	e021883a 	mov	r16,fp
   87440:	da402515 	stw	r9,148(sp)
   87444:	1839883a 	mov	fp,r3
   87448:	00000506 	br	87460 <___vfiprintf_internal_r+0x580>
   8744c:	29800084 	addi	r6,r5,2
   87450:	42000204 	addi	r8,r8,8
   87454:	180b883a 	mov	r5,r3
   87458:	843ffc04 	addi	r16,r16,-16
   8745c:	3c000d0e 	bge	r7,r16,87494 <___vfiprintf_internal_r+0x5b4>
   87460:	10800404 	addi	r2,r2,16
   87464:	28c00044 	addi	r3,r5,1
   87468:	45c00015 	stw	r23,0(r8)
   8746c:	41c00115 	stw	r7,4(r8)
   87470:	d8801c15 	stw	r2,112(sp)
   87474:	d8c01b15 	stw	r3,108(sp)
   87478:	68fff40e 	bge	r13,r3,8744c <___vfiprintf_internal_r+0x56c>
   8747c:	1002241e 	bne	r2,zero,87d10 <___vfiprintf_internal_r+0xe30>
   87480:	843ffc04 	addi	r16,r16,-16
   87484:	01800044 	movi	r6,1
   87488:	000b883a 	mov	r5,zero
   8748c:	d811883a 	mov	r8,sp
   87490:	3c3ff316 	blt	r7,r16,87460 <___vfiprintf_internal_r+0x580>
   87494:	da402517 	ldw	r9,148(sp)
   87498:	e007883a 	mov	r3,fp
   8749c:	8039883a 	mov	fp,r16
   874a0:	1821883a 	mov	r16,r3
   874a4:	d8c02417 	ldw	r3,144(sp)
   874a8:	1705883a 	add	r2,r2,fp
   874ac:	47000115 	stw	fp,4(r8)
   874b0:	40c00015 	stw	r3,0(r8)
   874b4:	d8801c15 	stw	r2,112(sp)
   874b8:	d9801b15 	stw	r6,108(sp)
   874bc:	00c001c4 	movi	r3,7
   874c0:	19827616 	blt	r3,r6,87e9c <___vfiprintf_internal_r+0xfbc>
   874c4:	4cf9c83a 	sub	fp,r9,r19
   874c8:	42000204 	addi	r8,r8,8
   874cc:	31000044 	addi	r4,r6,1
   874d0:	300b883a 	mov	r5,r6
   874d4:	07018516 	blt	zero,fp,87aec <___vfiprintf_internal_r+0xc0c>
   874d8:	9885883a 	add	r2,r19,r2
   874dc:	45400015 	stw	r21,0(r8)
   874e0:	44c00115 	stw	r19,4(r8)
   874e4:	d8801c15 	stw	r2,112(sp)
   874e8:	d9001b15 	stw	r4,108(sp)
   874ec:	00c001c4 	movi	r3,7
   874f0:	1901dd0e 	bge	r3,r4,87c68 <___vfiprintf_internal_r+0xd88>
   874f4:	1002401e 	bne	r2,zero,87df8 <___vfiprintf_internal_r+0xf18>
   874f8:	d8001b15 	stw	zero,108(sp)
   874fc:	a2c0010c 	andi	r11,r20,4
   87500:	58000226 	beq	r11,zero,8750c <___vfiprintf_internal_r+0x62c>
   87504:	8ca7c83a 	sub	r19,r17,r18
   87508:	04c2f216 	blt	zero,r19,880d4 <___vfiprintf_internal_r+0x11f4>
   8750c:	8c80010e 	bge	r17,r18,87514 <___vfiprintf_internal_r+0x634>
   87510:	9023883a 	mov	r17,r18
   87514:	da802317 	ldw	r10,140(sp)
   87518:	5455883a 	add	r10,r10,r17
   8751c:	da802315 	stw	r10,140(sp)
   87520:	d8001b15 	stw	zero,108(sp)
   87524:	d811883a 	mov	r8,sp
   87528:	003ea206 	br	86fb4 <___vfiprintf_internal_r+0xd4>
   8752c:	a5000814 	ori	r20,r20,32
   87530:	80c00007 	ldb	r3,0(r16)
   87534:	003ec906 	br	8705c <___vfiprintf_internal_r+0x17c>
   87538:	80c00007 	ldb	r3,0(r16)
   8753c:	1b030926 	beq	r3,r12,88164 <___vfiprintf_internal_r+0x1284>
   87540:	a5000414 	ori	r20,r20,16
   87544:	003ec506 	br	8705c <___vfiprintf_internal_r+0x17c>
   87548:	21003fcc 	andi	r4,r4,255
   8754c:	20035e1e 	bne	r4,zero,882c8 <___vfiprintf_internal_r+0x13e8>
   87550:	a080080c 	andi	r2,r20,32
   87554:	1002a526 	beq	r2,zero,87fec <___vfiprintf_internal_r+0x110c>
   87558:	da802217 	ldw	r10,136(sp)
   8755c:	50800017 	ldw	r2,0(r10)
   87560:	da802317 	ldw	r10,140(sp)
   87564:	5007d7fa 	srai	r3,r10,31
   87568:	da802217 	ldw	r10,136(sp)
   8756c:	10c00115 	stw	r3,4(r2)
   87570:	52800104 	addi	r10,r10,4
   87574:	da802215 	stw	r10,136(sp)
   87578:	da802317 	ldw	r10,140(sp)
   8757c:	12800015 	stw	r10,0(r2)
   87580:	003e8c06 	br	86fb4 <___vfiprintf_internal_r+0xd4>
   87584:	21003fcc 	andi	r4,r4,255
   87588:	2003511e 	bne	r4,zero,882d0 <___vfiprintf_internal_r+0x13f0>
   8758c:	a080080c 	andi	r2,r20,32
   87590:	1000a126 	beq	r2,zero,87818 <___vfiprintf_internal_r+0x938>
   87594:	da802217 	ldw	r10,136(sp)
   87598:	d8001d85 	stb	zero,118(sp)
   8759c:	50800204 	addi	r2,r10,8
   875a0:	54800017 	ldw	r18,0(r10)
   875a4:	54c00117 	ldw	r19,4(r10)
   875a8:	4802b416 	blt	r9,zero,8807c <___vfiprintf_internal_r+0x119c>
   875ac:	013fdfc4 	movi	r4,-129
   875b0:	94c6b03a 	or	r3,r18,r19
   875b4:	d8802215 	stw	r2,136(sp)
   875b8:	a128703a 	and	r20,r20,r4
   875bc:	1800a226 	beq	r3,zero,87848 <___vfiprintf_internal_r+0x968>
   875c0:	0039883a 	mov	fp,zero
   875c4:	dd401a04 	addi	r21,sp,104
   875c8:	9006d0fa 	srli	r3,r18,3
   875cc:	9808977a 	slli	r4,r19,29
   875d0:	9826d0fa 	srli	r19,r19,3
   875d4:	948001cc 	andi	r18,r18,7
   875d8:	90800c04 	addi	r2,r18,48
   875dc:	ad7fffc4 	addi	r21,r21,-1
   875e0:	20e4b03a 	or	r18,r4,r3
   875e4:	a8800005 	stb	r2,0(r21)
   875e8:	94c6b03a 	or	r3,r18,r19
   875ec:	183ff61e 	bne	r3,zero,875c8 <___vfiprintf_internal_r+0x6e8>
   875f0:	a0c0004c 	andi	r3,r20,1
   875f4:	18005926 	beq	r3,zero,8775c <___vfiprintf_internal_r+0x87c>
   875f8:	10803fcc 	andi	r2,r2,255
   875fc:	1080201c 	xori	r2,r2,128
   87600:	10bfe004 	addi	r2,r2,-128
   87604:	00c00c04 	movi	r3,48
   87608:	10c05426 	beq	r2,r3,8775c <___vfiprintf_internal_r+0x87c>
   8760c:	da801e17 	ldw	r10,120(sp)
   87610:	a8bfffc4 	addi	r2,r21,-1
   87614:	a8ffffc5 	stb	r3,-1(r21)
   87618:	50a7c83a 	sub	r19,r10,r2
   8761c:	102b883a 	mov	r21,r2
   87620:	003f2f06 	br	872e0 <___vfiprintf_internal_r+0x400>
   87624:	21003fcc 	andi	r4,r4,255
   87628:	2003421e 	bne	r4,zero,88334 <___vfiprintf_internal_r+0x1454>
   8762c:	00800274 	movhi	r2,9
   87630:	10be5604 	addi	r2,r2,-1704
   87634:	d8802615 	stw	r2,152(sp)
   87638:	a080080c 	andi	r2,r20,32
   8763c:	1000aa26 	beq	r2,zero,878e8 <___vfiprintf_internal_r+0xa08>
   87640:	da802217 	ldw	r10,136(sp)
   87644:	54800017 	ldw	r18,0(r10)
   87648:	54c00117 	ldw	r19,4(r10)
   8764c:	52800204 	addi	r10,r10,8
   87650:	da802215 	stw	r10,136(sp)
   87654:	a080004c 	andi	r2,r20,1
   87658:	1001d226 	beq	r2,zero,87da4 <___vfiprintf_internal_r+0xec4>
   8765c:	94c4b03a 	or	r2,r18,r19
   87660:	1002351e 	bne	r2,zero,87f38 <___vfiprintf_internal_r+0x1058>
   87664:	d8001d85 	stb	zero,118(sp)
   87668:	48022216 	blt	r9,zero,87ef4 <___vfiprintf_internal_r+0x1014>
   8766c:	00bfdfc4 	movi	r2,-129
   87670:	a0a8703a 	and	r20,r20,r2
   87674:	003f1506 	br	872cc <___vfiprintf_internal_r+0x3ec>
   87678:	da802217 	ldw	r10,136(sp)
   8767c:	04800044 	movi	r18,1
   87680:	d8001d85 	stb	zero,118(sp)
   87684:	50800017 	ldw	r2,0(r10)
   87688:	52800104 	addi	r10,r10,4
   8768c:	da802215 	stw	r10,136(sp)
   87690:	d8801005 	stb	r2,64(sp)
   87694:	9027883a 	mov	r19,r18
   87698:	dd401004 	addi	r21,sp,64
   8769c:	0013883a 	mov	r9,zero
   876a0:	003f1706 	br	87300 <___vfiprintf_internal_r+0x420>
   876a4:	21003fcc 	andi	r4,r4,255
   876a8:	2003201e 	bne	r4,zero,8832c <___vfiprintf_internal_r+0x144c>
   876ac:	a080080c 	andi	r2,r20,32
   876b0:	10004b26 	beq	r2,zero,877e0 <___vfiprintf_internal_r+0x900>
   876b4:	da802217 	ldw	r10,136(sp)
   876b8:	50800117 	ldw	r2,4(r10)
   876bc:	54800017 	ldw	r18,0(r10)
   876c0:	52800204 	addi	r10,r10,8
   876c4:	da802215 	stw	r10,136(sp)
   876c8:	1027883a 	mov	r19,r2
   876cc:	10022c16 	blt	r2,zero,87f80 <___vfiprintf_internal_r+0x10a0>
   876d0:	df001d83 	ldbu	fp,118(sp)
   876d4:	48007216 	blt	r9,zero,878a0 <___vfiprintf_internal_r+0x9c0>
   876d8:	00ffdfc4 	movi	r3,-129
   876dc:	94c4b03a 	or	r2,r18,r19
   876e0:	a0e8703a 	and	r20,r20,r3
   876e4:	1000cc26 	beq	r2,zero,87a18 <___vfiprintf_internal_r+0xb38>
   876e8:	98021026 	beq	r19,zero,87f2c <___vfiprintf_internal_r+0x104c>
   876ec:	dc402415 	stw	r17,144(sp)
   876f0:	dc002515 	stw	r16,148(sp)
   876f4:	9823883a 	mov	r17,r19
   876f8:	9021883a 	mov	r16,r18
   876fc:	dd401a04 	addi	r21,sp,104
   87700:	4825883a 	mov	r18,r9
   87704:	4027883a 	mov	r19,r8
   87708:	8009883a 	mov	r4,r16
   8770c:	880b883a 	mov	r5,r17
   87710:	01800284 	movi	r6,10
   87714:	000f883a 	mov	r7,zero
   87718:	0089e3c0 	call	89e3c <__umoddi3>
   8771c:	10800c04 	addi	r2,r2,48
   87720:	ad7fffc4 	addi	r21,r21,-1
   87724:	8009883a 	mov	r4,r16
   87728:	880b883a 	mov	r5,r17
   8772c:	a8800005 	stb	r2,0(r21)
   87730:	01800284 	movi	r6,10
   87734:	000f883a 	mov	r7,zero
   87738:	00898c40 	call	898c4 <__udivdi3>
   8773c:	1021883a 	mov	r16,r2
   87740:	10c4b03a 	or	r2,r2,r3
   87744:	1823883a 	mov	r17,r3
   87748:	103fef1e 	bne	r2,zero,87708 <___vfiprintf_internal_r+0x828>
   8774c:	dc402417 	ldw	r17,144(sp)
   87750:	dc002517 	ldw	r16,148(sp)
   87754:	9013883a 	mov	r9,r18
   87758:	9811883a 	mov	r8,r19
   8775c:	da801e17 	ldw	r10,120(sp)
   87760:	5567c83a 	sub	r19,r10,r21
   87764:	003ede06 	br	872e0 <___vfiprintf_internal_r+0x400>
   87768:	38803fcc 	andi	r2,r7,255
   8776c:	1080201c 	xori	r2,r2,128
   87770:	10bfe004 	addi	r2,r2,-128
   87774:	1002371e 	bne	r2,zero,88054 <___vfiprintf_internal_r+0x1174>
   87778:	01000044 	movi	r4,1
   8777c:	01c00804 	movi	r7,32
   87780:	80c00007 	ldb	r3,0(r16)
   87784:	003e3506 	br	8705c <___vfiprintf_internal_r+0x17c>
   87788:	a5000054 	ori	r20,r20,1
   8778c:	80c00007 	ldb	r3,0(r16)
   87790:	003e3206 	br	8705c <___vfiprintf_internal_r+0x17c>
   87794:	a5002014 	ori	r20,r20,128
   87798:	80c00007 	ldb	r3,0(r16)
   8779c:	003e2f06 	br	8705c <___vfiprintf_internal_r+0x17c>
   877a0:	8015883a 	mov	r10,r16
   877a4:	0023883a 	mov	r17,zero
   877a8:	18bff404 	addi	r2,r3,-48
   877ac:	50c00007 	ldb	r3,0(r10)
   877b0:	8c4002a4 	muli	r17,r17,10
   877b4:	84000044 	addi	r16,r16,1
   877b8:	8015883a 	mov	r10,r16
   877bc:	1463883a 	add	r17,r2,r17
   877c0:	18bff404 	addi	r2,r3,-48
   877c4:	30bff92e 	bgeu	r6,r2,877ac <___vfiprintf_internal_r+0x8cc>
   877c8:	003e2506 	br	87060 <___vfiprintf_internal_r+0x180>
   877cc:	21003fcc 	andi	r4,r4,255
   877d0:	2002d41e 	bne	r4,zero,88324 <___vfiprintf_internal_r+0x1444>
   877d4:	a5000414 	ori	r20,r20,16
   877d8:	a080080c 	andi	r2,r20,32
   877dc:	103fb51e 	bne	r2,zero,876b4 <___vfiprintf_internal_r+0x7d4>
   877e0:	a080040c 	andi	r2,r20,16
   877e4:	1001f826 	beq	r2,zero,87fc8 <___vfiprintf_internal_r+0x10e8>
   877e8:	da802217 	ldw	r10,136(sp)
   877ec:	54800017 	ldw	r18,0(r10)
   877f0:	52800104 	addi	r10,r10,4
   877f4:	da802215 	stw	r10,136(sp)
   877f8:	9027d7fa 	srai	r19,r18,31
   877fc:	9805883a 	mov	r2,r19
   87800:	003fb206 	br	876cc <___vfiprintf_internal_r+0x7ec>
   87804:	21003fcc 	andi	r4,r4,255
   87808:	2002c41e 	bne	r4,zero,8831c <___vfiprintf_internal_r+0x143c>
   8780c:	a5000414 	ori	r20,r20,16
   87810:	a080080c 	andi	r2,r20,32
   87814:	103f5f1e 	bne	r2,zero,87594 <___vfiprintf_internal_r+0x6b4>
   87818:	a080040c 	andi	r2,r20,16
   8781c:	10020f26 	beq	r2,zero,8805c <___vfiprintf_internal_r+0x117c>
   87820:	da802217 	ldw	r10,136(sp)
   87824:	d8001d85 	stb	zero,118(sp)
   87828:	0027883a 	mov	r19,zero
   8782c:	50800104 	addi	r2,r10,4
   87830:	54800017 	ldw	r18,0(r10)
   87834:	48021116 	blt	r9,zero,8807c <___vfiprintf_internal_r+0x119c>
   87838:	00ffdfc4 	movi	r3,-129
   8783c:	d8802215 	stw	r2,136(sp)
   87840:	a0e8703a 	and	r20,r20,r3
   87844:	903f5e1e 	bne	r18,zero,875c0 <___vfiprintf_internal_r+0x6e0>
   87848:	0039883a 	mov	fp,zero
   8784c:	4802a626 	beq	r9,zero,882e8 <___vfiprintf_internal_r+0x1408>
   87850:	0025883a 	mov	r18,zero
   87854:	0027883a 	mov	r19,zero
   87858:	003f5a06 	br	875c4 <___vfiprintf_internal_r+0x6e4>
   8785c:	21003fcc 	andi	r4,r4,255
   87860:	20029f1e 	bne	r4,zero,882e0 <___vfiprintf_internal_r+0x1400>
   87864:	a5000414 	ori	r20,r20,16
   87868:	a080080c 	andi	r2,r20,32
   8786c:	10005e1e 	bne	r2,zero,879e8 <___vfiprintf_internal_r+0xb08>
   87870:	a080040c 	andi	r2,r20,16
   87874:	1001a21e 	bne	r2,zero,87f00 <___vfiprintf_internal_r+0x1020>
   87878:	a080100c 	andi	r2,r20,64
   8787c:	d8001d85 	stb	zero,118(sp)
   87880:	da802217 	ldw	r10,136(sp)
   87884:	1002231e 	bne	r2,zero,88114 <___vfiprintf_internal_r+0x1234>
   87888:	50800104 	addi	r2,r10,4
   8788c:	54800017 	ldw	r18,0(r10)
   87890:	0027883a 	mov	r19,zero
   87894:	4801a00e 	bge	r9,zero,87f18 <___vfiprintf_internal_r+0x1038>
   87898:	d8802215 	stw	r2,136(sp)
   8789c:	0039883a 	mov	fp,zero
   878a0:	94c4b03a 	or	r2,r18,r19
   878a4:	103f901e 	bne	r2,zero,876e8 <___vfiprintf_internal_r+0x808>
   878a8:	00800044 	movi	r2,1
   878ac:	10803fcc 	andi	r2,r2,255
   878b0:	00c00044 	movi	r3,1
   878b4:	10c05926 	beq	r2,r3,87a1c <___vfiprintf_internal_r+0xb3c>
   878b8:	00c00084 	movi	r3,2
   878bc:	10ffe41e 	bne	r2,r3,87850 <___vfiprintf_internal_r+0x970>
   878c0:	0025883a 	mov	r18,zero
   878c4:	0027883a 	mov	r19,zero
   878c8:	00013d06 	br	87dc0 <___vfiprintf_internal_r+0xee0>
   878cc:	21003fcc 	andi	r4,r4,255
   878d0:	2002811e 	bne	r4,zero,882d8 <___vfiprintf_internal_r+0x13f8>
   878d4:	00800274 	movhi	r2,9
   878d8:	10be5104 	addi	r2,r2,-1724
   878dc:	d8802615 	stw	r2,152(sp)
   878e0:	a080080c 	andi	r2,r20,32
   878e4:	103f561e 	bne	r2,zero,87640 <___vfiprintf_internal_r+0x760>
   878e8:	a080040c 	andi	r2,r20,16
   878ec:	1001d126 	beq	r2,zero,88034 <___vfiprintf_internal_r+0x1154>
   878f0:	da802217 	ldw	r10,136(sp)
   878f4:	0027883a 	mov	r19,zero
   878f8:	54800017 	ldw	r18,0(r10)
   878fc:	52800104 	addi	r10,r10,4
   87900:	da802215 	stw	r10,136(sp)
   87904:	003f5306 	br	87654 <___vfiprintf_internal_r+0x774>
   87908:	da802217 	ldw	r10,136(sp)
   8790c:	d8001d85 	stb	zero,118(sp)
   87910:	55400017 	ldw	r21,0(r10)
   87914:	50c00104 	addi	r3,r10,4
   87918:	a8024226 	beq	r21,zero,88224 <___vfiprintf_internal_r+0x1344>
   8791c:	48021816 	blt	r9,zero,88180 <___vfiprintf_internal_r+0x12a0>
   87920:	480d883a 	mov	r6,r9
   87924:	000b883a 	mov	r5,zero
   87928:	a809883a 	mov	r4,r21
   8792c:	d8c02a15 	stw	r3,168(sp)
   87930:	da002b15 	stw	r8,172(sp)
   87934:	da402c15 	stw	r9,176(sp)
   87938:	00857040 	call	85704 <memchr>
   8793c:	d8c02a17 	ldw	r3,168(sp)
   87940:	da002b17 	ldw	r8,172(sp)
   87944:	da402c17 	ldw	r9,176(sp)
   87948:	10024826 	beq	r2,zero,8826c <___vfiprintf_internal_r+0x138c>
   8794c:	1567c83a 	sub	r19,r2,r21
   87950:	df001d83 	ldbu	fp,118(sp)
   87954:	d8c02215 	stw	r3,136(sp)
   87958:	0013883a 	mov	r9,zero
   8795c:	003e6006 	br	872e0 <___vfiprintf_internal_r+0x400>
   87960:	21003fcc 	andi	r4,r4,255
   87964:	203fc026 	beq	r4,zero,87868 <___vfiprintf_internal_r+0x988>
   87968:	d9c01d85 	stb	r7,118(sp)
   8796c:	003fbe06 	br	87868 <___vfiprintf_internal_r+0x988>
   87970:	da802217 	ldw	r10,136(sp)
   87974:	54400017 	ldw	r17,0(r10)
   87978:	50800104 	addi	r2,r10,4
   8797c:	883e3b16 	blt	r17,zero,8726c <___vfiprintf_internal_r+0x38c>
   87980:	d8802215 	stw	r2,136(sp)
   87984:	80c00007 	ldb	r3,0(r16)
   87988:	003db406 	br	8705c <___vfiprintf_internal_r+0x17c>
   8798c:	01000044 	movi	r4,1
   87990:	01c00ac4 	movi	r7,43
   87994:	80c00007 	ldb	r3,0(r16)
   87998:	003db006 	br	8705c <___vfiprintf_internal_r+0x17c>
   8799c:	80c00007 	ldb	r3,0(r16)
   879a0:	82800044 	addi	r10,r16,1
   879a4:	1b423c26 	beq	r3,r13,88298 <___vfiprintf_internal_r+0x13b8>
   879a8:	18bff404 	addi	r2,r3,-48
   879ac:	0013883a 	mov	r9,zero
   879b0:	30822b36 	bltu	r6,r2,88260 <___vfiprintf_internal_r+0x1380>
   879b4:	50c00007 	ldb	r3,0(r10)
   879b8:	4a4002a4 	muli	r9,r9,10
   879bc:	54000044 	addi	r16,r10,1
   879c0:	8015883a 	mov	r10,r16
   879c4:	4893883a 	add	r9,r9,r2
   879c8:	18bff404 	addi	r2,r3,-48
   879cc:	30bff92e 	bgeu	r6,r2,879b4 <___vfiprintf_internal_r+0xad4>
   879d0:	483da30e 	bge	r9,zero,87060 <___vfiprintf_internal_r+0x180>
   879d4:	027fffc4 	movi	r9,-1
   879d8:	003da106 	br	87060 <___vfiprintf_internal_r+0x180>
   879dc:	a5001014 	ori	r20,r20,64
   879e0:	80c00007 	ldb	r3,0(r16)
   879e4:	003d9d06 	br	8705c <___vfiprintf_internal_r+0x17c>
   879e8:	da802217 	ldw	r10,136(sp)
   879ec:	d8001d85 	stb	zero,118(sp)
   879f0:	50c00204 	addi	r3,r10,8
   879f4:	54800017 	ldw	r18,0(r10)
   879f8:	54c00117 	ldw	r19,4(r10)
   879fc:	4801ca16 	blt	r9,zero,88128 <___vfiprintf_internal_r+0x1248>
   87a00:	013fdfc4 	movi	r4,-129
   87a04:	94c4b03a 	or	r2,r18,r19
   87a08:	d8c02215 	stw	r3,136(sp)
   87a0c:	a128703a 	and	r20,r20,r4
   87a10:	0039883a 	mov	fp,zero
   87a14:	103f341e 	bne	r2,zero,876e8 <___vfiprintf_internal_r+0x808>
   87a18:	483e2e26 	beq	r9,zero,872d4 <___vfiprintf_internal_r+0x3f4>
   87a1c:	0025883a 	mov	r18,zero
   87a20:	94800c04 	addi	r18,r18,48
   87a24:	dc8019c5 	stb	r18,103(sp)
   87a28:	dcc02717 	ldw	r19,156(sp)
   87a2c:	dd4019c4 	addi	r21,sp,103
   87a30:	003e2b06 	br	872e0 <___vfiprintf_internal_r+0x400>
   87a34:	21003fcc 	andi	r4,r4,255
   87a38:	2002361e 	bne	r4,zero,88314 <___vfiprintf_internal_r+0x1434>
   87a3c:	1801c126 	beq	r3,zero,88144 <___vfiprintf_internal_r+0x1264>
   87a40:	04800044 	movi	r18,1
   87a44:	d8c01005 	stb	r3,64(sp)
   87a48:	d8001d85 	stb	zero,118(sp)
   87a4c:	9027883a 	mov	r19,r18
   87a50:	dd401004 	addi	r21,sp,64
   87a54:	003f1106 	br	8769c <___vfiprintf_internal_r+0x7bc>
   87a58:	d9402117 	ldw	r5,132(sp)
   87a5c:	d9002017 	ldw	r4,128(sp)
   87a60:	d9801a04 	addi	r6,sp,104
   87a64:	d9c02b15 	stw	r7,172(sp)
   87a68:	dbc02a15 	stw	r15,168(sp)
   87a6c:	0086dcc0 	call	86dcc <__sprint_r.part.0>
   87a70:	d9c02b17 	ldw	r7,172(sp)
   87a74:	dbc02a17 	ldw	r15,168(sp)
   87a78:	10006d1e 	bne	r2,zero,87c30 <___vfiprintf_internal_r+0xd50>
   87a7c:	d9801b17 	ldw	r6,108(sp)
   87a80:	d8801c17 	ldw	r2,112(sp)
   87a84:	d811883a 	mov	r8,sp
   87a88:	31400044 	addi	r5,r6,1
   87a8c:	003e3306 	br	8735c <___vfiprintf_internal_r+0x47c>
   87a90:	d9401b17 	ldw	r5,108(sp)
   87a94:	d8801c17 	ldw	r2,112(sp)
   87a98:	29000044 	addi	r4,r5,1
   87a9c:	d8c01d87 	ldb	r3,118(sp)
   87aa0:	183e4d26 	beq	r3,zero,873d8 <___vfiprintf_internal_r+0x4f8>
   87aa4:	00c00044 	movi	r3,1
   87aa8:	d9401d84 	addi	r5,sp,118
   87aac:	10c5883a 	add	r2,r2,r3
   87ab0:	41400015 	stw	r5,0(r8)
   87ab4:	40c00115 	stw	r3,4(r8)
   87ab8:	d8801c15 	stw	r2,112(sp)
   87abc:	d9001b15 	stw	r4,108(sp)
   87ac0:	014001c4 	movi	r5,7
   87ac4:	2900a90e 	bge	r5,r4,87d6c <___vfiprintf_internal_r+0xe8c>
   87ac8:	1000da1e 	bne	r2,zero,87e34 <___vfiprintf_internal_r+0xf54>
   87acc:	7000ab1e 	bne	r14,zero,87d7c <___vfiprintf_internal_r+0xe9c>
   87ad0:	000b883a 	mov	r5,zero
   87ad4:	1809883a 	mov	r4,r3
   87ad8:	d811883a 	mov	r8,sp
   87adc:	00c02004 	movi	r3,128
   87ae0:	e0fe4d26 	beq	fp,r3,87418 <___vfiprintf_internal_r+0x538>
   87ae4:	4cf9c83a 	sub	fp,r9,r19
   87ae8:	073e7b0e 	bge	zero,fp,874d8 <___vfiprintf_internal_r+0x5f8>
   87aec:	01c00404 	movi	r7,16
   87af0:	3f01900e 	bge	r7,fp,88134 <___vfiprintf_internal_r+0x1254>
   87af4:	00c00274 	movhi	r3,9
   87af8:	18feb704 	addi	r3,r3,-1316
   87afc:	d8c02415 	stw	r3,144(sp)
   87b00:	034001c4 	movi	r13,7
   87b04:	00000506 	br	87b1c <___vfiprintf_internal_r+0xc3c>
   87b08:	29000084 	addi	r4,r5,2
   87b0c:	42000204 	addi	r8,r8,8
   87b10:	180b883a 	mov	r5,r3
   87b14:	e73ffc04 	addi	fp,fp,-16
   87b18:	3f000d0e 	bge	r7,fp,87b50 <___vfiprintf_internal_r+0xc70>
   87b1c:	10800404 	addi	r2,r2,16
   87b20:	28c00044 	addi	r3,r5,1
   87b24:	45c00015 	stw	r23,0(r8)
   87b28:	41c00115 	stw	r7,4(r8)
   87b2c:	d8801c15 	stw	r2,112(sp)
   87b30:	d8c01b15 	stw	r3,108(sp)
   87b34:	68fff40e 	bge	r13,r3,87b08 <___vfiprintf_internal_r+0xc28>
   87b38:	1000101e 	bne	r2,zero,87b7c <___vfiprintf_internal_r+0xc9c>
   87b3c:	e73ffc04 	addi	fp,fp,-16
   87b40:	01000044 	movi	r4,1
   87b44:	000b883a 	mov	r5,zero
   87b48:	d811883a 	mov	r8,sp
   87b4c:	3f3ff316 	blt	r7,fp,87b1c <___vfiprintf_internal_r+0xc3c>
   87b50:	da802417 	ldw	r10,144(sp)
   87b54:	1705883a 	add	r2,r2,fp
   87b58:	47000115 	stw	fp,4(r8)
   87b5c:	42800015 	stw	r10,0(r8)
   87b60:	d8801c15 	stw	r2,112(sp)
   87b64:	d9001b15 	stw	r4,108(sp)
   87b68:	00c001c4 	movi	r3,7
   87b6c:	19003616 	blt	r3,r4,87c48 <___vfiprintf_internal_r+0xd68>
   87b70:	42000204 	addi	r8,r8,8
   87b74:	21000044 	addi	r4,r4,1
   87b78:	003e5706 	br	874d8 <___vfiprintf_internal_r+0x5f8>
   87b7c:	d9402117 	ldw	r5,132(sp)
   87b80:	d9002017 	ldw	r4,128(sp)
   87b84:	d9801a04 	addi	r6,sp,104
   87b88:	d9c02b15 	stw	r7,172(sp)
   87b8c:	db402a15 	stw	r13,168(sp)
   87b90:	0086dcc0 	call	86dcc <__sprint_r.part.0>
   87b94:	d9c02b17 	ldw	r7,172(sp)
   87b98:	db402a17 	ldw	r13,168(sp)
   87b9c:	1000241e 	bne	r2,zero,87c30 <___vfiprintf_internal_r+0xd50>
   87ba0:	d9401b17 	ldw	r5,108(sp)
   87ba4:	d8801c17 	ldw	r2,112(sp)
   87ba8:	d811883a 	mov	r8,sp
   87bac:	29000044 	addi	r4,r5,1
   87bb0:	003fd806 	br	87b14 <___vfiprintf_internal_r+0xc34>
   87bb4:	d9401b17 	ldw	r5,108(sp)
   87bb8:	00c00274 	movhi	r3,9
   87bbc:	18febb04 	addi	r3,r3,-1300
   87bc0:	d8c02415 	stw	r3,144(sp)
   87bc4:	29400044 	addi	r5,r5,1
   87bc8:	d8c02417 	ldw	r3,144(sp)
   87bcc:	14c5883a 	add	r2,r2,r19
   87bd0:	44c00115 	stw	r19,4(r8)
   87bd4:	40c00015 	stw	r3,0(r8)
   87bd8:	d8801c15 	stw	r2,112(sp)
   87bdc:	d9401b15 	stw	r5,108(sp)
   87be0:	00c001c4 	movi	r3,7
   87be4:	1940070e 	bge	r3,r5,87c04 <___vfiprintf_internal_r+0xd24>
   87be8:	103e4826 	beq	r2,zero,8750c <___vfiprintf_internal_r+0x62c>
   87bec:	d9402117 	ldw	r5,132(sp)
   87bf0:	d9002017 	ldw	r4,128(sp)
   87bf4:	d9801a04 	addi	r6,sp,104
   87bf8:	0086dcc0 	call	86dcc <__sprint_r.part.0>
   87bfc:	10000c1e 	bne	r2,zero,87c30 <___vfiprintf_internal_r+0xd50>
   87c00:	d8801c17 	ldw	r2,112(sp)
   87c04:	8c80010e 	bge	r17,r18,87c0c <___vfiprintf_internal_r+0xd2c>
   87c08:	9023883a 	mov	r17,r18
   87c0c:	da802317 	ldw	r10,140(sp)
   87c10:	5455883a 	add	r10,r10,r17
   87c14:	da802315 	stw	r10,140(sp)
   87c18:	103e4126 	beq	r2,zero,87520 <___vfiprintf_internal_r+0x640>
   87c1c:	d9402117 	ldw	r5,132(sp)
   87c20:	d9002017 	ldw	r4,128(sp)
   87c24:	d9801a04 	addi	r6,sp,104
   87c28:	0086dcc0 	call	86dcc <__sprint_r.part.0>
   87c2c:	103e3c26 	beq	r2,zero,87520 <___vfiprintf_internal_r+0x640>
   87c30:	dd002117 	ldw	r20,132(sp)
   87c34:	a080030b 	ldhu	r2,12(r20)
   87c38:	1080100c 	andi	r2,r2,64
   87c3c:	1001231e 	bne	r2,zero,880cc <___vfiprintf_internal_r+0x11ec>
   87c40:	d8802317 	ldw	r2,140(sp)
   87c44:	003d7b06 	br	87234 <___vfiprintf_internal_r+0x354>
   87c48:	1000991e 	bne	r2,zero,87eb0 <___vfiprintf_internal_r+0xfd0>
   87c4c:	00c00044 	movi	r3,1
   87c50:	9805883a 	mov	r2,r19
   87c54:	dd400015 	stw	r21,0(sp)
   87c58:	dcc00115 	stw	r19,4(sp)
   87c5c:	dcc01c15 	stw	r19,112(sp)
   87c60:	d8c01b15 	stw	r3,108(sp)
   87c64:	d811883a 	mov	r8,sp
   87c68:	42000204 	addi	r8,r8,8
   87c6c:	a2c0010c 	andi	r11,r20,4
   87c70:	583fe426 	beq	r11,zero,87c04 <___vfiprintf_internal_r+0xd24>
   87c74:	8ca7c83a 	sub	r19,r17,r18
   87c78:	04ffe20e 	bge	zero,r19,87c04 <___vfiprintf_internal_r+0xd24>
   87c7c:	01c00404 	movi	r7,16
   87c80:	3cffcc0e 	bge	r7,r19,87bb4 <___vfiprintf_internal_r+0xcd4>
   87c84:	02800274 	movhi	r10,9
   87c88:	52bebb04 	addi	r10,r10,-1300
   87c8c:	d9001b17 	ldw	r4,108(sp)
   87c90:	da802415 	stw	r10,144(sp)
   87c94:	382b883a 	mov	r21,r7
   87c98:	050001c4 	movi	r20,7
   87c9c:	df002017 	ldw	fp,128(sp)
   87ca0:	00000506 	br	87cb8 <___vfiprintf_internal_r+0xdd8>
   87ca4:	21400084 	addi	r5,r4,2
   87ca8:	42000204 	addi	r8,r8,8
   87cac:	1809883a 	mov	r4,r3
   87cb0:	9cfffc04 	addi	r19,r19,-16
   87cb4:	acffc40e 	bge	r21,r19,87bc8 <___vfiprintf_internal_r+0xce8>
   87cb8:	10800404 	addi	r2,r2,16
   87cbc:	20c00044 	addi	r3,r4,1
   87cc0:	45800015 	stw	r22,0(r8)
   87cc4:	45400115 	stw	r21,4(r8)
   87cc8:	d8801c15 	stw	r2,112(sp)
   87ccc:	d8c01b15 	stw	r3,108(sp)
   87cd0:	a0fff40e 	bge	r20,r3,87ca4 <___vfiprintf_internal_r+0xdc4>
   87cd4:	1000041e 	bne	r2,zero,87ce8 <___vfiprintf_internal_r+0xe08>
   87cd8:	01400044 	movi	r5,1
   87cdc:	0009883a 	mov	r4,zero
   87ce0:	d811883a 	mov	r8,sp
   87ce4:	003ff206 	br	87cb0 <___vfiprintf_internal_r+0xdd0>
   87ce8:	d9402117 	ldw	r5,132(sp)
   87cec:	d9801a04 	addi	r6,sp,104
   87cf0:	e009883a 	mov	r4,fp
   87cf4:	0086dcc0 	call	86dcc <__sprint_r.part.0>
   87cf8:	103fcd1e 	bne	r2,zero,87c30 <___vfiprintf_internal_r+0xd50>
   87cfc:	d9001b17 	ldw	r4,108(sp)
   87d00:	d8801c17 	ldw	r2,112(sp)
   87d04:	d811883a 	mov	r8,sp
   87d08:	21400044 	addi	r5,r4,1
   87d0c:	003fe806 	br	87cb0 <___vfiprintf_internal_r+0xdd0>
   87d10:	d9402117 	ldw	r5,132(sp)
   87d14:	d9002017 	ldw	r4,128(sp)
   87d18:	d9801a04 	addi	r6,sp,104
   87d1c:	d9c02b15 	stw	r7,172(sp)
   87d20:	db402a15 	stw	r13,168(sp)
   87d24:	0086dcc0 	call	86dcc <__sprint_r.part.0>
   87d28:	d9c02b17 	ldw	r7,172(sp)
   87d2c:	db402a17 	ldw	r13,168(sp)
   87d30:	103fbf1e 	bne	r2,zero,87c30 <___vfiprintf_internal_r+0xd50>
   87d34:	d9401b17 	ldw	r5,108(sp)
   87d38:	d8801c17 	ldw	r2,112(sp)
   87d3c:	d811883a 	mov	r8,sp
   87d40:	29800044 	addi	r6,r5,1
   87d44:	003dc406 	br	87458 <___vfiprintf_internal_r+0x578>
   87d48:	1000d21e 	bne	r2,zero,88094 <___vfiprintf_internal_r+0x11b4>
   87d4c:	d8c01d87 	ldb	r3,118(sp)
   87d50:	18009526 	beq	r3,zero,87fa8 <___vfiprintf_internal_r+0x10c8>
   87d54:	00800044 	movi	r2,1
   87d58:	d8c01d84 	addi	r3,sp,118
   87d5c:	1009883a 	mov	r4,r2
   87d60:	d8c00015 	stw	r3,0(sp)
   87d64:	d8800115 	stw	r2,4(sp)
   87d68:	d811883a 	mov	r8,sp
   87d6c:	200b883a 	mov	r5,r4
   87d70:	42000204 	addi	r8,r8,8
   87d74:	21000044 	addi	r4,r4,1
   87d78:	003d9706 	br	873d8 <___vfiprintf_internal_r+0x4f8>
   87d7c:	d9001d04 	addi	r4,sp,116
   87d80:	00800084 	movi	r2,2
   87d84:	d9000015 	stw	r4,0(sp)
   87d88:	d8800115 	stw	r2,4(sp)
   87d8c:	1809883a 	mov	r4,r3
   87d90:	d811883a 	mov	r8,sp
   87d94:	200b883a 	mov	r5,r4
   87d98:	42000204 	addi	r8,r8,8
   87d9c:	21000044 	addi	r4,r4,1
   87da0:	003f4e06 	br	87adc <___vfiprintf_internal_r+0xbfc>
   87da4:	d8001d85 	stb	zero,118(sp)
   87da8:	48005016 	blt	r9,zero,87eec <___vfiprintf_internal_r+0x100c>
   87dac:	00ffdfc4 	movi	r3,-129
   87db0:	94c4b03a 	or	r2,r18,r19
   87db4:	a0e8703a 	and	r20,r20,r3
   87db8:	103d4426 	beq	r2,zero,872cc <___vfiprintf_internal_r+0x3ec>
   87dbc:	0039883a 	mov	fp,zero
   87dc0:	d9002617 	ldw	r4,152(sp)
   87dc4:	dd401a04 	addi	r21,sp,104
   87dc8:	908003cc 	andi	r2,r18,15
   87dcc:	9806973a 	slli	r3,r19,28
   87dd0:	2085883a 	add	r2,r4,r2
   87dd4:	9024d13a 	srli	r18,r18,4
   87dd8:	10800003 	ldbu	r2,0(r2)
   87ddc:	9826d13a 	srli	r19,r19,4
   87de0:	ad7fffc4 	addi	r21,r21,-1
   87de4:	1ca4b03a 	or	r18,r3,r18
   87de8:	a8800005 	stb	r2,0(r21)
   87dec:	94c4b03a 	or	r2,r18,r19
   87df0:	103ff51e 	bne	r2,zero,87dc8 <___vfiprintf_internal_r+0xee8>
   87df4:	003e5906 	br	8775c <___vfiprintf_internal_r+0x87c>
   87df8:	d9402117 	ldw	r5,132(sp)
   87dfc:	d9002017 	ldw	r4,128(sp)
   87e00:	d9801a04 	addi	r6,sp,104
   87e04:	0086dcc0 	call	86dcc <__sprint_r.part.0>
   87e08:	103f891e 	bne	r2,zero,87c30 <___vfiprintf_internal_r+0xd50>
   87e0c:	d8801c17 	ldw	r2,112(sp)
   87e10:	d811883a 	mov	r8,sp
   87e14:	003f9506 	br	87c6c <___vfiprintf_internal_r+0xd8c>
   87e18:	d9402117 	ldw	r5,132(sp)
   87e1c:	d9002017 	ldw	r4,128(sp)
   87e20:	d9801a04 	addi	r6,sp,104
   87e24:	0086dcc0 	call	86dcc <__sprint_r.part.0>
   87e28:	103f811e 	bne	r2,zero,87c30 <___vfiprintf_internal_r+0xd50>
   87e2c:	d811883a 	mov	r8,sp
   87e30:	003ced06 	br	871e8 <___vfiprintf_internal_r+0x308>
   87e34:	d9402117 	ldw	r5,132(sp)
   87e38:	d9002017 	ldw	r4,128(sp)
   87e3c:	d9801a04 	addi	r6,sp,104
   87e40:	da402c15 	stw	r9,176(sp)
   87e44:	db802a15 	stw	r14,168(sp)
   87e48:	0086dcc0 	call	86dcc <__sprint_r.part.0>
   87e4c:	da402c17 	ldw	r9,176(sp)
   87e50:	db802a17 	ldw	r14,168(sp)
   87e54:	103f761e 	bne	r2,zero,87c30 <___vfiprintf_internal_r+0xd50>
   87e58:	d9401b17 	ldw	r5,108(sp)
   87e5c:	d8801c17 	ldw	r2,112(sp)
   87e60:	d811883a 	mov	r8,sp
   87e64:	29000044 	addi	r4,r5,1
   87e68:	003d5b06 	br	873d8 <___vfiprintf_internal_r+0x4f8>
   87e6c:	d9402117 	ldw	r5,132(sp)
   87e70:	d9002017 	ldw	r4,128(sp)
   87e74:	d9801a04 	addi	r6,sp,104
   87e78:	da402c15 	stw	r9,176(sp)
   87e7c:	0086dcc0 	call	86dcc <__sprint_r.part.0>
   87e80:	da402c17 	ldw	r9,176(sp)
   87e84:	103f6a1e 	bne	r2,zero,87c30 <___vfiprintf_internal_r+0xd50>
   87e88:	d9401b17 	ldw	r5,108(sp)
   87e8c:	d8801c17 	ldw	r2,112(sp)
   87e90:	d811883a 	mov	r8,sp
   87e94:	29000044 	addi	r4,r5,1
   87e98:	003f1006 	br	87adc <___vfiprintf_internal_r+0xbfc>
   87e9c:	1000c31e 	bne	r2,zero,881ac <___vfiprintf_internal_r+0x12cc>
   87ea0:	01000044 	movi	r4,1
   87ea4:	000b883a 	mov	r5,zero
   87ea8:	d811883a 	mov	r8,sp
   87eac:	003f0d06 	br	87ae4 <___vfiprintf_internal_r+0xc04>
   87eb0:	d9402117 	ldw	r5,132(sp)
   87eb4:	d9002017 	ldw	r4,128(sp)
   87eb8:	d9801a04 	addi	r6,sp,104
   87ebc:	0086dcc0 	call	86dcc <__sprint_r.part.0>
   87ec0:	103f5b1e 	bne	r2,zero,87c30 <___vfiprintf_internal_r+0xd50>
   87ec4:	d9001b17 	ldw	r4,108(sp)
   87ec8:	d8801c17 	ldw	r2,112(sp)
   87ecc:	d811883a 	mov	r8,sp
   87ed0:	21000044 	addi	r4,r4,1
   87ed4:	003d8006 	br	874d8 <___vfiprintf_internal_r+0x5f8>
   87ed8:	01000274 	movhi	r4,9
   87edc:	213e5604 	addi	r4,r4,-1704
   87ee0:	d9002615 	stw	r4,152(sp)
   87ee4:	d8c02215 	stw	r3,136(sp)
   87ee8:	1029883a 	mov	r20,r2
   87eec:	94c4b03a 	or	r2,r18,r19
   87ef0:	103fb21e 	bne	r2,zero,87dbc <___vfiprintf_internal_r+0xedc>
   87ef4:	0039883a 	mov	fp,zero
   87ef8:	00800084 	movi	r2,2
   87efc:	003e6b06 	br	878ac <___vfiprintf_internal_r+0x9cc>
   87f00:	da802217 	ldw	r10,136(sp)
   87f04:	d8001d85 	stb	zero,118(sp)
   87f08:	0027883a 	mov	r19,zero
   87f0c:	50800104 	addi	r2,r10,4
   87f10:	54800017 	ldw	r18,0(r10)
   87f14:	483e6016 	blt	r9,zero,87898 <___vfiprintf_internal_r+0x9b8>
   87f18:	00ffdfc4 	movi	r3,-129
   87f1c:	d8802215 	stw	r2,136(sp)
   87f20:	a0e8703a 	and	r20,r20,r3
   87f24:	0039883a 	mov	fp,zero
   87f28:	903ebb26 	beq	r18,zero,87a18 <___vfiprintf_internal_r+0xb38>
   87f2c:	00800244 	movi	r2,9
   87f30:	14bdee36 	bltu	r2,r18,876ec <___vfiprintf_internal_r+0x80c>
   87f34:	003eba06 	br	87a20 <___vfiprintf_internal_r+0xb40>
   87f38:	00800c04 	movi	r2,48
   87f3c:	d8c01d45 	stb	r3,117(sp)
   87f40:	d8801d05 	stb	r2,116(sp)
   87f44:	d8001d85 	stb	zero,118(sp)
   87f48:	a0c00094 	ori	r3,r20,2
   87f4c:	4800a916 	blt	r9,zero,881f4 <___vfiprintf_internal_r+0x1314>
   87f50:	00bfdfc4 	movi	r2,-129
   87f54:	a096703a 	and	r11,r20,r2
   87f58:	5d000094 	ori	r20,r11,2
   87f5c:	0039883a 	mov	fp,zero
   87f60:	003f9706 	br	87dc0 <___vfiprintf_internal_r+0xee0>
   87f64:	8025883a 	mov	r18,r16
   87f68:	003c2e06 	br	87024 <___vfiprintf_internal_r+0x144>
   87f6c:	00800274 	movhi	r2,9
   87f70:	10be5604 	addi	r2,r2,-1704
   87f74:	0039883a 	mov	fp,zero
   87f78:	d8802615 	stw	r2,152(sp)
   87f7c:	003f9006 	br	87dc0 <___vfiprintf_internal_r+0xee0>
   87f80:	04a5c83a 	sub	r18,zero,r18
   87f84:	07000b44 	movi	fp,45
   87f88:	9004c03a 	cmpne	r2,r18,zero
   87f8c:	04e7c83a 	sub	r19,zero,r19
   87f90:	df001d85 	stb	fp,118(sp)
   87f94:	98a7c83a 	sub	r19,r19,r2
   87f98:	48009f16 	blt	r9,zero,88218 <___vfiprintf_internal_r+0x1338>
   87f9c:	00bfdfc4 	movi	r2,-129
   87fa0:	a0a8703a 	and	r20,r20,r2
   87fa4:	003dd006 	br	876e8 <___vfiprintf_internal_r+0x808>
   87fa8:	70004c26 	beq	r14,zero,880dc <___vfiprintf_internal_r+0x11fc>
   87fac:	00800084 	movi	r2,2
   87fb0:	d8c01d04 	addi	r3,sp,116
   87fb4:	d8c00015 	stw	r3,0(sp)
   87fb8:	d8800115 	stw	r2,4(sp)
   87fbc:	01000044 	movi	r4,1
   87fc0:	d811883a 	mov	r8,sp
   87fc4:	003f7306 	br	87d94 <___vfiprintf_internal_r+0xeb4>
   87fc8:	a080100c 	andi	r2,r20,64
   87fcc:	da802217 	ldw	r10,136(sp)
   87fd0:	103e0626 	beq	r2,zero,877ec <___vfiprintf_internal_r+0x90c>
   87fd4:	5480000f 	ldh	r18,0(r10)
   87fd8:	52800104 	addi	r10,r10,4
   87fdc:	da802215 	stw	r10,136(sp)
   87fe0:	9027d7fa 	srai	r19,r18,31
   87fe4:	9805883a 	mov	r2,r19
   87fe8:	003db806 	br	876cc <___vfiprintf_internal_r+0x7ec>
   87fec:	a080040c 	andi	r2,r20,16
   87ff0:	1000091e 	bne	r2,zero,88018 <___vfiprintf_internal_r+0x1138>
   87ff4:	a2c0100c 	andi	r11,r20,64
   87ff8:	58000726 	beq	r11,zero,88018 <___vfiprintf_internal_r+0x1138>
   87ffc:	da802217 	ldw	r10,136(sp)
   88000:	50800017 	ldw	r2,0(r10)
   88004:	52800104 	addi	r10,r10,4
   88008:	da802215 	stw	r10,136(sp)
   8800c:	da802317 	ldw	r10,140(sp)
   88010:	1280000d 	sth	r10,0(r2)
   88014:	003be706 	br	86fb4 <___vfiprintf_internal_r+0xd4>
   88018:	da802217 	ldw	r10,136(sp)
   8801c:	50800017 	ldw	r2,0(r10)
   88020:	52800104 	addi	r10,r10,4
   88024:	da802215 	stw	r10,136(sp)
   88028:	da802317 	ldw	r10,140(sp)
   8802c:	12800015 	stw	r10,0(r2)
   88030:	003be006 	br	86fb4 <___vfiprintf_internal_r+0xd4>
   88034:	a080100c 	andi	r2,r20,64
   88038:	da802217 	ldw	r10,136(sp)
   8803c:	10003026 	beq	r2,zero,88100 <___vfiprintf_internal_r+0x1220>
   88040:	5480000b 	ldhu	r18,0(r10)
   88044:	52800104 	addi	r10,r10,4
   88048:	0027883a 	mov	r19,zero
   8804c:	da802215 	stw	r10,136(sp)
   88050:	003d8006 	br	87654 <___vfiprintf_internal_r+0x774>
   88054:	80c00007 	ldb	r3,0(r16)
   88058:	003c0006 	br	8705c <___vfiprintf_internal_r+0x17c>
   8805c:	a080100c 	andi	r2,r20,64
   88060:	d8001d85 	stb	zero,118(sp)
   88064:	da802217 	ldw	r10,136(sp)
   88068:	1000201e 	bne	r2,zero,880ec <___vfiprintf_internal_r+0x120c>
   8806c:	50800104 	addi	r2,r10,4
   88070:	54800017 	ldw	r18,0(r10)
   88074:	0027883a 	mov	r19,zero
   88078:	483def0e 	bge	r9,zero,87838 <___vfiprintf_internal_r+0x958>
   8807c:	94c6b03a 	or	r3,r18,r19
   88080:	d8802215 	stw	r2,136(sp)
   88084:	183d4e1e 	bne	r3,zero,875c0 <___vfiprintf_internal_r+0x6e0>
   88088:	0039883a 	mov	fp,zero
   8808c:	0005883a 	mov	r2,zero
   88090:	003e0606 	br	878ac <___vfiprintf_internal_r+0x9cc>
   88094:	d9402117 	ldw	r5,132(sp)
   88098:	d9002017 	ldw	r4,128(sp)
   8809c:	d9801a04 	addi	r6,sp,104
   880a0:	da402c15 	stw	r9,176(sp)
   880a4:	db802a15 	stw	r14,168(sp)
   880a8:	0086dcc0 	call	86dcc <__sprint_r.part.0>
   880ac:	da402c17 	ldw	r9,176(sp)
   880b0:	db802a17 	ldw	r14,168(sp)
   880b4:	103ede1e 	bne	r2,zero,87c30 <___vfiprintf_internal_r+0xd50>
   880b8:	d9401b17 	ldw	r5,108(sp)
   880bc:	d8801c17 	ldw	r2,112(sp)
   880c0:	d811883a 	mov	r8,sp
   880c4:	29000044 	addi	r4,r5,1
   880c8:	003e7406 	br	87a9c <___vfiprintf_internal_r+0xbbc>
   880cc:	00bfffc4 	movi	r2,-1
   880d0:	003c5806 	br	87234 <___vfiprintf_internal_r+0x354>
   880d4:	d811883a 	mov	r8,sp
   880d8:	003ee806 	br	87c7c <___vfiprintf_internal_r+0xd9c>
   880dc:	000b883a 	mov	r5,zero
   880e0:	01000044 	movi	r4,1
   880e4:	d811883a 	mov	r8,sp
   880e8:	003e7c06 	br	87adc <___vfiprintf_internal_r+0xbfc>
   880ec:	50800104 	addi	r2,r10,4
   880f0:	5480000b 	ldhu	r18,0(r10)
   880f4:	0027883a 	mov	r19,zero
   880f8:	483dcf0e 	bge	r9,zero,87838 <___vfiprintf_internal_r+0x958>
   880fc:	003fdf06 	br	8807c <___vfiprintf_internal_r+0x119c>
   88100:	54800017 	ldw	r18,0(r10)
   88104:	52800104 	addi	r10,r10,4
   88108:	0027883a 	mov	r19,zero
   8810c:	da802215 	stw	r10,136(sp)
   88110:	003d5006 	br	87654 <___vfiprintf_internal_r+0x774>
   88114:	50800104 	addi	r2,r10,4
   88118:	5480000b 	ldhu	r18,0(r10)
   8811c:	0027883a 	mov	r19,zero
   88120:	483f7d0e 	bge	r9,zero,87f18 <___vfiprintf_internal_r+0x1038>
   88124:	003ddc06 	br	87898 <___vfiprintf_internal_r+0x9b8>
   88128:	d8c02215 	stw	r3,136(sp)
   8812c:	0039883a 	mov	fp,zero
   88130:	003ddb06 	br	878a0 <___vfiprintf_internal_r+0x9c0>
   88134:	02800274 	movhi	r10,9
   88138:	52beb704 	addi	r10,r10,-1316
   8813c:	da802415 	stw	r10,144(sp)
   88140:	003e8306 	br	87b50 <___vfiprintf_internal_r+0xc70>
   88144:	d8801c17 	ldw	r2,112(sp)
   88148:	dd002117 	ldw	r20,132(sp)
   8814c:	103eb926 	beq	r2,zero,87c34 <___vfiprintf_internal_r+0xd54>
   88150:	d9002017 	ldw	r4,128(sp)
   88154:	d9801a04 	addi	r6,sp,104
   88158:	a00b883a 	mov	r5,r20
   8815c:	0086dcc0 	call	86dcc <__sprint_r.part.0>
   88160:	003eb406 	br	87c34 <___vfiprintf_internal_r+0xd54>
   88164:	80c00043 	ldbu	r3,1(r16)
   88168:	a5000814 	ori	r20,r20,32
   8816c:	84000044 	addi	r16,r16,1
   88170:	18c03fcc 	andi	r3,r3,255
   88174:	18c0201c 	xori	r3,r3,128
   88178:	18ffe004 	addi	r3,r3,-128
   8817c:	003bb706 	br	8705c <___vfiprintf_internal_r+0x17c>
   88180:	a809883a 	mov	r4,r21
   88184:	d8c02a15 	stw	r3,168(sp)
   88188:	da002b15 	stw	r8,172(sp)
   8818c:	0086d340 	call	86d34 <strlen>
   88190:	d8c02a17 	ldw	r3,168(sp)
   88194:	1027883a 	mov	r19,r2
   88198:	df001d83 	ldbu	fp,118(sp)
   8819c:	d8c02215 	stw	r3,136(sp)
   881a0:	0013883a 	mov	r9,zero
   881a4:	da002b17 	ldw	r8,172(sp)
   881a8:	003c4d06 	br	872e0 <___vfiprintf_internal_r+0x400>
   881ac:	d9402117 	ldw	r5,132(sp)
   881b0:	d9002017 	ldw	r4,128(sp)
   881b4:	d9801a04 	addi	r6,sp,104
   881b8:	da402c15 	stw	r9,176(sp)
   881bc:	0086dcc0 	call	86dcc <__sprint_r.part.0>
   881c0:	da402c17 	ldw	r9,176(sp)
   881c4:	103e9a1e 	bne	r2,zero,87c30 <___vfiprintf_internal_r+0xd50>
   881c8:	d9401b17 	ldw	r5,108(sp)
   881cc:	d8801c17 	ldw	r2,112(sp)
   881d0:	d811883a 	mov	r8,sp
   881d4:	29000044 	addi	r4,r5,1
   881d8:	003e4206 	br	87ae4 <___vfiprintf_internal_r+0xc04>
   881dc:	d9401b17 	ldw	r5,108(sp)
   881e0:	01000274 	movhi	r4,9
   881e4:	213ebb04 	addi	r4,r4,-1300
   881e8:	d9002415 	stw	r4,144(sp)
   881ec:	29400044 	addi	r5,r5,1
   881f0:	003c6d06 	br	873a8 <___vfiprintf_internal_r+0x4c8>
   881f4:	0039883a 	mov	fp,zero
   881f8:	00800084 	movi	r2,2
   881fc:	10803fcc 	andi	r2,r2,255
   88200:	01000044 	movi	r4,1
   88204:	11001e26 	beq	r2,r4,88280 <___vfiprintf_internal_r+0x13a0>
   88208:	01000084 	movi	r4,2
   8820c:	11001e1e 	bne	r2,r4,88288 <___vfiprintf_internal_r+0x13a8>
   88210:	1829883a 	mov	r20,r3
   88214:	003eea06 	br	87dc0 <___vfiprintf_internal_r+0xee0>
   88218:	a007883a 	mov	r3,r20
   8821c:	00800044 	movi	r2,1
   88220:	003ff606 	br	881fc <___vfiprintf_internal_r+0x131c>
   88224:	00800184 	movi	r2,6
   88228:	1240012e 	bgeu	r2,r9,88230 <___vfiprintf_internal_r+0x1350>
   8822c:	1013883a 	mov	r9,r2
   88230:	4827883a 	mov	r19,r9
   88234:	4825883a 	mov	r18,r9
   88238:	48001516 	blt	r9,zero,88290 <___vfiprintf_internal_r+0x13b0>
   8823c:	05400274 	movhi	r21,9
   88240:	d8c02215 	stw	r3,136(sp)
   88244:	ad7e5b04 	addi	r21,r21,-1684
   88248:	003d1406 	br	8769c <___vfiprintf_internal_r+0x7bc>
   8824c:	02800274 	movhi	r10,9
   88250:	52beb704 	addi	r10,r10,-1316
   88254:	da802415 	stw	r10,144(sp)
   88258:	200d883a 	mov	r6,r4
   8825c:	003c9106 	br	874a4 <___vfiprintf_internal_r+0x5c4>
   88260:	5021883a 	mov	r16,r10
   88264:	0013883a 	mov	r9,zero
   88268:	003b7d06 	br	87060 <___vfiprintf_internal_r+0x180>
   8826c:	4827883a 	mov	r19,r9
   88270:	df001d83 	ldbu	fp,118(sp)
   88274:	d8c02215 	stw	r3,136(sp)
   88278:	0013883a 	mov	r9,zero
   8827c:	003c1806 	br	872e0 <___vfiprintf_internal_r+0x400>
   88280:	1829883a 	mov	r20,r3
   88284:	003d1806 	br	876e8 <___vfiprintf_internal_r+0x808>
   88288:	1829883a 	mov	r20,r3
   8828c:	003ccd06 	br	875c4 <___vfiprintf_internal_r+0x6e4>
   88290:	0025883a 	mov	r18,zero
   88294:	003fe906 	br	8823c <___vfiprintf_internal_r+0x135c>
   88298:	d8802217 	ldw	r2,136(sp)
   8829c:	80c00043 	ldbu	r3,1(r16)
   882a0:	5021883a 	mov	r16,r10
   882a4:	12400017 	ldw	r9,0(r2)
   882a8:	10800104 	addi	r2,r2,4
   882ac:	d8802215 	stw	r2,136(sp)
   882b0:	483faf0e 	bge	r9,zero,88170 <___vfiprintf_internal_r+0x1290>
   882b4:	18c03fcc 	andi	r3,r3,255
   882b8:	18c0201c 	xori	r3,r3,128
   882bc:	027fffc4 	movi	r9,-1
   882c0:	18ffe004 	addi	r3,r3,-128
   882c4:	003b6506 	br	8705c <___vfiprintf_internal_r+0x17c>
   882c8:	d9c01d85 	stb	r7,118(sp)
   882cc:	003ca006 	br	87550 <___vfiprintf_internal_r+0x670>
   882d0:	d9c01d85 	stb	r7,118(sp)
   882d4:	003cad06 	br	8758c <___vfiprintf_internal_r+0x6ac>
   882d8:	d9c01d85 	stb	r7,118(sp)
   882dc:	003d7d06 	br	878d4 <___vfiprintf_internal_r+0x9f4>
   882e0:	d9c01d85 	stb	r7,118(sp)
   882e4:	003d5f06 	br	87864 <___vfiprintf_internal_r+0x984>
   882e8:	a080004c 	andi	r2,r20,1
   882ec:	0039883a 	mov	fp,zero
   882f0:	10000526 	beq	r2,zero,88308 <___vfiprintf_internal_r+0x1428>
   882f4:	00800c04 	movi	r2,48
   882f8:	d88019c5 	stb	r2,103(sp)
   882fc:	dcc02717 	ldw	r19,156(sp)
   88300:	dd4019c4 	addi	r21,sp,103
   88304:	003bf606 	br	872e0 <___vfiprintf_internal_r+0x400>
   88308:	0027883a 	mov	r19,zero
   8830c:	dd401a04 	addi	r21,sp,104
   88310:	003bf306 	br	872e0 <___vfiprintf_internal_r+0x400>
   88314:	d9c01d85 	stb	r7,118(sp)
   88318:	003dc806 	br	87a3c <___vfiprintf_internal_r+0xb5c>
   8831c:	d9c01d85 	stb	r7,118(sp)
   88320:	003d3a06 	br	8780c <___vfiprintf_internal_r+0x92c>
   88324:	d9c01d85 	stb	r7,118(sp)
   88328:	003d2a06 	br	877d4 <___vfiprintf_internal_r+0x8f4>
   8832c:	d9c01d85 	stb	r7,118(sp)
   88330:	003cde06 	br	876ac <___vfiprintf_internal_r+0x7cc>
   88334:	d9c01d85 	stb	r7,118(sp)
   88338:	003cbc06 	br	8762c <___vfiprintf_internal_r+0x74c>

0008833c <__vfiprintf_internal>:
   8833c:	00800274 	movhi	r2,9
   88340:	1085b604 	addi	r2,r2,5848
   88344:	300f883a 	mov	r7,r6
   88348:	280d883a 	mov	r6,r5
   8834c:	200b883a 	mov	r5,r4
   88350:	11000017 	ldw	r4,0(r2)
   88354:	0086ee01 	jmpi	86ee0 <___vfiprintf_internal_r>

00088358 <__sbprintf>:
   88358:	2880030b 	ldhu	r2,12(r5)
   8835c:	2ac01917 	ldw	r11,100(r5)
   88360:	2a80038b 	ldhu	r10,14(r5)
   88364:	2a400717 	ldw	r9,28(r5)
   88368:	2a000917 	ldw	r8,36(r5)
   8836c:	defee204 	addi	sp,sp,-1144
   88370:	00c10004 	movi	r3,1024
   88374:	dc011a15 	stw	r16,1128(sp)
   88378:	10bfff4c 	andi	r2,r2,65533
   8837c:	2821883a 	mov	r16,r5
   88380:	d8cb883a 	add	r5,sp,r3
   88384:	dc811c15 	stw	r18,1136(sp)
   88388:	dc411b15 	stw	r17,1132(sp)
   8838c:	dfc11d15 	stw	ra,1140(sp)
   88390:	2025883a 	mov	r18,r4
   88394:	d881030d 	sth	r2,1036(sp)
   88398:	dac11915 	stw	r11,1124(sp)
   8839c:	da81038d 	sth	r10,1038(sp)
   883a0:	da410715 	stw	r9,1052(sp)
   883a4:	da010915 	stw	r8,1060(sp)
   883a8:	dec10015 	stw	sp,1024(sp)
   883ac:	dec10415 	stw	sp,1040(sp)
   883b0:	d8c10215 	stw	r3,1032(sp)
   883b4:	d8c10515 	stw	r3,1044(sp)
   883b8:	d8010615 	stw	zero,1048(sp)
   883bc:	0086ee00 	call	86ee0 <___vfiprintf_internal_r>
   883c0:	1023883a 	mov	r17,r2
   883c4:	10000416 	blt	r2,zero,883d8 <__sbprintf+0x80>
   883c8:	d9410004 	addi	r5,sp,1024
   883cc:	9009883a 	mov	r4,r18
   883d0:	00842780 	call	84278 <_fflush_r>
   883d4:	10000d1e 	bne	r2,zero,8840c <__sbprintf+0xb4>
   883d8:	d881030b 	ldhu	r2,1036(sp)
   883dc:	1080100c 	andi	r2,r2,64
   883e0:	10000326 	beq	r2,zero,883f0 <__sbprintf+0x98>
   883e4:	8080030b 	ldhu	r2,12(r16)
   883e8:	10801014 	ori	r2,r2,64
   883ec:	8080030d 	sth	r2,12(r16)
   883f0:	8805883a 	mov	r2,r17
   883f4:	dfc11d17 	ldw	ra,1140(sp)
   883f8:	dc811c17 	ldw	r18,1136(sp)
   883fc:	dc411b17 	ldw	r17,1132(sp)
   88400:	dc011a17 	ldw	r16,1128(sp)
   88404:	dec11e04 	addi	sp,sp,1144
   88408:	f800283a 	ret
   8840c:	047fffc4 	movi	r17,-1
   88410:	003ff106 	br	883d8 <__sbprintf+0x80>

00088414 <_write_r>:
   88414:	defffd04 	addi	sp,sp,-12
   88418:	2805883a 	mov	r2,r5
   8841c:	dc000015 	stw	r16,0(sp)
   88420:	04000274 	movhi	r16,9
   88424:	dc400115 	stw	r17,4(sp)
   88428:	300b883a 	mov	r5,r6
   8842c:	840c8604 	addi	r16,r16,12824
   88430:	2023883a 	mov	r17,r4
   88434:	380d883a 	mov	r6,r7
   88438:	1009883a 	mov	r4,r2
   8843c:	dfc00215 	stw	ra,8(sp)
   88440:	80000015 	stw	zero,0(r16)
   88444:	008d6c40 	call	8d6c4 <write>
   88448:	00ffffc4 	movi	r3,-1
   8844c:	10c00526 	beq	r2,r3,88464 <_write_r+0x50>
   88450:	dfc00217 	ldw	ra,8(sp)
   88454:	dc400117 	ldw	r17,4(sp)
   88458:	dc000017 	ldw	r16,0(sp)
   8845c:	dec00304 	addi	sp,sp,12
   88460:	f800283a 	ret
   88464:	80c00017 	ldw	r3,0(r16)
   88468:	183ff926 	beq	r3,zero,88450 <_write_r+0x3c>
   8846c:	88c00015 	stw	r3,0(r17)
   88470:	003ff706 	br	88450 <_write_r+0x3c>

00088474 <_close_r>:
   88474:	defffd04 	addi	sp,sp,-12
   88478:	dc000015 	stw	r16,0(sp)
   8847c:	04000274 	movhi	r16,9
   88480:	dc400115 	stw	r17,4(sp)
   88484:	840c8604 	addi	r16,r16,12824
   88488:	2023883a 	mov	r17,r4
   8848c:	2809883a 	mov	r4,r5
   88490:	dfc00215 	stw	ra,8(sp)
   88494:	80000015 	stw	zero,0(r16)
   88498:	008cbe00 	call	8cbe0 <close>
   8849c:	00ffffc4 	movi	r3,-1
   884a0:	10c00526 	beq	r2,r3,884b8 <_close_r+0x44>
   884a4:	dfc00217 	ldw	ra,8(sp)
   884a8:	dc400117 	ldw	r17,4(sp)
   884ac:	dc000017 	ldw	r16,0(sp)
   884b0:	dec00304 	addi	sp,sp,12
   884b4:	f800283a 	ret
   884b8:	80c00017 	ldw	r3,0(r16)
   884bc:	183ff926 	beq	r3,zero,884a4 <_close_r+0x30>
   884c0:	88c00015 	stw	r3,0(r17)
   884c4:	003ff706 	br	884a4 <_close_r+0x30>

000884c8 <_calloc_r>:
   884c8:	298b383a 	mul	r5,r5,r6
   884cc:	defffe04 	addi	sp,sp,-8
   884d0:	dfc00115 	stw	ra,4(sp)
   884d4:	dc000015 	stw	r16,0(sp)
   884d8:	0084ef80 	call	84ef8 <_malloc_r>
   884dc:	10002926 	beq	r2,zero,88584 <_calloc_r+0xbc>
   884e0:	11bfff17 	ldw	r6,-4(r2)
   884e4:	1021883a 	mov	r16,r2
   884e8:	00bfff04 	movi	r2,-4
   884ec:	308c703a 	and	r6,r6,r2
   884f0:	00c00904 	movi	r3,36
   884f4:	308d883a 	add	r6,r6,r2
   884f8:	19801636 	bltu	r3,r6,88554 <_calloc_r+0x8c>
   884fc:	008004c4 	movi	r2,19
   88500:	11800b2e 	bgeu	r2,r6,88530 <_calloc_r+0x68>
   88504:	80000015 	stw	zero,0(r16)
   88508:	80000115 	stw	zero,4(r16)
   8850c:	008006c4 	movi	r2,27
   88510:	11801a2e 	bgeu	r2,r6,8857c <_calloc_r+0xb4>
   88514:	80000215 	stw	zero,8(r16)
   88518:	80000315 	stw	zero,12(r16)
   8851c:	30c0151e 	bne	r6,r3,88574 <_calloc_r+0xac>
   88520:	80000415 	stw	zero,16(r16)
   88524:	80800604 	addi	r2,r16,24
   88528:	80000515 	stw	zero,20(r16)
   8852c:	00000106 	br	88534 <_calloc_r+0x6c>
   88530:	8005883a 	mov	r2,r16
   88534:	10000015 	stw	zero,0(r2)
   88538:	10000115 	stw	zero,4(r2)
   8853c:	10000215 	stw	zero,8(r2)
   88540:	8005883a 	mov	r2,r16
   88544:	dfc00117 	ldw	ra,4(sp)
   88548:	dc000017 	ldw	r16,0(sp)
   8854c:	dec00204 	addi	sp,sp,8
   88550:	f800283a 	ret
   88554:	000b883a 	mov	r5,zero
   88558:	8009883a 	mov	r4,r16
   8855c:	00859300 	call	85930 <memset>
   88560:	8005883a 	mov	r2,r16
   88564:	dfc00117 	ldw	ra,4(sp)
   88568:	dc000017 	ldw	r16,0(sp)
   8856c:	dec00204 	addi	sp,sp,8
   88570:	f800283a 	ret
   88574:	80800404 	addi	r2,r16,16
   88578:	003fee06 	br	88534 <_calloc_r+0x6c>
   8857c:	80800204 	addi	r2,r16,8
   88580:	003fec06 	br	88534 <_calloc_r+0x6c>
   88584:	0005883a 	mov	r2,zero
   88588:	003fee06 	br	88544 <_calloc_r+0x7c>

0008858c <_fclose_r>:
   8858c:	28003926 	beq	r5,zero,88674 <_fclose_r+0xe8>
   88590:	defffc04 	addi	sp,sp,-16
   88594:	dc400115 	stw	r17,4(sp)
   88598:	dc000015 	stw	r16,0(sp)
   8859c:	dfc00315 	stw	ra,12(sp)
   885a0:	dc800215 	stw	r18,8(sp)
   885a4:	2023883a 	mov	r17,r4
   885a8:	2821883a 	mov	r16,r5
   885ac:	20000226 	beq	r4,zero,885b8 <_fclose_r+0x2c>
   885b0:	20800e17 	ldw	r2,56(r4)
   885b4:	10002726 	beq	r2,zero,88654 <_fclose_r+0xc8>
   885b8:	8080030f 	ldh	r2,12(r16)
   885bc:	1000071e 	bne	r2,zero,885dc <_fclose_r+0x50>
   885c0:	0005883a 	mov	r2,zero
   885c4:	dfc00317 	ldw	ra,12(sp)
   885c8:	dc800217 	ldw	r18,8(sp)
   885cc:	dc400117 	ldw	r17,4(sp)
   885d0:	dc000017 	ldw	r16,0(sp)
   885d4:	dec00404 	addi	sp,sp,16
   885d8:	f800283a 	ret
   885dc:	800b883a 	mov	r5,r16
   885e0:	8809883a 	mov	r4,r17
   885e4:	008405c0 	call	8405c <__sflush_r>
   885e8:	1025883a 	mov	r18,r2
   885ec:	80800b17 	ldw	r2,44(r16)
   885f0:	10000426 	beq	r2,zero,88604 <_fclose_r+0x78>
   885f4:	81400717 	ldw	r5,28(r16)
   885f8:	8809883a 	mov	r4,r17
   885fc:	103ee83a 	callr	r2
   88600:	10001616 	blt	r2,zero,8865c <_fclose_r+0xd0>
   88604:	8080030b 	ldhu	r2,12(r16)
   88608:	1080200c 	andi	r2,r2,128
   8860c:	1000151e 	bne	r2,zero,88664 <_fclose_r+0xd8>
   88610:	81400c17 	ldw	r5,48(r16)
   88614:	28000526 	beq	r5,zero,8862c <_fclose_r+0xa0>
   88618:	80801004 	addi	r2,r16,64
   8861c:	28800226 	beq	r5,r2,88628 <_fclose_r+0x9c>
   88620:	8809883a 	mov	r4,r17
   88624:	00847c80 	call	847c8 <_free_r>
   88628:	80000c15 	stw	zero,48(r16)
   8862c:	81401117 	ldw	r5,68(r16)
   88630:	28000326 	beq	r5,zero,88640 <_fclose_r+0xb4>
   88634:	8809883a 	mov	r4,r17
   88638:	00847c80 	call	847c8 <_free_r>
   8863c:	80001115 	stw	zero,68(r16)
   88640:	00846640 	call	84664 <__sfp_lock_acquire>
   88644:	8000030d 	sth	zero,12(r16)
   88648:	00846680 	call	84668 <__sfp_lock_release>
   8864c:	9005883a 	mov	r2,r18
   88650:	003fdc06 	br	885c4 <_fclose_r+0x38>
   88654:	00846540 	call	84654 <__sinit>
   88658:	003fd706 	br	885b8 <_fclose_r+0x2c>
   8865c:	04bfffc4 	movi	r18,-1
   88660:	003fe806 	br	88604 <_fclose_r+0x78>
   88664:	81400417 	ldw	r5,16(r16)
   88668:	8809883a 	mov	r4,r17
   8866c:	00847c80 	call	847c8 <_free_r>
   88670:	003fe706 	br	88610 <_fclose_r+0x84>
   88674:	0005883a 	mov	r2,zero
   88678:	f800283a 	ret

0008867c <fclose>:
   8867c:	00800274 	movhi	r2,9
   88680:	1085b604 	addi	r2,r2,5848
   88684:	200b883a 	mov	r5,r4
   88688:	11000017 	ldw	r4,0(r2)
   8868c:	008858c1 	jmpi	8858c <_fclose_r>

00088690 <__fputwc>:
   88690:	defff804 	addi	sp,sp,-32
   88694:	dcc00415 	stw	r19,16(sp)
   88698:	dc800315 	stw	r18,12(sp)
   8869c:	dc000115 	stw	r16,4(sp)
   886a0:	dfc00715 	stw	ra,28(sp)
   886a4:	dd400615 	stw	r21,24(sp)
   886a8:	dd000515 	stw	r20,20(sp)
   886ac:	dc400215 	stw	r17,8(sp)
   886b0:	2027883a 	mov	r19,r4
   886b4:	2825883a 	mov	r18,r5
   886b8:	3021883a 	mov	r16,r6
   886bc:	0084ce80 	call	84ce8 <__locale_mb_cur_max>
   886c0:	00c00044 	movi	r3,1
   886c4:	10c03e26 	beq	r2,r3,887c0 <__fputwc+0x130>
   886c8:	81c01704 	addi	r7,r16,92
   886cc:	900d883a 	mov	r6,r18
   886d0:	d80b883a 	mov	r5,sp
   886d4:	9809883a 	mov	r4,r19
   886d8:	00896dc0 	call	896dc <_wcrtomb_r>
   886dc:	1029883a 	mov	r20,r2
   886e0:	00bfffc4 	movi	r2,-1
   886e4:	a0802026 	beq	r20,r2,88768 <__fputwc+0xd8>
   886e8:	d9400003 	ldbu	r5,0(sp)
   886ec:	a0001c26 	beq	r20,zero,88760 <__fputwc+0xd0>
   886f0:	0023883a 	mov	r17,zero
   886f4:	05400284 	movi	r21,10
   886f8:	00000906 	br	88720 <__fputwc+0x90>
   886fc:	80800017 	ldw	r2,0(r16)
   88700:	11400005 	stb	r5,0(r2)
   88704:	80c00017 	ldw	r3,0(r16)
   88708:	18c00044 	addi	r3,r3,1
   8870c:	80c00015 	stw	r3,0(r16)
   88710:	8c400044 	addi	r17,r17,1
   88714:	dc45883a 	add	r2,sp,r17
   88718:	8d00112e 	bgeu	r17,r20,88760 <__fputwc+0xd0>
   8871c:	11400003 	ldbu	r5,0(r2)
   88720:	80c00217 	ldw	r3,8(r16)
   88724:	18ffffc4 	addi	r3,r3,-1
   88728:	80c00215 	stw	r3,8(r16)
   8872c:	183ff30e 	bge	r3,zero,886fc <__fputwc+0x6c>
   88730:	80800617 	ldw	r2,24(r16)
   88734:	18801916 	blt	r3,r2,8879c <__fputwc+0x10c>
   88738:	80800017 	ldw	r2,0(r16)
   8873c:	11400005 	stb	r5,0(r2)
   88740:	80800017 	ldw	r2,0(r16)
   88744:	10c00003 	ldbu	r3,0(r2)
   88748:	10800044 	addi	r2,r2,1
   8874c:	1d402326 	beq	r3,r21,887dc <__fputwc+0x14c>
   88750:	80800015 	stw	r2,0(r16)
   88754:	8c400044 	addi	r17,r17,1
   88758:	dc45883a 	add	r2,sp,r17
   8875c:	8d3fef36 	bltu	r17,r20,8871c <__fputwc+0x8c>
   88760:	9005883a 	mov	r2,r18
   88764:	00000406 	br	88778 <__fputwc+0xe8>
   88768:	80c0030b 	ldhu	r3,12(r16)
   8876c:	a005883a 	mov	r2,r20
   88770:	18c01014 	ori	r3,r3,64
   88774:	80c0030d 	sth	r3,12(r16)
   88778:	dfc00717 	ldw	ra,28(sp)
   8877c:	dd400617 	ldw	r21,24(sp)
   88780:	dd000517 	ldw	r20,20(sp)
   88784:	dcc00417 	ldw	r19,16(sp)
   88788:	dc800317 	ldw	r18,12(sp)
   8878c:	dc400217 	ldw	r17,8(sp)
   88790:	dc000117 	ldw	r16,4(sp)
   88794:	dec00804 	addi	sp,sp,32
   88798:	f800283a 	ret
   8879c:	800d883a 	mov	r6,r16
   887a0:	29403fcc 	andi	r5,r5,255
   887a4:	9809883a 	mov	r4,r19
   887a8:	00895840 	call	89584 <__swbuf_r>
   887ac:	10bfffe0 	cmpeqi	r2,r2,-1
   887b0:	10803fcc 	andi	r2,r2,255
   887b4:	103fd626 	beq	r2,zero,88710 <__fputwc+0x80>
   887b8:	00bfffc4 	movi	r2,-1
   887bc:	003fee06 	br	88778 <__fputwc+0xe8>
   887c0:	90ffffc4 	addi	r3,r18,-1
   887c4:	01003f84 	movi	r4,254
   887c8:	20ffbf36 	bltu	r4,r3,886c8 <__fputwc+0x38>
   887cc:	900b883a 	mov	r5,r18
   887d0:	dc800005 	stb	r18,0(sp)
   887d4:	1029883a 	mov	r20,r2
   887d8:	003fc506 	br	886f0 <__fputwc+0x60>
   887dc:	800d883a 	mov	r6,r16
   887e0:	a80b883a 	mov	r5,r21
   887e4:	9809883a 	mov	r4,r19
   887e8:	00895840 	call	89584 <__swbuf_r>
   887ec:	10bfffe0 	cmpeqi	r2,r2,-1
   887f0:	003fef06 	br	887b0 <__fputwc+0x120>

000887f4 <_fputwc_r>:
   887f4:	3080030b 	ldhu	r2,12(r6)
   887f8:	10c8000c 	andi	r3,r2,8192
   887fc:	1800051e 	bne	r3,zero,88814 <_fputwc_r+0x20>
   88800:	30c01917 	ldw	r3,100(r6)
   88804:	10880014 	ori	r2,r2,8192
   88808:	3080030d 	sth	r2,12(r6)
   8880c:	18880014 	ori	r2,r3,8192
   88810:	30801915 	stw	r2,100(r6)
   88814:	00886901 	jmpi	88690 <__fputwc>

00088818 <fputwc>:
   88818:	00800274 	movhi	r2,9
   8881c:	defffc04 	addi	sp,sp,-16
   88820:	1085b604 	addi	r2,r2,5848
   88824:	dc000115 	stw	r16,4(sp)
   88828:	14000017 	ldw	r16,0(r2)
   8882c:	dc400215 	stw	r17,8(sp)
   88830:	dfc00315 	stw	ra,12(sp)
   88834:	2023883a 	mov	r17,r4
   88838:	80000226 	beq	r16,zero,88844 <fputwc+0x2c>
   8883c:	80800e17 	ldw	r2,56(r16)
   88840:	10001026 	beq	r2,zero,88884 <fputwc+0x6c>
   88844:	2880030b 	ldhu	r2,12(r5)
   88848:	10c8000c 	andi	r3,r2,8192
   8884c:	1800051e 	bne	r3,zero,88864 <fputwc+0x4c>
   88850:	28c01917 	ldw	r3,100(r5)
   88854:	10880014 	ori	r2,r2,8192
   88858:	2880030d 	sth	r2,12(r5)
   8885c:	18880014 	ori	r2,r3,8192
   88860:	28801915 	stw	r2,100(r5)
   88864:	280d883a 	mov	r6,r5
   88868:	8009883a 	mov	r4,r16
   8886c:	880b883a 	mov	r5,r17
   88870:	dfc00317 	ldw	ra,12(sp)
   88874:	dc400217 	ldw	r17,8(sp)
   88878:	dc000117 	ldw	r16,4(sp)
   8887c:	dec00404 	addi	sp,sp,16
   88880:	00886901 	jmpi	88690 <__fputwc>
   88884:	8009883a 	mov	r4,r16
   88888:	d9400015 	stw	r5,0(sp)
   8888c:	00846540 	call	84654 <__sinit>
   88890:	d9400017 	ldw	r5,0(sp)
   88894:	003feb06 	br	88844 <fputwc+0x2c>

00088898 <_fstat_r>:
   88898:	defffd04 	addi	sp,sp,-12
   8889c:	2805883a 	mov	r2,r5
   888a0:	dc000015 	stw	r16,0(sp)
   888a4:	04000274 	movhi	r16,9
   888a8:	dc400115 	stw	r17,4(sp)
   888ac:	840c8604 	addi	r16,r16,12824
   888b0:	2023883a 	mov	r17,r4
   888b4:	300b883a 	mov	r5,r6
   888b8:	1009883a 	mov	r4,r2
   888bc:	dfc00215 	stw	ra,8(sp)
   888c0:	80000015 	stw	zero,0(r16)
   888c4:	008cd2c0 	call	8cd2c <fstat>
   888c8:	00ffffc4 	movi	r3,-1
   888cc:	10c00526 	beq	r2,r3,888e4 <_fstat_r+0x4c>
   888d0:	dfc00217 	ldw	ra,8(sp)
   888d4:	dc400117 	ldw	r17,4(sp)
   888d8:	dc000017 	ldw	r16,0(sp)
   888dc:	dec00304 	addi	sp,sp,12
   888e0:	f800283a 	ret
   888e4:	80c00017 	ldw	r3,0(r16)
   888e8:	183ff926 	beq	r3,zero,888d0 <_fstat_r+0x38>
   888ec:	88c00015 	stw	r3,0(r17)
   888f0:	003ff706 	br	888d0 <_fstat_r+0x38>

000888f4 <__sfvwrite_r>:
   888f4:	30800217 	ldw	r2,8(r6)
   888f8:	10006726 	beq	r2,zero,88a98 <__sfvwrite_r+0x1a4>
   888fc:	28c0030b 	ldhu	r3,12(r5)
   88900:	defff404 	addi	sp,sp,-48
   88904:	dd400715 	stw	r21,28(sp)
   88908:	dd000615 	stw	r20,24(sp)
   8890c:	dc000215 	stw	r16,8(sp)
   88910:	dfc00b15 	stw	ra,44(sp)
   88914:	df000a15 	stw	fp,40(sp)
   88918:	ddc00915 	stw	r23,36(sp)
   8891c:	dd800815 	stw	r22,32(sp)
   88920:	dcc00515 	stw	r19,20(sp)
   88924:	dc800415 	stw	r18,16(sp)
   88928:	dc400315 	stw	r17,12(sp)
   8892c:	1880020c 	andi	r2,r3,8
   88930:	2821883a 	mov	r16,r5
   88934:	202b883a 	mov	r21,r4
   88938:	3029883a 	mov	r20,r6
   8893c:	10002726 	beq	r2,zero,889dc <__sfvwrite_r+0xe8>
   88940:	28800417 	ldw	r2,16(r5)
   88944:	10002526 	beq	r2,zero,889dc <__sfvwrite_r+0xe8>
   88948:	1880008c 	andi	r2,r3,2
   8894c:	a4400017 	ldw	r17,0(r20)
   88950:	10002a26 	beq	r2,zero,889fc <__sfvwrite_r+0x108>
   88954:	05a00034 	movhi	r22,32768
   88958:	0027883a 	mov	r19,zero
   8895c:	0025883a 	mov	r18,zero
   88960:	b5bf0004 	addi	r22,r22,-1024
   88964:	980d883a 	mov	r6,r19
   88968:	a809883a 	mov	r4,r21
   8896c:	90004626 	beq	r18,zero,88a88 <__sfvwrite_r+0x194>
   88970:	900f883a 	mov	r7,r18
   88974:	b480022e 	bgeu	r22,r18,88980 <__sfvwrite_r+0x8c>
   88978:	01e00034 	movhi	r7,32768
   8897c:	39ff0004 	addi	r7,r7,-1024
   88980:	80800917 	ldw	r2,36(r16)
   88984:	81400717 	ldw	r5,28(r16)
   88988:	103ee83a 	callr	r2
   8898c:	0080570e 	bge	zero,r2,88aec <__sfvwrite_r+0x1f8>
   88990:	a0c00217 	ldw	r3,8(r20)
   88994:	98a7883a 	add	r19,r19,r2
   88998:	90a5c83a 	sub	r18,r18,r2
   8899c:	1885c83a 	sub	r2,r3,r2
   889a0:	a0800215 	stw	r2,8(r20)
   889a4:	103fef1e 	bne	r2,zero,88964 <__sfvwrite_r+0x70>
   889a8:	0005883a 	mov	r2,zero
   889ac:	dfc00b17 	ldw	ra,44(sp)
   889b0:	df000a17 	ldw	fp,40(sp)
   889b4:	ddc00917 	ldw	r23,36(sp)
   889b8:	dd800817 	ldw	r22,32(sp)
   889bc:	dd400717 	ldw	r21,28(sp)
   889c0:	dd000617 	ldw	r20,24(sp)
   889c4:	dcc00517 	ldw	r19,20(sp)
   889c8:	dc800417 	ldw	r18,16(sp)
   889cc:	dc400317 	ldw	r17,12(sp)
   889d0:	dc000217 	ldw	r16,8(sp)
   889d4:	dec00c04 	addi	sp,sp,48
   889d8:	f800283a 	ret
   889dc:	800b883a 	mov	r5,r16
   889e0:	a809883a 	mov	r4,r21
   889e4:	00826800 	call	82680 <__swsetup_r>
   889e8:	1000eb1e 	bne	r2,zero,88d98 <__sfvwrite_r+0x4a4>
   889ec:	80c0030b 	ldhu	r3,12(r16)
   889f0:	a4400017 	ldw	r17,0(r20)
   889f4:	1880008c 	andi	r2,r3,2
   889f8:	103fd61e 	bne	r2,zero,88954 <__sfvwrite_r+0x60>
   889fc:	1880004c 	andi	r2,r3,1
   88a00:	10003f1e 	bne	r2,zero,88b00 <__sfvwrite_r+0x20c>
   88a04:	0039883a 	mov	fp,zero
   88a08:	0025883a 	mov	r18,zero
   88a0c:	90001a26 	beq	r18,zero,88a78 <__sfvwrite_r+0x184>
   88a10:	1880800c 	andi	r2,r3,512
   88a14:	84c00217 	ldw	r19,8(r16)
   88a18:	10002126 	beq	r2,zero,88aa0 <__sfvwrite_r+0x1ac>
   88a1c:	982f883a 	mov	r23,r19
   88a20:	94c09336 	bltu	r18,r19,88c70 <__sfvwrite_r+0x37c>
   88a24:	1881200c 	andi	r2,r3,1152
   88a28:	10009e1e 	bne	r2,zero,88ca4 <__sfvwrite_r+0x3b0>
   88a2c:	81000017 	ldw	r4,0(r16)
   88a30:	b80d883a 	mov	r6,r23
   88a34:	e00b883a 	mov	r5,fp
   88a38:	0088e640 	call	88e64 <memmove>
   88a3c:	80c00217 	ldw	r3,8(r16)
   88a40:	81000017 	ldw	r4,0(r16)
   88a44:	9005883a 	mov	r2,r18
   88a48:	1ce7c83a 	sub	r19,r3,r19
   88a4c:	25cf883a 	add	r7,r4,r23
   88a50:	84c00215 	stw	r19,8(r16)
   88a54:	81c00015 	stw	r7,0(r16)
   88a58:	a0c00217 	ldw	r3,8(r20)
   88a5c:	e0b9883a 	add	fp,fp,r2
   88a60:	90a5c83a 	sub	r18,r18,r2
   88a64:	18a7c83a 	sub	r19,r3,r2
   88a68:	a4c00215 	stw	r19,8(r20)
   88a6c:	983fce26 	beq	r19,zero,889a8 <__sfvwrite_r+0xb4>
   88a70:	80c0030b 	ldhu	r3,12(r16)
   88a74:	903fe61e 	bne	r18,zero,88a10 <__sfvwrite_r+0x11c>
   88a78:	8f000017 	ldw	fp,0(r17)
   88a7c:	8c800117 	ldw	r18,4(r17)
   88a80:	8c400204 	addi	r17,r17,8
   88a84:	003fe106 	br	88a0c <__sfvwrite_r+0x118>
   88a88:	8cc00017 	ldw	r19,0(r17)
   88a8c:	8c800117 	ldw	r18,4(r17)
   88a90:	8c400204 	addi	r17,r17,8
   88a94:	003fb306 	br	88964 <__sfvwrite_r+0x70>
   88a98:	0005883a 	mov	r2,zero
   88a9c:	f800283a 	ret
   88aa0:	81000017 	ldw	r4,0(r16)
   88aa4:	80800417 	ldw	r2,16(r16)
   88aa8:	11005736 	bltu	r2,r4,88c08 <__sfvwrite_r+0x314>
   88aac:	85c00517 	ldw	r23,20(r16)
   88ab0:	95c05536 	bltu	r18,r23,88c08 <__sfvwrite_r+0x314>
   88ab4:	00a00034 	movhi	r2,32768
   88ab8:	10bfffc4 	addi	r2,r2,-1
   88abc:	9009883a 	mov	r4,r18
   88ac0:	1480012e 	bgeu	r2,r18,88ac8 <__sfvwrite_r+0x1d4>
   88ac4:	1009883a 	mov	r4,r2
   88ac8:	b80b883a 	mov	r5,r23
   88acc:	008a3740 	call	8a374 <__divsi3>
   88ad0:	15cf383a 	mul	r7,r2,r23
   88ad4:	81400717 	ldw	r5,28(r16)
   88ad8:	80800917 	ldw	r2,36(r16)
   88adc:	e00d883a 	mov	r6,fp
   88ae0:	a809883a 	mov	r4,r21
   88ae4:	103ee83a 	callr	r2
   88ae8:	00bfdb16 	blt	zero,r2,88a58 <__sfvwrite_r+0x164>
   88aec:	8080030b 	ldhu	r2,12(r16)
   88af0:	10801014 	ori	r2,r2,64
   88af4:	8080030d 	sth	r2,12(r16)
   88af8:	00bfffc4 	movi	r2,-1
   88afc:	003fab06 	br	889ac <__sfvwrite_r+0xb8>
   88b00:	0027883a 	mov	r19,zero
   88b04:	0011883a 	mov	r8,zero
   88b08:	0039883a 	mov	fp,zero
   88b0c:	0025883a 	mov	r18,zero
   88b10:	90001f26 	beq	r18,zero,88b90 <__sfvwrite_r+0x29c>
   88b14:	40005a26 	beq	r8,zero,88c80 <__sfvwrite_r+0x38c>
   88b18:	982d883a 	mov	r22,r19
   88b1c:	94c0012e 	bgeu	r18,r19,88b24 <__sfvwrite_r+0x230>
   88b20:	902d883a 	mov	r22,r18
   88b24:	81000017 	ldw	r4,0(r16)
   88b28:	80800417 	ldw	r2,16(r16)
   88b2c:	b02f883a 	mov	r23,r22
   88b30:	81c00517 	ldw	r7,20(r16)
   88b34:	1100032e 	bgeu	r2,r4,88b44 <__sfvwrite_r+0x250>
   88b38:	80c00217 	ldw	r3,8(r16)
   88b3c:	38c7883a 	add	r3,r7,r3
   88b40:	1d801816 	blt	r3,r22,88ba4 <__sfvwrite_r+0x2b0>
   88b44:	b1c03e16 	blt	r22,r7,88c40 <__sfvwrite_r+0x34c>
   88b48:	80800917 	ldw	r2,36(r16)
   88b4c:	81400717 	ldw	r5,28(r16)
   88b50:	e00d883a 	mov	r6,fp
   88b54:	da000115 	stw	r8,4(sp)
   88b58:	a809883a 	mov	r4,r21
   88b5c:	103ee83a 	callr	r2
   88b60:	102f883a 	mov	r23,r2
   88b64:	da000117 	ldw	r8,4(sp)
   88b68:	00bfe00e 	bge	zero,r2,88aec <__sfvwrite_r+0x1f8>
   88b6c:	9de7c83a 	sub	r19,r19,r23
   88b70:	98001f26 	beq	r19,zero,88bf0 <__sfvwrite_r+0x2fc>
   88b74:	a0800217 	ldw	r2,8(r20)
   88b78:	e5f9883a 	add	fp,fp,r23
   88b7c:	95e5c83a 	sub	r18,r18,r23
   88b80:	15efc83a 	sub	r23,r2,r23
   88b84:	a5c00215 	stw	r23,8(r20)
   88b88:	b83f8726 	beq	r23,zero,889a8 <__sfvwrite_r+0xb4>
   88b8c:	903fe11e 	bne	r18,zero,88b14 <__sfvwrite_r+0x220>
   88b90:	8f000017 	ldw	fp,0(r17)
   88b94:	8c800117 	ldw	r18,4(r17)
   88b98:	0011883a 	mov	r8,zero
   88b9c:	8c400204 	addi	r17,r17,8
   88ba0:	003fdb06 	br	88b10 <__sfvwrite_r+0x21c>
   88ba4:	180d883a 	mov	r6,r3
   88ba8:	e00b883a 	mov	r5,fp
   88bac:	da000115 	stw	r8,4(sp)
   88bb0:	d8c00015 	stw	r3,0(sp)
   88bb4:	0088e640 	call	88e64 <memmove>
   88bb8:	d8c00017 	ldw	r3,0(sp)
   88bbc:	80800017 	ldw	r2,0(r16)
   88bc0:	800b883a 	mov	r5,r16
   88bc4:	a809883a 	mov	r4,r21
   88bc8:	10c5883a 	add	r2,r2,r3
   88bcc:	80800015 	stw	r2,0(r16)
   88bd0:	d8c00015 	stw	r3,0(sp)
   88bd4:	00842780 	call	84278 <_fflush_r>
   88bd8:	d8c00017 	ldw	r3,0(sp)
   88bdc:	da000117 	ldw	r8,4(sp)
   88be0:	103fc21e 	bne	r2,zero,88aec <__sfvwrite_r+0x1f8>
   88be4:	182f883a 	mov	r23,r3
   88be8:	9de7c83a 	sub	r19,r19,r23
   88bec:	983fe11e 	bne	r19,zero,88b74 <__sfvwrite_r+0x280>
   88bf0:	800b883a 	mov	r5,r16
   88bf4:	a809883a 	mov	r4,r21
   88bf8:	00842780 	call	84278 <_fflush_r>
   88bfc:	103fbb1e 	bne	r2,zero,88aec <__sfvwrite_r+0x1f8>
   88c00:	0011883a 	mov	r8,zero
   88c04:	003fdb06 	br	88b74 <__sfvwrite_r+0x280>
   88c08:	94c0012e 	bgeu	r18,r19,88c10 <__sfvwrite_r+0x31c>
   88c0c:	9027883a 	mov	r19,r18
   88c10:	980d883a 	mov	r6,r19
   88c14:	e00b883a 	mov	r5,fp
   88c18:	0088e640 	call	88e64 <memmove>
   88c1c:	80800217 	ldw	r2,8(r16)
   88c20:	80c00017 	ldw	r3,0(r16)
   88c24:	14c5c83a 	sub	r2,r2,r19
   88c28:	1cc7883a 	add	r3,r3,r19
   88c2c:	80800215 	stw	r2,8(r16)
   88c30:	80c00015 	stw	r3,0(r16)
   88c34:	10004326 	beq	r2,zero,88d44 <__sfvwrite_r+0x450>
   88c38:	9805883a 	mov	r2,r19
   88c3c:	003f8606 	br	88a58 <__sfvwrite_r+0x164>
   88c40:	b00d883a 	mov	r6,r22
   88c44:	e00b883a 	mov	r5,fp
   88c48:	da000115 	stw	r8,4(sp)
   88c4c:	0088e640 	call	88e64 <memmove>
   88c50:	80800217 	ldw	r2,8(r16)
   88c54:	80c00017 	ldw	r3,0(r16)
   88c58:	da000117 	ldw	r8,4(sp)
   88c5c:	1585c83a 	sub	r2,r2,r22
   88c60:	1dad883a 	add	r22,r3,r22
   88c64:	80800215 	stw	r2,8(r16)
   88c68:	85800015 	stw	r22,0(r16)
   88c6c:	003fbf06 	br	88b6c <__sfvwrite_r+0x278>
   88c70:	81000017 	ldw	r4,0(r16)
   88c74:	9027883a 	mov	r19,r18
   88c78:	902f883a 	mov	r23,r18
   88c7c:	003f6c06 	br	88a30 <__sfvwrite_r+0x13c>
   88c80:	900d883a 	mov	r6,r18
   88c84:	01400284 	movi	r5,10
   88c88:	e009883a 	mov	r4,fp
   88c8c:	00857040 	call	85704 <memchr>
   88c90:	10003e26 	beq	r2,zero,88d8c <__sfvwrite_r+0x498>
   88c94:	10800044 	addi	r2,r2,1
   88c98:	1727c83a 	sub	r19,r2,fp
   88c9c:	02000044 	movi	r8,1
   88ca0:	003f9d06 	br	88b18 <__sfvwrite_r+0x224>
   88ca4:	80800517 	ldw	r2,20(r16)
   88ca8:	81400417 	ldw	r5,16(r16)
   88cac:	81c00017 	ldw	r7,0(r16)
   88cb0:	10a7883a 	add	r19,r2,r2
   88cb4:	9885883a 	add	r2,r19,r2
   88cb8:	1026d7fa 	srli	r19,r2,31
   88cbc:	396dc83a 	sub	r22,r7,r5
   88cc0:	b1000044 	addi	r4,r22,1
   88cc4:	9885883a 	add	r2,r19,r2
   88cc8:	1027d07a 	srai	r19,r2,1
   88ccc:	2485883a 	add	r2,r4,r18
   88cd0:	980d883a 	mov	r6,r19
   88cd4:	9880022e 	bgeu	r19,r2,88ce0 <__sfvwrite_r+0x3ec>
   88cd8:	1027883a 	mov	r19,r2
   88cdc:	100d883a 	mov	r6,r2
   88ce0:	18c1000c 	andi	r3,r3,1024
   88ce4:	18001c26 	beq	r3,zero,88d58 <__sfvwrite_r+0x464>
   88ce8:	300b883a 	mov	r5,r6
   88cec:	a809883a 	mov	r4,r21
   88cf0:	0084ef80 	call	84ef8 <_malloc_r>
   88cf4:	102f883a 	mov	r23,r2
   88cf8:	10002926 	beq	r2,zero,88da0 <__sfvwrite_r+0x4ac>
   88cfc:	81400417 	ldw	r5,16(r16)
   88d00:	b00d883a 	mov	r6,r22
   88d04:	1009883a 	mov	r4,r2
   88d08:	00857e80 	call	857e8 <memcpy>
   88d0c:	8080030b 	ldhu	r2,12(r16)
   88d10:	00fedfc4 	movi	r3,-1153
   88d14:	10c4703a 	and	r2,r2,r3
   88d18:	10802014 	ori	r2,r2,128
   88d1c:	8080030d 	sth	r2,12(r16)
   88d20:	bd89883a 	add	r4,r23,r22
   88d24:	9d8fc83a 	sub	r7,r19,r22
   88d28:	85c00415 	stw	r23,16(r16)
   88d2c:	84c00515 	stw	r19,20(r16)
   88d30:	81000015 	stw	r4,0(r16)
   88d34:	9027883a 	mov	r19,r18
   88d38:	81c00215 	stw	r7,8(r16)
   88d3c:	902f883a 	mov	r23,r18
   88d40:	003f3b06 	br	88a30 <__sfvwrite_r+0x13c>
   88d44:	800b883a 	mov	r5,r16
   88d48:	a809883a 	mov	r4,r21
   88d4c:	00842780 	call	84278 <_fflush_r>
   88d50:	103fb926 	beq	r2,zero,88c38 <__sfvwrite_r+0x344>
   88d54:	003f6506 	br	88aec <__sfvwrite_r+0x1f8>
   88d58:	a809883a 	mov	r4,r21
   88d5c:	00890200 	call	89020 <_realloc_r>
   88d60:	102f883a 	mov	r23,r2
   88d64:	103fee1e 	bne	r2,zero,88d20 <__sfvwrite_r+0x42c>
   88d68:	81400417 	ldw	r5,16(r16)
   88d6c:	a809883a 	mov	r4,r21
   88d70:	00847c80 	call	847c8 <_free_r>
   88d74:	8080030b 	ldhu	r2,12(r16)
   88d78:	00ffdfc4 	movi	r3,-129
   88d7c:	1884703a 	and	r2,r3,r2
   88d80:	00c00304 	movi	r3,12
   88d84:	a8c00015 	stw	r3,0(r21)
   88d88:	003f5906 	br	88af0 <__sfvwrite_r+0x1fc>
   88d8c:	94c00044 	addi	r19,r18,1
   88d90:	02000044 	movi	r8,1
   88d94:	003f6006 	br	88b18 <__sfvwrite_r+0x224>
   88d98:	00bfffc4 	movi	r2,-1
   88d9c:	003f0306 	br	889ac <__sfvwrite_r+0xb8>
   88da0:	00800304 	movi	r2,12
   88da4:	a8800015 	stw	r2,0(r21)
   88da8:	8080030b 	ldhu	r2,12(r16)
   88dac:	003f5006 	br	88af0 <__sfvwrite_r+0x1fc>

00088db0 <_isatty_r>:
   88db0:	defffd04 	addi	sp,sp,-12
   88db4:	dc000015 	stw	r16,0(sp)
   88db8:	04000274 	movhi	r16,9
   88dbc:	dc400115 	stw	r17,4(sp)
   88dc0:	840c8604 	addi	r16,r16,12824
   88dc4:	2023883a 	mov	r17,r4
   88dc8:	2809883a 	mov	r4,r5
   88dcc:	dfc00215 	stw	ra,8(sp)
   88dd0:	80000015 	stw	zero,0(r16)
   88dd4:	008ce2c0 	call	8ce2c <isatty>
   88dd8:	00ffffc4 	movi	r3,-1
   88ddc:	10c00526 	beq	r2,r3,88df4 <_isatty_r+0x44>
   88de0:	dfc00217 	ldw	ra,8(sp)
   88de4:	dc400117 	ldw	r17,4(sp)
   88de8:	dc000017 	ldw	r16,0(sp)
   88dec:	dec00304 	addi	sp,sp,12
   88df0:	f800283a 	ret
   88df4:	80c00017 	ldw	r3,0(r16)
   88df8:	183ff926 	beq	r3,zero,88de0 <_isatty_r+0x30>
   88dfc:	88c00015 	stw	r3,0(r17)
   88e00:	003ff706 	br	88de0 <_isatty_r+0x30>

00088e04 <_lseek_r>:
   88e04:	defffd04 	addi	sp,sp,-12
   88e08:	2805883a 	mov	r2,r5
   88e0c:	dc000015 	stw	r16,0(sp)
   88e10:	04000274 	movhi	r16,9
   88e14:	dc400115 	stw	r17,4(sp)
   88e18:	300b883a 	mov	r5,r6
   88e1c:	840c8604 	addi	r16,r16,12824
   88e20:	2023883a 	mov	r17,r4
   88e24:	380d883a 	mov	r6,r7
   88e28:	1009883a 	mov	r4,r2
   88e2c:	dfc00215 	stw	ra,8(sp)
   88e30:	80000015 	stw	zero,0(r16)
   88e34:	008d00c0 	call	8d00c <lseek>
   88e38:	00ffffc4 	movi	r3,-1
   88e3c:	10c00526 	beq	r2,r3,88e54 <_lseek_r+0x50>
   88e40:	dfc00217 	ldw	ra,8(sp)
   88e44:	dc400117 	ldw	r17,4(sp)
   88e48:	dc000017 	ldw	r16,0(sp)
   88e4c:	dec00304 	addi	sp,sp,12
   88e50:	f800283a 	ret
   88e54:	80c00017 	ldw	r3,0(r16)
   88e58:	183ff926 	beq	r3,zero,88e40 <_lseek_r+0x3c>
   88e5c:	88c00015 	stw	r3,0(r17)
   88e60:	003ff706 	br	88e40 <_lseek_r+0x3c>

00088e64 <memmove>:
   88e64:	2005883a 	mov	r2,r4
   88e68:	29000b2e 	bgeu	r5,r4,88e98 <memmove+0x34>
   88e6c:	298f883a 	add	r7,r5,r6
   88e70:	21c0092e 	bgeu	r4,r7,88e98 <memmove+0x34>
   88e74:	2187883a 	add	r3,r4,r6
   88e78:	198bc83a 	sub	r5,r3,r6
   88e7c:	30004826 	beq	r6,zero,88fa0 <memmove+0x13c>
   88e80:	39ffffc4 	addi	r7,r7,-1
   88e84:	39000003 	ldbu	r4,0(r7)
   88e88:	18ffffc4 	addi	r3,r3,-1
   88e8c:	19000005 	stb	r4,0(r3)
   88e90:	28fffb1e 	bne	r5,r3,88e80 <memmove+0x1c>
   88e94:	f800283a 	ret
   88e98:	00c003c4 	movi	r3,15
   88e9c:	1980412e 	bgeu	r3,r6,88fa4 <memmove+0x140>
   88ea0:	2886b03a 	or	r3,r5,r2
   88ea4:	18c000cc 	andi	r3,r3,3
   88ea8:	1800401e 	bne	r3,zero,88fac <memmove+0x148>
   88eac:	33fffc04 	addi	r15,r6,-16
   88eb0:	781ed13a 	srli	r15,r15,4
   88eb4:	28c00104 	addi	r3,r5,4
   88eb8:	13400104 	addi	r13,r2,4
   88ebc:	781c913a 	slli	r14,r15,4
   88ec0:	2b000204 	addi	r12,r5,8
   88ec4:	12c00204 	addi	r11,r2,8
   88ec8:	73800504 	addi	r14,r14,20
   88ecc:	2a800304 	addi	r10,r5,12
   88ed0:	12400304 	addi	r9,r2,12
   88ed4:	2b9d883a 	add	r14,r5,r14
   88ed8:	2811883a 	mov	r8,r5
   88edc:	100f883a 	mov	r7,r2
   88ee0:	41000017 	ldw	r4,0(r8)
   88ee4:	39c00404 	addi	r7,r7,16
   88ee8:	18c00404 	addi	r3,r3,16
   88eec:	393ffc15 	stw	r4,-16(r7)
   88ef0:	193ffc17 	ldw	r4,-16(r3)
   88ef4:	6b400404 	addi	r13,r13,16
   88ef8:	5ac00404 	addi	r11,r11,16
   88efc:	693ffc15 	stw	r4,-16(r13)
   88f00:	61000017 	ldw	r4,0(r12)
   88f04:	4a400404 	addi	r9,r9,16
   88f08:	42000404 	addi	r8,r8,16
   88f0c:	593ffc15 	stw	r4,-16(r11)
   88f10:	51000017 	ldw	r4,0(r10)
   88f14:	63000404 	addi	r12,r12,16
   88f18:	52800404 	addi	r10,r10,16
   88f1c:	493ffc15 	stw	r4,-16(r9)
   88f20:	1bbfef1e 	bne	r3,r14,88ee0 <memmove+0x7c>
   88f24:	79000044 	addi	r4,r15,1
   88f28:	2008913a 	slli	r4,r4,4
   88f2c:	328003cc 	andi	r10,r6,15
   88f30:	02c000c4 	movi	r11,3
   88f34:	1107883a 	add	r3,r2,r4
   88f38:	290b883a 	add	r5,r5,r4
   88f3c:	5a801e2e 	bgeu	r11,r10,88fb8 <memmove+0x154>
   88f40:	1813883a 	mov	r9,r3
   88f44:	2811883a 	mov	r8,r5
   88f48:	500f883a 	mov	r7,r10
   88f4c:	41000017 	ldw	r4,0(r8)
   88f50:	4a400104 	addi	r9,r9,4
   88f54:	39ffff04 	addi	r7,r7,-4
   88f58:	493fff15 	stw	r4,-4(r9)
   88f5c:	42000104 	addi	r8,r8,4
   88f60:	59fffa36 	bltu	r11,r7,88f4c <memmove+0xe8>
   88f64:	513fff04 	addi	r4,r10,-4
   88f68:	2008d0ba 	srli	r4,r4,2
   88f6c:	318000cc 	andi	r6,r6,3
   88f70:	21000044 	addi	r4,r4,1
   88f74:	2109883a 	add	r4,r4,r4
   88f78:	2109883a 	add	r4,r4,r4
   88f7c:	1907883a 	add	r3,r3,r4
   88f80:	290b883a 	add	r5,r5,r4
   88f84:	30000b26 	beq	r6,zero,88fb4 <memmove+0x150>
   88f88:	198d883a 	add	r6,r3,r6
   88f8c:	29c00003 	ldbu	r7,0(r5)
   88f90:	18c00044 	addi	r3,r3,1
   88f94:	29400044 	addi	r5,r5,1
   88f98:	19ffffc5 	stb	r7,-1(r3)
   88f9c:	19bffb1e 	bne	r3,r6,88f8c <memmove+0x128>
   88fa0:	f800283a 	ret
   88fa4:	1007883a 	mov	r3,r2
   88fa8:	003ff606 	br	88f84 <memmove+0x120>
   88fac:	1007883a 	mov	r3,r2
   88fb0:	003ff506 	br	88f88 <memmove+0x124>
   88fb4:	f800283a 	ret
   88fb8:	500d883a 	mov	r6,r10
   88fbc:	003ff106 	br	88f84 <memmove+0x120>

00088fc0 <_read_r>:
   88fc0:	defffd04 	addi	sp,sp,-12
   88fc4:	2805883a 	mov	r2,r5
   88fc8:	dc000015 	stw	r16,0(sp)
   88fcc:	04000274 	movhi	r16,9
   88fd0:	dc400115 	stw	r17,4(sp)
   88fd4:	300b883a 	mov	r5,r6
   88fd8:	840c8604 	addi	r16,r16,12824
   88fdc:	2023883a 	mov	r17,r4
   88fe0:	380d883a 	mov	r6,r7
   88fe4:	1009883a 	mov	r4,r2
   88fe8:	dfc00215 	stw	ra,8(sp)
   88fec:	80000015 	stw	zero,0(r16)
   88ff0:	008d4640 	call	8d464 <read>
   88ff4:	00ffffc4 	movi	r3,-1
   88ff8:	10c00526 	beq	r2,r3,89010 <_read_r+0x50>
   88ffc:	dfc00217 	ldw	ra,8(sp)
   89000:	dc400117 	ldw	r17,4(sp)
   89004:	dc000017 	ldw	r16,0(sp)
   89008:	dec00304 	addi	sp,sp,12
   8900c:	f800283a 	ret
   89010:	80c00017 	ldw	r3,0(r16)
   89014:	183ff926 	beq	r3,zero,88ffc <_read_r+0x3c>
   89018:	88c00015 	stw	r3,0(r17)
   8901c:	003ff706 	br	88ffc <_read_r+0x3c>

00089020 <_realloc_r>:
   89020:	defff604 	addi	sp,sp,-40
   89024:	dc400115 	stw	r17,4(sp)
   89028:	dfc00915 	stw	ra,36(sp)
   8902c:	df000815 	stw	fp,32(sp)
   89030:	ddc00715 	stw	r23,28(sp)
   89034:	dd800615 	stw	r22,24(sp)
   89038:	dd400515 	stw	r21,20(sp)
   8903c:	dd000415 	stw	r20,16(sp)
   89040:	dcc00315 	stw	r19,12(sp)
   89044:	dc800215 	stw	r18,8(sp)
   89048:	dc000015 	stw	r16,0(sp)
   8904c:	3023883a 	mov	r17,r6
   89050:	2800b626 	beq	r5,zero,8932c <_realloc_r+0x30c>
   89054:	2829883a 	mov	r20,r5
   89058:	2025883a 	mov	r18,r4
   8905c:	008d15c0 	call	8d15c <__malloc_lock>
   89060:	a0ffff17 	ldw	r3,-4(r20)
   89064:	043fff04 	movi	r16,-4
   89068:	888002c4 	addi	r2,r17,11
   8906c:	01000584 	movi	r4,22
   89070:	a57ffe04 	addi	r21,r20,-8
   89074:	1c20703a 	and	r16,r3,r16
   89078:	2080332e 	bgeu	r4,r2,89148 <_realloc_r+0x128>
   8907c:	05bffe04 	movi	r22,-8
   89080:	15ac703a 	and	r22,r2,r22
   89084:	b005883a 	mov	r2,r22
   89088:	b0005716 	blt	r22,zero,891e8 <_realloc_r+0x1c8>
   8908c:	b4405636 	bltu	r22,r17,891e8 <_realloc_r+0x1c8>
   89090:	8080300e 	bge	r16,r2,89154 <_realloc_r+0x134>
   89094:	07000274 	movhi	fp,9
   89098:	e7003104 	addi	fp,fp,196
   8909c:	e2000217 	ldw	r8,8(fp)
   890a0:	ac09883a 	add	r4,r21,r16
   890a4:	22006126 	beq	r4,r8,8922c <_realloc_r+0x20c>
   890a8:	22400117 	ldw	r9,4(r4)
   890ac:	01ffff84 	movi	r7,-2
   890b0:	49ce703a 	and	r7,r9,r7
   890b4:	21cf883a 	add	r7,r4,r7
   890b8:	39800117 	ldw	r6,4(r7)
   890bc:	3180004c 	andi	r6,r6,1
   890c0:	30003e26 	beq	r6,zero,891bc <_realloc_r+0x19c>
   890c4:	18c0004c 	andi	r3,r3,1
   890c8:	18008126 	beq	r3,zero,892d0 <_realloc_r+0x2b0>
   890cc:	880b883a 	mov	r5,r17
   890d0:	9009883a 	mov	r4,r18
   890d4:	0084ef80 	call	84ef8 <_malloc_r>
   890d8:	1023883a 	mov	r17,r2
   890dc:	10011e26 	beq	r2,zero,89558 <_realloc_r+0x538>
   890e0:	a0ffff17 	ldw	r3,-4(r20)
   890e4:	113ffe04 	addi	r4,r2,-8
   890e8:	00bfff84 	movi	r2,-2
   890ec:	1884703a 	and	r2,r3,r2
   890f0:	a885883a 	add	r2,r21,r2
   890f4:	2080ee26 	beq	r4,r2,894b0 <_realloc_r+0x490>
   890f8:	81bfff04 	addi	r6,r16,-4
   890fc:	00800904 	movi	r2,36
   89100:	1180b836 	bltu	r2,r6,893e4 <_realloc_r+0x3c4>
   89104:	00c004c4 	movi	r3,19
   89108:	19809536 	bltu	r3,r6,89360 <_realloc_r+0x340>
   8910c:	8805883a 	mov	r2,r17
   89110:	a007883a 	mov	r3,r20
   89114:	19000017 	ldw	r4,0(r3)
   89118:	11000015 	stw	r4,0(r2)
   8911c:	19000117 	ldw	r4,4(r3)
   89120:	11000115 	stw	r4,4(r2)
   89124:	18c00217 	ldw	r3,8(r3)
   89128:	10c00215 	stw	r3,8(r2)
   8912c:	a00b883a 	mov	r5,r20
   89130:	9009883a 	mov	r4,r18
   89134:	00847c80 	call	847c8 <_free_r>
   89138:	9009883a 	mov	r4,r18
   8913c:	008d1800 	call	8d180 <__malloc_unlock>
   89140:	8805883a 	mov	r2,r17
   89144:	00001106 	br	8918c <_realloc_r+0x16c>
   89148:	00800404 	movi	r2,16
   8914c:	102d883a 	mov	r22,r2
   89150:	003fce06 	br	8908c <_realloc_r+0x6c>
   89154:	a023883a 	mov	r17,r20
   89158:	858fc83a 	sub	r7,r16,r22
   8915c:	008003c4 	movi	r2,15
   89160:	18c0004c 	andi	r3,r3,1
   89164:	11c02436 	bltu	r2,r7,891f8 <_realloc_r+0x1d8>
   89168:	1c06b03a 	or	r3,r3,r16
   8916c:	a8c00115 	stw	r3,4(r21)
   89170:	ac21883a 	add	r16,r21,r16
   89174:	80800117 	ldw	r2,4(r16)
   89178:	10800054 	ori	r2,r2,1
   8917c:	80800115 	stw	r2,4(r16)
   89180:	9009883a 	mov	r4,r18
   89184:	008d1800 	call	8d180 <__malloc_unlock>
   89188:	8805883a 	mov	r2,r17
   8918c:	dfc00917 	ldw	ra,36(sp)
   89190:	df000817 	ldw	fp,32(sp)
   89194:	ddc00717 	ldw	r23,28(sp)
   89198:	dd800617 	ldw	r22,24(sp)
   8919c:	dd400517 	ldw	r21,20(sp)
   891a0:	dd000417 	ldw	r20,16(sp)
   891a4:	dcc00317 	ldw	r19,12(sp)
   891a8:	dc800217 	ldw	r18,8(sp)
   891ac:	dc400117 	ldw	r17,4(sp)
   891b0:	dc000017 	ldw	r16,0(sp)
   891b4:	dec00a04 	addi	sp,sp,40
   891b8:	f800283a 	ret
   891bc:	017fff04 	movi	r5,-4
   891c0:	494a703a 	and	r5,r9,r5
   891c4:	814d883a 	add	r6,r16,r5
   891c8:	30801e16 	blt	r6,r2,89244 <_realloc_r+0x224>
   891cc:	20800317 	ldw	r2,12(r4)
   891d0:	21000217 	ldw	r4,8(r4)
   891d4:	a023883a 	mov	r17,r20
   891d8:	3021883a 	mov	r16,r6
   891dc:	20800315 	stw	r2,12(r4)
   891e0:	11000215 	stw	r4,8(r2)
   891e4:	003fdc06 	br	89158 <_realloc_r+0x138>
   891e8:	00800304 	movi	r2,12
   891ec:	90800015 	stw	r2,0(r18)
   891f0:	0005883a 	mov	r2,zero
   891f4:	003fe506 	br	8918c <_realloc_r+0x16c>
   891f8:	1d86b03a 	or	r3,r3,r22
   891fc:	a8c00115 	stw	r3,4(r21)
   89200:	ad8b883a 	add	r5,r21,r22
   89204:	38c00054 	ori	r3,r7,1
   89208:	28c00115 	stw	r3,4(r5)
   8920c:	29cf883a 	add	r7,r5,r7
   89210:	38c00117 	ldw	r3,4(r7)
   89214:	29400204 	addi	r5,r5,8
   89218:	9009883a 	mov	r4,r18
   8921c:	18800054 	ori	r2,r3,1
   89220:	38800115 	stw	r2,4(r7)
   89224:	00847c80 	call	847c8 <_free_r>
   89228:	003fd506 	br	89180 <_realloc_r+0x160>
   8922c:	21c00117 	ldw	r7,4(r4)
   89230:	017fff04 	movi	r5,-4
   89234:	b1800404 	addi	r6,r22,16
   89238:	394a703a 	and	r5,r7,r5
   8923c:	814f883a 	add	r7,r16,r5
   89240:	39805b0e 	bge	r7,r6,893b0 <_realloc_r+0x390>
   89244:	18c0004c 	andi	r3,r3,1
   89248:	183fa01e 	bne	r3,zero,890cc <_realloc_r+0xac>
   8924c:	a4fffe17 	ldw	r19,-8(r20)
   89250:	00ffff04 	movi	r3,-4
   89254:	ace7c83a 	sub	r19,r21,r19
   89258:	99800117 	ldw	r6,4(r19)
   8925c:	30c6703a 	and	r3,r6,r3
   89260:	20002026 	beq	r4,zero,892e4 <_realloc_r+0x2c4>
   89264:	80ef883a 	add	r23,r16,r3
   89268:	b96f883a 	add	r23,r23,r5
   8926c:	22006126 	beq	r4,r8,893f4 <_realloc_r+0x3d4>
   89270:	b8801c16 	blt	r23,r2,892e4 <_realloc_r+0x2c4>
   89274:	20800317 	ldw	r2,12(r4)
   89278:	20c00217 	ldw	r3,8(r4)
   8927c:	81bfff04 	addi	r6,r16,-4
   89280:	01000904 	movi	r4,36
   89284:	18800315 	stw	r2,12(r3)
   89288:	10c00215 	stw	r3,8(r2)
   8928c:	98c00217 	ldw	r3,8(r19)
   89290:	98800317 	ldw	r2,12(r19)
   89294:	9c400204 	addi	r17,r19,8
   89298:	18800315 	stw	r2,12(r3)
   8929c:	10c00215 	stw	r3,8(r2)
   892a0:	21801b36 	bltu	r4,r6,89310 <_realloc_r+0x2f0>
   892a4:	008004c4 	movi	r2,19
   892a8:	1180362e 	bgeu	r2,r6,89384 <_realloc_r+0x364>
   892ac:	a0800017 	ldw	r2,0(r20)
   892b0:	98800215 	stw	r2,8(r19)
   892b4:	a0800117 	ldw	r2,4(r20)
   892b8:	98800315 	stw	r2,12(r19)
   892bc:	008006c4 	movi	r2,27
   892c0:	11808136 	bltu	r2,r6,894c8 <_realloc_r+0x4a8>
   892c4:	98800404 	addi	r2,r19,16
   892c8:	a5000204 	addi	r20,r20,8
   892cc:	00002e06 	br	89388 <_realloc_r+0x368>
   892d0:	a4fffe17 	ldw	r19,-8(r20)
   892d4:	00ffff04 	movi	r3,-4
   892d8:	ace7c83a 	sub	r19,r21,r19
   892dc:	99000117 	ldw	r4,4(r19)
   892e0:	20c6703a 	and	r3,r4,r3
   892e4:	983f7926 	beq	r19,zero,890cc <_realloc_r+0xac>
   892e8:	80ef883a 	add	r23,r16,r3
   892ec:	b8bf7716 	blt	r23,r2,890cc <_realloc_r+0xac>
   892f0:	98800317 	ldw	r2,12(r19)
   892f4:	98c00217 	ldw	r3,8(r19)
   892f8:	81bfff04 	addi	r6,r16,-4
   892fc:	01000904 	movi	r4,36
   89300:	18800315 	stw	r2,12(r3)
   89304:	10c00215 	stw	r3,8(r2)
   89308:	9c400204 	addi	r17,r19,8
   8930c:	21bfe52e 	bgeu	r4,r6,892a4 <_realloc_r+0x284>
   89310:	a00b883a 	mov	r5,r20
   89314:	8809883a 	mov	r4,r17
   89318:	0088e640 	call	88e64 <memmove>
   8931c:	98c00117 	ldw	r3,4(r19)
   89320:	b821883a 	mov	r16,r23
   89324:	982b883a 	mov	r21,r19
   89328:	003f8b06 	br	89158 <_realloc_r+0x138>
   8932c:	300b883a 	mov	r5,r6
   89330:	dfc00917 	ldw	ra,36(sp)
   89334:	df000817 	ldw	fp,32(sp)
   89338:	ddc00717 	ldw	r23,28(sp)
   8933c:	dd800617 	ldw	r22,24(sp)
   89340:	dd400517 	ldw	r21,20(sp)
   89344:	dd000417 	ldw	r20,16(sp)
   89348:	dcc00317 	ldw	r19,12(sp)
   8934c:	dc800217 	ldw	r18,8(sp)
   89350:	dc400117 	ldw	r17,4(sp)
   89354:	dc000017 	ldw	r16,0(sp)
   89358:	dec00a04 	addi	sp,sp,40
   8935c:	0084ef81 	jmpi	84ef8 <_malloc_r>
   89360:	a0c00017 	ldw	r3,0(r20)
   89364:	88c00015 	stw	r3,0(r17)
   89368:	a0c00117 	ldw	r3,4(r20)
   8936c:	88c00115 	stw	r3,4(r17)
   89370:	00c006c4 	movi	r3,27
   89374:	19804636 	bltu	r3,r6,89490 <_realloc_r+0x470>
   89378:	88800204 	addi	r2,r17,8
   8937c:	a0c00204 	addi	r3,r20,8
   89380:	003f6406 	br	89114 <_realloc_r+0xf4>
   89384:	8805883a 	mov	r2,r17
   89388:	a0c00017 	ldw	r3,0(r20)
   8938c:	b821883a 	mov	r16,r23
   89390:	982b883a 	mov	r21,r19
   89394:	10c00015 	stw	r3,0(r2)
   89398:	a0c00117 	ldw	r3,4(r20)
   8939c:	10c00115 	stw	r3,4(r2)
   893a0:	a0c00217 	ldw	r3,8(r20)
   893a4:	10c00215 	stw	r3,8(r2)
   893a8:	98c00117 	ldw	r3,4(r19)
   893ac:	003f6a06 	br	89158 <_realloc_r+0x138>
   893b0:	adab883a 	add	r21,r21,r22
   893b4:	3d85c83a 	sub	r2,r7,r22
   893b8:	e5400215 	stw	r21,8(fp)
   893bc:	10800054 	ori	r2,r2,1
   893c0:	a8800115 	stw	r2,4(r21)
   893c4:	a0bfff17 	ldw	r2,-4(r20)
   893c8:	9009883a 	mov	r4,r18
   893cc:	1080004c 	andi	r2,r2,1
   893d0:	1584b03a 	or	r2,r2,r22
   893d4:	a0bfff15 	stw	r2,-4(r20)
   893d8:	008d1800 	call	8d180 <__malloc_unlock>
   893dc:	a005883a 	mov	r2,r20
   893e0:	003f6a06 	br	8918c <_realloc_r+0x16c>
   893e4:	a00b883a 	mov	r5,r20
   893e8:	8809883a 	mov	r4,r17
   893ec:	0088e640 	call	88e64 <memmove>
   893f0:	003f4e06 	br	8912c <_realloc_r+0x10c>
   893f4:	b1000404 	addi	r4,r22,16
   893f8:	b93fba16 	blt	r23,r4,892e4 <_realloc_r+0x2c4>
   893fc:	98800317 	ldw	r2,12(r19)
   89400:	98c00217 	ldw	r3,8(r19)
   89404:	81bfff04 	addi	r6,r16,-4
   89408:	01000904 	movi	r4,36
   8940c:	18800315 	stw	r2,12(r3)
   89410:	10c00215 	stw	r3,8(r2)
   89414:	9c400204 	addi	r17,r19,8
   89418:	21804336 	bltu	r4,r6,89528 <_realloc_r+0x508>
   8941c:	008004c4 	movi	r2,19
   89420:	11803f2e 	bgeu	r2,r6,89520 <_realloc_r+0x500>
   89424:	a0800017 	ldw	r2,0(r20)
   89428:	98800215 	stw	r2,8(r19)
   8942c:	a0800117 	ldw	r2,4(r20)
   89430:	98800315 	stw	r2,12(r19)
   89434:	008006c4 	movi	r2,27
   89438:	11803f36 	bltu	r2,r6,89538 <_realloc_r+0x518>
   8943c:	98800404 	addi	r2,r19,16
   89440:	a5000204 	addi	r20,r20,8
   89444:	a0c00017 	ldw	r3,0(r20)
   89448:	10c00015 	stw	r3,0(r2)
   8944c:	a0c00117 	ldw	r3,4(r20)
   89450:	10c00115 	stw	r3,4(r2)
   89454:	a0c00217 	ldw	r3,8(r20)
   89458:	10c00215 	stw	r3,8(r2)
   8945c:	9d87883a 	add	r3,r19,r22
   89460:	bd85c83a 	sub	r2,r23,r22
   89464:	e0c00215 	stw	r3,8(fp)
   89468:	10800054 	ori	r2,r2,1
   8946c:	18800115 	stw	r2,4(r3)
   89470:	98800117 	ldw	r2,4(r19)
   89474:	9009883a 	mov	r4,r18
   89478:	1080004c 	andi	r2,r2,1
   8947c:	1584b03a 	or	r2,r2,r22
   89480:	98800115 	stw	r2,4(r19)
   89484:	008d1800 	call	8d180 <__malloc_unlock>
   89488:	8805883a 	mov	r2,r17
   8948c:	003f3f06 	br	8918c <_realloc_r+0x16c>
   89490:	a0c00217 	ldw	r3,8(r20)
   89494:	88c00215 	stw	r3,8(r17)
   89498:	a0c00317 	ldw	r3,12(r20)
   8949c:	88c00315 	stw	r3,12(r17)
   894a0:	30801126 	beq	r6,r2,894e8 <_realloc_r+0x4c8>
   894a4:	88800404 	addi	r2,r17,16
   894a8:	a0c00404 	addi	r3,r20,16
   894ac:	003f1906 	br	89114 <_realloc_r+0xf4>
   894b0:	893fff17 	ldw	r4,-4(r17)
   894b4:	00bfff04 	movi	r2,-4
   894b8:	a023883a 	mov	r17,r20
   894bc:	2084703a 	and	r2,r4,r2
   894c0:	80a1883a 	add	r16,r16,r2
   894c4:	003f2406 	br	89158 <_realloc_r+0x138>
   894c8:	a0800217 	ldw	r2,8(r20)
   894cc:	98800415 	stw	r2,16(r19)
   894d0:	a0800317 	ldw	r2,12(r20)
   894d4:	98800515 	stw	r2,20(r19)
   894d8:	31000a26 	beq	r6,r4,89504 <_realloc_r+0x4e4>
   894dc:	98800604 	addi	r2,r19,24
   894e0:	a5000404 	addi	r20,r20,16
   894e4:	003fa806 	br	89388 <_realloc_r+0x368>
   894e8:	a1000417 	ldw	r4,16(r20)
   894ec:	88800604 	addi	r2,r17,24
   894f0:	a0c00604 	addi	r3,r20,24
   894f4:	89000415 	stw	r4,16(r17)
   894f8:	a1000517 	ldw	r4,20(r20)
   894fc:	89000515 	stw	r4,20(r17)
   89500:	003f0406 	br	89114 <_realloc_r+0xf4>
   89504:	a0c00417 	ldw	r3,16(r20)
   89508:	a5000604 	addi	r20,r20,24
   8950c:	98800804 	addi	r2,r19,32
   89510:	98c00615 	stw	r3,24(r19)
   89514:	a0ffff17 	ldw	r3,-4(r20)
   89518:	98c00715 	stw	r3,28(r19)
   8951c:	003f9a06 	br	89388 <_realloc_r+0x368>
   89520:	8805883a 	mov	r2,r17
   89524:	003fc706 	br	89444 <_realloc_r+0x424>
   89528:	a00b883a 	mov	r5,r20
   8952c:	8809883a 	mov	r4,r17
   89530:	0088e640 	call	88e64 <memmove>
   89534:	003fc906 	br	8945c <_realloc_r+0x43c>
   89538:	a0800217 	ldw	r2,8(r20)
   8953c:	98800415 	stw	r2,16(r19)
   89540:	a0800317 	ldw	r2,12(r20)
   89544:	98800515 	stw	r2,20(r19)
   89548:	31000726 	beq	r6,r4,89568 <_realloc_r+0x548>
   8954c:	98800604 	addi	r2,r19,24
   89550:	a5000404 	addi	r20,r20,16
   89554:	003fbb06 	br	89444 <_realloc_r+0x424>
   89558:	9009883a 	mov	r4,r18
   8955c:	008d1800 	call	8d180 <__malloc_unlock>
   89560:	0005883a 	mov	r2,zero
   89564:	003f0906 	br	8918c <_realloc_r+0x16c>
   89568:	a0c00417 	ldw	r3,16(r20)
   8956c:	a5000604 	addi	r20,r20,24
   89570:	98800804 	addi	r2,r19,32
   89574:	98c00615 	stw	r3,24(r19)
   89578:	a0ffff17 	ldw	r3,-4(r20)
   8957c:	98c00715 	stw	r3,28(r19)
   89580:	003fb006 	br	89444 <_realloc_r+0x424>

00089584 <__swbuf_r>:
   89584:	defffb04 	addi	sp,sp,-20
   89588:	dcc00315 	stw	r19,12(sp)
   8958c:	dc800215 	stw	r18,8(sp)
   89590:	dc000015 	stw	r16,0(sp)
   89594:	dfc00415 	stw	ra,16(sp)
   89598:	dc400115 	stw	r17,4(sp)
   8959c:	2025883a 	mov	r18,r4
   895a0:	2827883a 	mov	r19,r5
   895a4:	3021883a 	mov	r16,r6
   895a8:	20000226 	beq	r4,zero,895b4 <__swbuf_r+0x30>
   895ac:	20800e17 	ldw	r2,56(r4)
   895b0:	10004226 	beq	r2,zero,896bc <__swbuf_r+0x138>
   895b4:	80800617 	ldw	r2,24(r16)
   895b8:	8100030b 	ldhu	r4,12(r16)
   895bc:	80800215 	stw	r2,8(r16)
   895c0:	2080020c 	andi	r2,r4,8
   895c4:	10003626 	beq	r2,zero,896a0 <__swbuf_r+0x11c>
   895c8:	80c00417 	ldw	r3,16(r16)
   895cc:	18003426 	beq	r3,zero,896a0 <__swbuf_r+0x11c>
   895d0:	2088000c 	andi	r2,r4,8192
   895d4:	9c403fcc 	andi	r17,r19,255
   895d8:	10001a26 	beq	r2,zero,89644 <__swbuf_r+0xc0>
   895dc:	80800017 	ldw	r2,0(r16)
   895e0:	81000517 	ldw	r4,20(r16)
   895e4:	10c7c83a 	sub	r3,r2,r3
   895e8:	1900200e 	bge	r3,r4,8966c <__swbuf_r+0xe8>
   895ec:	18c00044 	addi	r3,r3,1
   895f0:	81000217 	ldw	r4,8(r16)
   895f4:	11400044 	addi	r5,r2,1
   895f8:	81400015 	stw	r5,0(r16)
   895fc:	213fffc4 	addi	r4,r4,-1
   89600:	81000215 	stw	r4,8(r16)
   89604:	14c00005 	stb	r19,0(r2)
   89608:	80800517 	ldw	r2,20(r16)
   8960c:	10c01e26 	beq	r2,r3,89688 <__swbuf_r+0x104>
   89610:	8080030b 	ldhu	r2,12(r16)
   89614:	1080004c 	andi	r2,r2,1
   89618:	10000226 	beq	r2,zero,89624 <__swbuf_r+0xa0>
   8961c:	00800284 	movi	r2,10
   89620:	88801926 	beq	r17,r2,89688 <__swbuf_r+0x104>
   89624:	8805883a 	mov	r2,r17
   89628:	dfc00417 	ldw	ra,16(sp)
   8962c:	dcc00317 	ldw	r19,12(sp)
   89630:	dc800217 	ldw	r18,8(sp)
   89634:	dc400117 	ldw	r17,4(sp)
   89638:	dc000017 	ldw	r16,0(sp)
   8963c:	dec00504 	addi	sp,sp,20
   89640:	f800283a 	ret
   89644:	81401917 	ldw	r5,100(r16)
   89648:	00b7ffc4 	movi	r2,-8193
   8964c:	21080014 	ori	r4,r4,8192
   89650:	2884703a 	and	r2,r5,r2
   89654:	80801915 	stw	r2,100(r16)
   89658:	80800017 	ldw	r2,0(r16)
   8965c:	8100030d 	sth	r4,12(r16)
   89660:	81000517 	ldw	r4,20(r16)
   89664:	10c7c83a 	sub	r3,r2,r3
   89668:	193fe016 	blt	r3,r4,895ec <__swbuf_r+0x68>
   8966c:	800b883a 	mov	r5,r16
   89670:	9009883a 	mov	r4,r18
   89674:	00842780 	call	84278 <_fflush_r>
   89678:	1000071e 	bne	r2,zero,89698 <__swbuf_r+0x114>
   8967c:	80800017 	ldw	r2,0(r16)
   89680:	00c00044 	movi	r3,1
   89684:	003fda06 	br	895f0 <__swbuf_r+0x6c>
   89688:	800b883a 	mov	r5,r16
   8968c:	9009883a 	mov	r4,r18
   89690:	00842780 	call	84278 <_fflush_r>
   89694:	103fe326 	beq	r2,zero,89624 <__swbuf_r+0xa0>
   89698:	00bfffc4 	movi	r2,-1
   8969c:	003fe206 	br	89628 <__swbuf_r+0xa4>
   896a0:	800b883a 	mov	r5,r16
   896a4:	9009883a 	mov	r4,r18
   896a8:	00826800 	call	82680 <__swsetup_r>
   896ac:	103ffa1e 	bne	r2,zero,89698 <__swbuf_r+0x114>
   896b0:	8100030b 	ldhu	r4,12(r16)
   896b4:	80c00417 	ldw	r3,16(r16)
   896b8:	003fc506 	br	895d0 <__swbuf_r+0x4c>
   896bc:	00846540 	call	84654 <__sinit>
   896c0:	003fbc06 	br	895b4 <__swbuf_r+0x30>

000896c4 <__swbuf>:
   896c4:	00800274 	movhi	r2,9
   896c8:	1085b604 	addi	r2,r2,5848
   896cc:	280d883a 	mov	r6,r5
   896d0:	200b883a 	mov	r5,r4
   896d4:	11000017 	ldw	r4,0(r2)
   896d8:	00895841 	jmpi	89584 <__swbuf_r>

000896dc <_wcrtomb_r>:
   896dc:	defff604 	addi	sp,sp,-40
   896e0:	00800274 	movhi	r2,9
   896e4:	dc800815 	stw	r18,32(sp)
   896e8:	dc400715 	stw	r17,28(sp)
   896ec:	dc000615 	stw	r16,24(sp)
   896f0:	1085ba04 	addi	r2,r2,5864
   896f4:	dfc00915 	stw	ra,36(sp)
   896f8:	2021883a 	mov	r16,r4
   896fc:	3823883a 	mov	r17,r7
   89700:	14800017 	ldw	r18,0(r2)
   89704:	28001426 	beq	r5,zero,89758 <_wcrtomb_r+0x7c>
   89708:	d9400415 	stw	r5,16(sp)
   8970c:	d9800515 	stw	r6,20(sp)
   89710:	0084cdc0 	call	84cdc <__locale_charset>
   89714:	d9800517 	ldw	r6,20(sp)
   89718:	d9400417 	ldw	r5,16(sp)
   8971c:	100f883a 	mov	r7,r2
   89720:	dc400015 	stw	r17,0(sp)
   89724:	8009883a 	mov	r4,r16
   89728:	903ee83a 	callr	r18
   8972c:	00ffffc4 	movi	r3,-1
   89730:	10c0031e 	bne	r2,r3,89740 <_wcrtomb_r+0x64>
   89734:	88000015 	stw	zero,0(r17)
   89738:	00c02284 	movi	r3,138
   8973c:	80c00015 	stw	r3,0(r16)
   89740:	dfc00917 	ldw	ra,36(sp)
   89744:	dc800817 	ldw	r18,32(sp)
   89748:	dc400717 	ldw	r17,28(sp)
   8974c:	dc000617 	ldw	r16,24(sp)
   89750:	dec00a04 	addi	sp,sp,40
   89754:	f800283a 	ret
   89758:	0084cdc0 	call	84cdc <__locale_charset>
   8975c:	100f883a 	mov	r7,r2
   89760:	dc400015 	stw	r17,0(sp)
   89764:	000d883a 	mov	r6,zero
   89768:	d9400104 	addi	r5,sp,4
   8976c:	8009883a 	mov	r4,r16
   89770:	903ee83a 	callr	r18
   89774:	003fed06 	br	8972c <_wcrtomb_r+0x50>

00089778 <wcrtomb>:
   89778:	defff604 	addi	sp,sp,-40
   8977c:	00800274 	movhi	r2,9
   89780:	dc800615 	stw	r18,24(sp)
   89784:	dc400515 	stw	r17,20(sp)
   89788:	1085b604 	addi	r2,r2,5848
   8978c:	dfc00915 	stw	ra,36(sp)
   89790:	dd000815 	stw	r20,32(sp)
   89794:	dcc00715 	stw	r19,28(sp)
   89798:	dc000415 	stw	r16,16(sp)
   8979c:	3025883a 	mov	r18,r6
   897a0:	14400017 	ldw	r17,0(r2)
   897a4:	20001926 	beq	r4,zero,8980c <wcrtomb+0x94>
   897a8:	00800274 	movhi	r2,9
   897ac:	1085ba04 	addi	r2,r2,5864
   897b0:	15000017 	ldw	r20,0(r2)
   897b4:	2021883a 	mov	r16,r4
   897b8:	2827883a 	mov	r19,r5
   897bc:	0084cdc0 	call	84cdc <__locale_charset>
   897c0:	100f883a 	mov	r7,r2
   897c4:	dc800015 	stw	r18,0(sp)
   897c8:	980d883a 	mov	r6,r19
   897cc:	800b883a 	mov	r5,r16
   897d0:	8809883a 	mov	r4,r17
   897d4:	a03ee83a 	callr	r20
   897d8:	00ffffc4 	movi	r3,-1
   897dc:	10c0031e 	bne	r2,r3,897ec <wcrtomb+0x74>
   897e0:	90000015 	stw	zero,0(r18)
   897e4:	00c02284 	movi	r3,138
   897e8:	88c00015 	stw	r3,0(r17)
   897ec:	dfc00917 	ldw	ra,36(sp)
   897f0:	dd000817 	ldw	r20,32(sp)
   897f4:	dcc00717 	ldw	r19,28(sp)
   897f8:	dc800617 	ldw	r18,24(sp)
   897fc:	dc400517 	ldw	r17,20(sp)
   89800:	dc000417 	ldw	r16,16(sp)
   89804:	dec00a04 	addi	sp,sp,40
   89808:	f800283a 	ret
   8980c:	00800274 	movhi	r2,9
   89810:	1085ba04 	addi	r2,r2,5864
   89814:	14000017 	ldw	r16,0(r2)
   89818:	0084cdc0 	call	84cdc <__locale_charset>
   8981c:	100f883a 	mov	r7,r2
   89820:	dc800015 	stw	r18,0(sp)
   89824:	000d883a 	mov	r6,zero
   89828:	d9400104 	addi	r5,sp,4
   8982c:	8809883a 	mov	r4,r17
   89830:	803ee83a 	callr	r16
   89834:	003fe806 	br	897d8 <wcrtomb+0x60>

00089838 <__ascii_wctomb>:
   89838:	28000526 	beq	r5,zero,89850 <__ascii_wctomb+0x18>
   8983c:	00803fc4 	movi	r2,255
   89840:	11800536 	bltu	r2,r6,89858 <__ascii_wctomb+0x20>
   89844:	29800005 	stb	r6,0(r5)
   89848:	00800044 	movi	r2,1
   8984c:	f800283a 	ret
   89850:	0005883a 	mov	r2,zero
   89854:	f800283a 	ret
   89858:	00802284 	movi	r2,138
   8985c:	20800015 	stw	r2,0(r4)
   89860:	00bfffc4 	movi	r2,-1
   89864:	f800283a 	ret

00089868 <_wctomb_r>:
   89868:	00800274 	movhi	r2,9
   8986c:	defff904 	addi	sp,sp,-28
   89870:	1085ba04 	addi	r2,r2,5864
   89874:	dfc00615 	stw	ra,24(sp)
   89878:	dc400515 	stw	r17,20(sp)
   8987c:	dc000415 	stw	r16,16(sp)
   89880:	3823883a 	mov	r17,r7
   89884:	14000017 	ldw	r16,0(r2)
   89888:	d9000115 	stw	r4,4(sp)
   8988c:	d9400215 	stw	r5,8(sp)
   89890:	d9800315 	stw	r6,12(sp)
   89894:	0084cdc0 	call	84cdc <__locale_charset>
   89898:	d9800317 	ldw	r6,12(sp)
   8989c:	d9400217 	ldw	r5,8(sp)
   898a0:	d9000117 	ldw	r4,4(sp)
   898a4:	100f883a 	mov	r7,r2
   898a8:	dc400015 	stw	r17,0(sp)
   898ac:	803ee83a 	callr	r16
   898b0:	dfc00617 	ldw	ra,24(sp)
   898b4:	dc400517 	ldw	r17,20(sp)
   898b8:	dc000417 	ldw	r16,16(sp)
   898bc:	dec00704 	addi	sp,sp,28
   898c0:	f800283a 	ret

000898c4 <__udivdi3>:
   898c4:	defff504 	addi	sp,sp,-44
   898c8:	dcc00415 	stw	r19,16(sp)
   898cc:	dc000115 	stw	r16,4(sp)
   898d0:	dfc00a15 	stw	ra,40(sp)
   898d4:	df000915 	stw	fp,36(sp)
   898d8:	ddc00815 	stw	r23,32(sp)
   898dc:	dd800715 	stw	r22,28(sp)
   898e0:	dd400615 	stw	r21,24(sp)
   898e4:	dd000515 	stw	r20,20(sp)
   898e8:	dc800315 	stw	r18,12(sp)
   898ec:	dc400215 	stw	r17,8(sp)
   898f0:	2027883a 	mov	r19,r4
   898f4:	2821883a 	mov	r16,r5
   898f8:	3800411e 	bne	r7,zero,89a00 <__udivdi3+0x13c>
   898fc:	3023883a 	mov	r17,r6
   89900:	2025883a 	mov	r18,r4
   89904:	2980522e 	bgeu	r5,r6,89a50 <__udivdi3+0x18c>
   89908:	00bfffd4 	movui	r2,65535
   8990c:	282d883a 	mov	r22,r5
   89910:	1180a836 	bltu	r2,r6,89bb4 <__udivdi3+0x2f0>
   89914:	00803fc4 	movi	r2,255
   89918:	1185803a 	cmpltu	r2,r2,r6
   8991c:	100490fa 	slli	r2,r2,3
   89920:	3086d83a 	srl	r3,r6,r2
   89924:	01000274 	movhi	r4,9
   89928:	213ebf04 	addi	r4,r4,-1284
   8992c:	20c7883a 	add	r3,r4,r3
   89930:	18c00003 	ldbu	r3,0(r3)
   89934:	1885883a 	add	r2,r3,r2
   89938:	00c00804 	movi	r3,32
   8993c:	1887c83a 	sub	r3,r3,r2
   89940:	18000526 	beq	r3,zero,89958 <__udivdi3+0x94>
   89944:	80e0983a 	sll	r16,r16,r3
   89948:	9884d83a 	srl	r2,r19,r2
   8994c:	30e2983a 	sll	r17,r6,r3
   89950:	98e4983a 	sll	r18,r19,r3
   89954:	142cb03a 	or	r22,r2,r16
   89958:	882ad43a 	srli	r21,r17,16
   8995c:	b009883a 	mov	r4,r22
   89960:	8d3fffcc 	andi	r20,r17,65535
   89964:	a80b883a 	mov	r5,r21
   89968:	008a4d00 	call	8a4d0 <__umodsi3>
   8996c:	b009883a 	mov	r4,r22
   89970:	a80b883a 	mov	r5,r21
   89974:	1027883a 	mov	r19,r2
   89978:	008a46c0 	call	8a46c <__udivsi3>
   8997c:	102d883a 	mov	r22,r2
   89980:	9826943a 	slli	r19,r19,16
   89984:	9004d43a 	srli	r2,r18,16
   89988:	a5a1383a 	mul	r16,r20,r22
   8998c:	14c4b03a 	or	r2,r2,r19
   89990:	1400052e 	bgeu	r2,r16,899a8 <__udivdi3+0xe4>
   89994:	1445883a 	add	r2,r2,r17
   89998:	b0ffffc4 	addi	r3,r22,-1
   8999c:	14400136 	bltu	r2,r17,899a4 <__udivdi3+0xe0>
   899a0:	14012336 	bltu	r2,r16,89e30 <__udivdi3+0x56c>
   899a4:	182d883a 	mov	r22,r3
   899a8:	1421c83a 	sub	r16,r2,r16
   899ac:	a80b883a 	mov	r5,r21
   899b0:	8009883a 	mov	r4,r16
   899b4:	008a4d00 	call	8a4d0 <__umodsi3>
   899b8:	1027883a 	mov	r19,r2
   899bc:	a80b883a 	mov	r5,r21
   899c0:	8009883a 	mov	r4,r16
   899c4:	008a46c0 	call	8a46c <__udivsi3>
   899c8:	9826943a 	slli	r19,r19,16
   899cc:	a0a9383a 	mul	r20,r20,r2
   899d0:	94bfffcc 	andi	r18,r18,65535
   899d4:	94e4b03a 	or	r18,r18,r19
   899d8:	9500052e 	bgeu	r18,r20,899f0 <__udivdi3+0x12c>
   899dc:	8ca5883a 	add	r18,r17,r18
   899e0:	10ffffc4 	addi	r3,r2,-1
   899e4:	9440f136 	bltu	r18,r17,89dac <__udivdi3+0x4e8>
   899e8:	9500f02e 	bgeu	r18,r20,89dac <__udivdi3+0x4e8>
   899ec:	10bfff84 	addi	r2,r2,-2
   899f0:	b00c943a 	slli	r6,r22,16
   899f4:	0007883a 	mov	r3,zero
   899f8:	3084b03a 	or	r2,r6,r2
   899fc:	00005906 	br	89b64 <__udivdi3+0x2a0>
   89a00:	29c05636 	bltu	r5,r7,89b5c <__udivdi3+0x298>
   89a04:	00bfffd4 	movui	r2,65535
   89a08:	11c0622e 	bgeu	r2,r7,89b94 <__udivdi3+0x2d0>
   89a0c:	00804034 	movhi	r2,256
   89a10:	10bfffc4 	addi	r2,r2,-1
   89a14:	11c0ee36 	bltu	r2,r7,89dd0 <__udivdi3+0x50c>
   89a18:	00800404 	movi	r2,16
   89a1c:	3886d83a 	srl	r3,r7,r2
   89a20:	01000274 	movhi	r4,9
   89a24:	213ebf04 	addi	r4,r4,-1284
   89a28:	20c7883a 	add	r3,r4,r3
   89a2c:	18c00003 	ldbu	r3,0(r3)
   89a30:	05400804 	movi	r21,32
   89a34:	1885883a 	add	r2,r3,r2
   89a38:	a8abc83a 	sub	r21,r21,r2
   89a3c:	a800621e 	bne	r21,zero,89bc8 <__udivdi3+0x304>
   89a40:	3c00e936 	bltu	r7,r16,89de8 <__udivdi3+0x524>
   89a44:	9985403a 	cmpgeu	r2,r19,r6
   89a48:	0007883a 	mov	r3,zero
   89a4c:	00004506 	br	89b64 <__udivdi3+0x2a0>
   89a50:	3000041e 	bne	r6,zero,89a64 <__udivdi3+0x1a0>
   89a54:	000b883a 	mov	r5,zero
   89a58:	01000044 	movi	r4,1
   89a5c:	008a46c0 	call	8a46c <__udivsi3>
   89a60:	1023883a 	mov	r17,r2
   89a64:	00bfffd4 	movui	r2,65535
   89a68:	14404e2e 	bgeu	r2,r17,89ba4 <__udivdi3+0x2e0>
   89a6c:	00804034 	movhi	r2,256
   89a70:	10bfffc4 	addi	r2,r2,-1
   89a74:	1440d836 	bltu	r2,r17,89dd8 <__udivdi3+0x514>
   89a78:	00800404 	movi	r2,16
   89a7c:	8886d83a 	srl	r3,r17,r2
   89a80:	01000274 	movhi	r4,9
   89a84:	213ebf04 	addi	r4,r4,-1284
   89a88:	20c7883a 	add	r3,r4,r3
   89a8c:	18c00003 	ldbu	r3,0(r3)
   89a90:	1885883a 	add	r2,r3,r2
   89a94:	00c00804 	movi	r3,32
   89a98:	1887c83a 	sub	r3,r3,r2
   89a9c:	18008f1e 	bne	r3,zero,89cdc <__udivdi3+0x418>
   89aa0:	882ad43a 	srli	r21,r17,16
   89aa4:	8461c83a 	sub	r16,r16,r17
   89aa8:	8d3fffcc 	andi	r20,r17,65535
   89aac:	00c00044 	movi	r3,1
   89ab0:	8009883a 	mov	r4,r16
   89ab4:	a80b883a 	mov	r5,r21
   89ab8:	d8c00015 	stw	r3,0(sp)
   89abc:	008a4d00 	call	8a4d0 <__umodsi3>
   89ac0:	8009883a 	mov	r4,r16
   89ac4:	a80b883a 	mov	r5,r21
   89ac8:	1027883a 	mov	r19,r2
   89acc:	008a46c0 	call	8a46c <__udivsi3>
   89ad0:	9826943a 	slli	r19,r19,16
   89ad4:	9008d43a 	srli	r4,r18,16
   89ad8:	1521383a 	mul	r16,r2,r20
   89adc:	102d883a 	mov	r22,r2
   89ae0:	24c8b03a 	or	r4,r4,r19
   89ae4:	d8c00017 	ldw	r3,0(sp)
   89ae8:	2400052e 	bgeu	r4,r16,89b00 <__udivdi3+0x23c>
   89aec:	2449883a 	add	r4,r4,r17
   89af0:	b0bfffc4 	addi	r2,r22,-1
   89af4:	24400136 	bltu	r4,r17,89afc <__udivdi3+0x238>
   89af8:	2400ca36 	bltu	r4,r16,89e24 <__udivdi3+0x560>
   89afc:	102d883a 	mov	r22,r2
   89b00:	2421c83a 	sub	r16,r4,r16
   89b04:	a80b883a 	mov	r5,r21
   89b08:	8009883a 	mov	r4,r16
   89b0c:	d8c00015 	stw	r3,0(sp)
   89b10:	008a4d00 	call	8a4d0 <__umodsi3>
   89b14:	1027883a 	mov	r19,r2
   89b18:	a80b883a 	mov	r5,r21
   89b1c:	8009883a 	mov	r4,r16
   89b20:	008a46c0 	call	8a46c <__udivsi3>
   89b24:	9826943a 	slli	r19,r19,16
   89b28:	1529383a 	mul	r20,r2,r20
   89b2c:	94bfffcc 	andi	r18,r18,65535
   89b30:	94e4b03a 	or	r18,r18,r19
   89b34:	d8c00017 	ldw	r3,0(sp)
   89b38:	9500052e 	bgeu	r18,r20,89b50 <__udivdi3+0x28c>
   89b3c:	8ca5883a 	add	r18,r17,r18
   89b40:	113fffc4 	addi	r4,r2,-1
   89b44:	94409736 	bltu	r18,r17,89da4 <__udivdi3+0x4e0>
   89b48:	9500962e 	bgeu	r18,r20,89da4 <__udivdi3+0x4e0>
   89b4c:	10bfff84 	addi	r2,r2,-2
   89b50:	b00c943a 	slli	r6,r22,16
   89b54:	3084b03a 	or	r2,r6,r2
   89b58:	00000206 	br	89b64 <__udivdi3+0x2a0>
   89b5c:	0007883a 	mov	r3,zero
   89b60:	0005883a 	mov	r2,zero
   89b64:	dfc00a17 	ldw	ra,40(sp)
   89b68:	df000917 	ldw	fp,36(sp)
   89b6c:	ddc00817 	ldw	r23,32(sp)
   89b70:	dd800717 	ldw	r22,28(sp)
   89b74:	dd400617 	ldw	r21,24(sp)
   89b78:	dd000517 	ldw	r20,20(sp)
   89b7c:	dcc00417 	ldw	r19,16(sp)
   89b80:	dc800317 	ldw	r18,12(sp)
   89b84:	dc400217 	ldw	r17,8(sp)
   89b88:	dc000117 	ldw	r16,4(sp)
   89b8c:	dec00b04 	addi	sp,sp,44
   89b90:	f800283a 	ret
   89b94:	00803fc4 	movi	r2,255
   89b98:	11c5803a 	cmpltu	r2,r2,r7
   89b9c:	100490fa 	slli	r2,r2,3
   89ba0:	003f9e06 	br	89a1c <__udivdi3+0x158>
   89ba4:	00803fc4 	movi	r2,255
   89ba8:	1445803a 	cmpltu	r2,r2,r17
   89bac:	100490fa 	slli	r2,r2,3
   89bb0:	003fb206 	br	89a7c <__udivdi3+0x1b8>
   89bb4:	00804034 	movhi	r2,256
   89bb8:	10bfffc4 	addi	r2,r2,-1
   89bbc:	11808836 	bltu	r2,r6,89de0 <__udivdi3+0x51c>
   89bc0:	00800404 	movi	r2,16
   89bc4:	003f5606 	br	89920 <__udivdi3+0x5c>
   89bc8:	30aed83a 	srl	r23,r6,r2
   89bcc:	3d4e983a 	sll	r7,r7,r21
   89bd0:	80acd83a 	srl	r22,r16,r2
   89bd4:	9884d83a 	srl	r2,r19,r2
   89bd8:	3deeb03a 	or	r23,r7,r23
   89bdc:	b824d43a 	srli	r18,r23,16
   89be0:	8560983a 	sll	r16,r16,r21
   89be4:	b009883a 	mov	r4,r22
   89be8:	900b883a 	mov	r5,r18
   89bec:	3568983a 	sll	r20,r6,r21
   89bf0:	1420b03a 	or	r16,r2,r16
   89bf4:	008a4d00 	call	8a4d0 <__umodsi3>
   89bf8:	b009883a 	mov	r4,r22
   89bfc:	900b883a 	mov	r5,r18
   89c00:	1023883a 	mov	r17,r2
   89c04:	008a46c0 	call	8a46c <__udivsi3>
   89c08:	8808943a 	slli	r4,r17,16
   89c0c:	bf3fffcc 	andi	fp,r23,65535
   89c10:	8006d43a 	srli	r3,r16,16
   89c14:	e0a3383a 	mul	r17,fp,r2
   89c18:	100d883a 	mov	r6,r2
   89c1c:	1906b03a 	or	r3,r3,r4
   89c20:	1c40042e 	bgeu	r3,r17,89c34 <__udivdi3+0x370>
   89c24:	1dc7883a 	add	r3,r3,r23
   89c28:	10bfffc4 	addi	r2,r2,-1
   89c2c:	1dc0752e 	bgeu	r3,r23,89e04 <__udivdi3+0x540>
   89c30:	100d883a 	mov	r6,r2
   89c34:	1c63c83a 	sub	r17,r3,r17
   89c38:	900b883a 	mov	r5,r18
   89c3c:	8809883a 	mov	r4,r17
   89c40:	d9800015 	stw	r6,0(sp)
   89c44:	008a4d00 	call	8a4d0 <__umodsi3>
   89c48:	102d883a 	mov	r22,r2
   89c4c:	8809883a 	mov	r4,r17
   89c50:	900b883a 	mov	r5,r18
   89c54:	008a46c0 	call	8a46c <__udivsi3>
   89c58:	b02c943a 	slli	r22,r22,16
   89c5c:	e089383a 	mul	r4,fp,r2
   89c60:	843fffcc 	andi	r16,r16,65535
   89c64:	85a0b03a 	or	r16,r16,r22
   89c68:	d9800017 	ldw	r6,0(sp)
   89c6c:	8100042e 	bgeu	r16,r4,89c80 <__udivdi3+0x3bc>
   89c70:	85e1883a 	add	r16,r16,r23
   89c74:	10ffffc4 	addi	r3,r2,-1
   89c78:	85c05e2e 	bgeu	r16,r23,89df4 <__udivdi3+0x530>
   89c7c:	1805883a 	mov	r2,r3
   89c80:	300c943a 	slli	r6,r6,16
   89c84:	a17fffcc 	andi	r5,r20,65535
   89c88:	a028d43a 	srli	r20,r20,16
   89c8c:	3084b03a 	or	r2,r6,r2
   89c90:	10ffffcc 	andi	r3,r2,65535
   89c94:	100cd43a 	srli	r6,r2,16
   89c98:	194f383a 	mul	r7,r3,r5
   89c9c:	1d07383a 	mul	r3,r3,r20
   89ca0:	314b383a 	mul	r5,r6,r5
   89ca4:	3810d43a 	srli	r8,r7,16
   89ca8:	8121c83a 	sub	r16,r16,r4
   89cac:	1947883a 	add	r3,r3,r5
   89cb0:	40c7883a 	add	r3,r8,r3
   89cb4:	350d383a 	mul	r6,r6,r20
   89cb8:	1940022e 	bgeu	r3,r5,89cc4 <__udivdi3+0x400>
   89cbc:	01000074 	movhi	r4,1
   89cc0:	310d883a 	add	r6,r6,r4
   89cc4:	1828d43a 	srli	r20,r3,16
   89cc8:	a18d883a 	add	r6,r20,r6
   89ccc:	81803e36 	bltu	r16,r6,89dc8 <__udivdi3+0x504>
   89cd0:	81803826 	beq	r16,r6,89db4 <__udivdi3+0x4f0>
   89cd4:	0007883a 	mov	r3,zero
   89cd8:	003fa206 	br	89b64 <__udivdi3+0x2a0>
   89cdc:	88e2983a 	sll	r17,r17,r3
   89ce0:	80a8d83a 	srl	r20,r16,r2
   89ce4:	80e0983a 	sll	r16,r16,r3
   89ce8:	882ad43a 	srli	r21,r17,16
   89cec:	9884d83a 	srl	r2,r19,r2
   89cf0:	a009883a 	mov	r4,r20
   89cf4:	a80b883a 	mov	r5,r21
   89cf8:	142eb03a 	or	r23,r2,r16
   89cfc:	98e4983a 	sll	r18,r19,r3
   89d00:	008a4d00 	call	8a4d0 <__umodsi3>
   89d04:	a009883a 	mov	r4,r20
   89d08:	a80b883a 	mov	r5,r21
   89d0c:	1021883a 	mov	r16,r2
   89d10:	008a46c0 	call	8a46c <__udivsi3>
   89d14:	1039883a 	mov	fp,r2
   89d18:	8d3fffcc 	andi	r20,r17,65535
   89d1c:	8020943a 	slli	r16,r16,16
   89d20:	b804d43a 	srli	r2,r23,16
   89d24:	a72d383a 	mul	r22,r20,fp
   89d28:	1404b03a 	or	r2,r2,r16
   89d2c:	1580062e 	bgeu	r2,r22,89d48 <__udivdi3+0x484>
   89d30:	1445883a 	add	r2,r2,r17
   89d34:	e0ffffc4 	addi	r3,fp,-1
   89d38:	14403836 	bltu	r2,r17,89e1c <__udivdi3+0x558>
   89d3c:	1580372e 	bgeu	r2,r22,89e1c <__udivdi3+0x558>
   89d40:	e73fff84 	addi	fp,fp,-2
   89d44:	1445883a 	add	r2,r2,r17
   89d48:	15adc83a 	sub	r22,r2,r22
   89d4c:	a80b883a 	mov	r5,r21
   89d50:	b009883a 	mov	r4,r22
   89d54:	008a4d00 	call	8a4d0 <__umodsi3>
   89d58:	1027883a 	mov	r19,r2
   89d5c:	b009883a 	mov	r4,r22
   89d60:	a80b883a 	mov	r5,r21
   89d64:	008a46c0 	call	8a46c <__udivsi3>
   89d68:	9826943a 	slli	r19,r19,16
   89d6c:	a0a1383a 	mul	r16,r20,r2
   89d70:	b93fffcc 	andi	r4,r23,65535
   89d74:	24c8b03a 	or	r4,r4,r19
   89d78:	2400062e 	bgeu	r4,r16,89d94 <__udivdi3+0x4d0>
   89d7c:	2449883a 	add	r4,r4,r17
   89d80:	10ffffc4 	addi	r3,r2,-1
   89d84:	24402336 	bltu	r4,r17,89e14 <__udivdi3+0x550>
   89d88:	2400222e 	bgeu	r4,r16,89e14 <__udivdi3+0x550>
   89d8c:	10bfff84 	addi	r2,r2,-2
   89d90:	2449883a 	add	r4,r4,r17
   89d94:	e038943a 	slli	fp,fp,16
   89d98:	2421c83a 	sub	r16,r4,r16
   89d9c:	e086b03a 	or	r3,fp,r2
   89da0:	003f4306 	br	89ab0 <__udivdi3+0x1ec>
   89da4:	2005883a 	mov	r2,r4
   89da8:	003f6906 	br	89b50 <__udivdi3+0x28c>
   89dac:	1805883a 	mov	r2,r3
   89db0:	003f0f06 	br	899f0 <__udivdi3+0x12c>
   89db4:	1806943a 	slli	r3,r3,16
   89db8:	9d66983a 	sll	r19,r19,r21
   89dbc:	39ffffcc 	andi	r7,r7,65535
   89dc0:	19c7883a 	add	r3,r3,r7
   89dc4:	98ffc32e 	bgeu	r19,r3,89cd4 <__udivdi3+0x410>
   89dc8:	10bfffc4 	addi	r2,r2,-1
   89dcc:	003fc106 	br	89cd4 <__udivdi3+0x410>
   89dd0:	00800604 	movi	r2,24
   89dd4:	003f1106 	br	89a1c <__udivdi3+0x158>
   89dd8:	00800604 	movi	r2,24
   89ddc:	003f2706 	br	89a7c <__udivdi3+0x1b8>
   89de0:	00800604 	movi	r2,24
   89de4:	003ece06 	br	89920 <__udivdi3+0x5c>
   89de8:	0007883a 	mov	r3,zero
   89dec:	00800044 	movi	r2,1
   89df0:	003f5c06 	br	89b64 <__udivdi3+0x2a0>
   89df4:	813fa12e 	bgeu	r16,r4,89c7c <__udivdi3+0x3b8>
   89df8:	10bfff84 	addi	r2,r2,-2
   89dfc:	85e1883a 	add	r16,r16,r23
   89e00:	003f9f06 	br	89c80 <__udivdi3+0x3bc>
   89e04:	1c7f8a2e 	bgeu	r3,r17,89c30 <__udivdi3+0x36c>
   89e08:	31bfff84 	addi	r6,r6,-2
   89e0c:	1dc7883a 	add	r3,r3,r23
   89e10:	003f8806 	br	89c34 <__udivdi3+0x370>
   89e14:	1805883a 	mov	r2,r3
   89e18:	003fde06 	br	89d94 <__udivdi3+0x4d0>
   89e1c:	1839883a 	mov	fp,r3
   89e20:	003fc906 	br	89d48 <__udivdi3+0x484>
   89e24:	b5bfff84 	addi	r22,r22,-2
   89e28:	2449883a 	add	r4,r4,r17
   89e2c:	003f3406 	br	89b00 <__udivdi3+0x23c>
   89e30:	b5bfff84 	addi	r22,r22,-2
   89e34:	1445883a 	add	r2,r2,r17
   89e38:	003edb06 	br	899a8 <__udivdi3+0xe4>

00089e3c <__umoddi3>:
   89e3c:	defff404 	addi	sp,sp,-48
   89e40:	df000a15 	stw	fp,40(sp)
   89e44:	dc400315 	stw	r17,12(sp)
   89e48:	dc000215 	stw	r16,8(sp)
   89e4c:	dfc00b15 	stw	ra,44(sp)
   89e50:	ddc00915 	stw	r23,36(sp)
   89e54:	dd800815 	stw	r22,32(sp)
   89e58:	dd400715 	stw	r21,28(sp)
   89e5c:	dd000615 	stw	r20,24(sp)
   89e60:	dcc00515 	stw	r19,20(sp)
   89e64:	dc800415 	stw	r18,16(sp)
   89e68:	2021883a 	mov	r16,r4
   89e6c:	2823883a 	mov	r17,r5
   89e70:	2839883a 	mov	fp,r5
   89e74:	38003c1e 	bne	r7,zero,89f68 <__umoddi3+0x12c>
   89e78:	3027883a 	mov	r19,r6
   89e7c:	2029883a 	mov	r20,r4
   89e80:	2980512e 	bgeu	r5,r6,89fc8 <__umoddi3+0x18c>
   89e84:	00bfffd4 	movui	r2,65535
   89e88:	11809a36 	bltu	r2,r6,8a0f4 <__umoddi3+0x2b8>
   89e8c:	01003fc4 	movi	r4,255
   89e90:	2189803a 	cmpltu	r4,r4,r6
   89e94:	200890fa 	slli	r4,r4,3
   89e98:	3104d83a 	srl	r2,r6,r4
   89e9c:	00c00274 	movhi	r3,9
   89ea0:	18febf04 	addi	r3,r3,-1284
   89ea4:	1885883a 	add	r2,r3,r2
   89ea8:	10c00003 	ldbu	r3,0(r2)
   89eac:	00800804 	movi	r2,32
   89eb0:	1909883a 	add	r4,r3,r4
   89eb4:	1125c83a 	sub	r18,r2,r4
   89eb8:	90000526 	beq	r18,zero,89ed0 <__umoddi3+0x94>
   89ebc:	8ca2983a 	sll	r17,r17,r18
   89ec0:	8108d83a 	srl	r4,r16,r4
   89ec4:	34a6983a 	sll	r19,r6,r18
   89ec8:	84a8983a 	sll	r20,r16,r18
   89ecc:	2478b03a 	or	fp,r4,r17
   89ed0:	982ed43a 	srli	r23,r19,16
   89ed4:	e009883a 	mov	r4,fp
   89ed8:	9dbfffcc 	andi	r22,r19,65535
   89edc:	b80b883a 	mov	r5,r23
   89ee0:	008a4d00 	call	8a4d0 <__umodsi3>
   89ee4:	e009883a 	mov	r4,fp
   89ee8:	b80b883a 	mov	r5,r23
   89eec:	102b883a 	mov	r21,r2
   89ef0:	008a46c0 	call	8a46c <__udivsi3>
   89ef4:	a806943a 	slli	r3,r21,16
   89ef8:	a008d43a 	srli	r4,r20,16
   89efc:	b085383a 	mul	r2,r22,r2
   89f00:	20c8b03a 	or	r4,r4,r3
   89f04:	2080032e 	bgeu	r4,r2,89f14 <__umoddi3+0xd8>
   89f08:	24c9883a 	add	r4,r4,r19
   89f0c:	24c00136 	bltu	r4,r19,89f14 <__umoddi3+0xd8>
   89f10:	20811036 	bltu	r4,r2,8a354 <__umoddi3+0x518>
   89f14:	20abc83a 	sub	r21,r4,r2
   89f18:	b80b883a 	mov	r5,r23
   89f1c:	a809883a 	mov	r4,r21
   89f20:	008a4d00 	call	8a4d0 <__umodsi3>
   89f24:	1023883a 	mov	r17,r2
   89f28:	b80b883a 	mov	r5,r23
   89f2c:	a809883a 	mov	r4,r21
   89f30:	008a46c0 	call	8a46c <__udivsi3>
   89f34:	8822943a 	slli	r17,r17,16
   89f38:	b085383a 	mul	r2,r22,r2
   89f3c:	a0ffffcc 	andi	r3,r20,65535
   89f40:	1c46b03a 	or	r3,r3,r17
   89f44:	1880042e 	bgeu	r3,r2,89f58 <__umoddi3+0x11c>
   89f48:	1cc7883a 	add	r3,r3,r19
   89f4c:	1cc00236 	bltu	r3,r19,89f58 <__umoddi3+0x11c>
   89f50:	1880012e 	bgeu	r3,r2,89f58 <__umoddi3+0x11c>
   89f54:	1cc7883a 	add	r3,r3,r19
   89f58:	1885c83a 	sub	r2,r3,r2
   89f5c:	1484d83a 	srl	r2,r2,r18
   89f60:	0007883a 	mov	r3,zero
   89f64:	00004f06 	br	8a0a4 <__umoddi3+0x268>
   89f68:	29c04c36 	bltu	r5,r7,8a09c <__umoddi3+0x260>
   89f6c:	00bfffd4 	movui	r2,65535
   89f70:	11c0582e 	bgeu	r2,r7,8a0d4 <__umoddi3+0x298>
   89f74:	00804034 	movhi	r2,256
   89f78:	10bfffc4 	addi	r2,r2,-1
   89f7c:	11c0e736 	bltu	r2,r7,8a31c <__umoddi3+0x4e0>
   89f80:	01000404 	movi	r4,16
   89f84:	3904d83a 	srl	r2,r7,r4
   89f88:	00c00274 	movhi	r3,9
   89f8c:	18febf04 	addi	r3,r3,-1284
   89f90:	1885883a 	add	r2,r3,r2
   89f94:	14c00003 	ldbu	r19,0(r2)
   89f98:	00c00804 	movi	r3,32
   89f9c:	9927883a 	add	r19,r19,r4
   89fa0:	1ce9c83a 	sub	r20,r3,r19
   89fa4:	a000581e 	bne	r20,zero,8a108 <__umoddi3+0x2cc>
   89fa8:	3c400136 	bltu	r7,r17,89fb0 <__umoddi3+0x174>
   89fac:	8180eb36 	bltu	r16,r6,8a35c <__umoddi3+0x520>
   89fb0:	8185c83a 	sub	r2,r16,r6
   89fb4:	89e3c83a 	sub	r17,r17,r7
   89fb8:	8089803a 	cmpltu	r4,r16,r2
   89fbc:	8939c83a 	sub	fp,r17,r4
   89fc0:	e007883a 	mov	r3,fp
   89fc4:	00003706 	br	8a0a4 <__umoddi3+0x268>
   89fc8:	3000041e 	bne	r6,zero,89fdc <__umoddi3+0x1a0>
   89fcc:	000b883a 	mov	r5,zero
   89fd0:	01000044 	movi	r4,1
   89fd4:	008a46c0 	call	8a46c <__udivsi3>
   89fd8:	1027883a 	mov	r19,r2
   89fdc:	00bfffd4 	movui	r2,65535
   89fe0:	14c0402e 	bgeu	r2,r19,8a0e4 <__umoddi3+0x2a8>
   89fe4:	00804034 	movhi	r2,256
   89fe8:	10bfffc4 	addi	r2,r2,-1
   89fec:	14c0cd36 	bltu	r2,r19,8a324 <__umoddi3+0x4e8>
   89ff0:	00800404 	movi	r2,16
   89ff4:	9886d83a 	srl	r3,r19,r2
   89ff8:	01000274 	movhi	r4,9
   89ffc:	213ebf04 	addi	r4,r4,-1284
   8a000:	20c7883a 	add	r3,r4,r3
   8a004:	18c00003 	ldbu	r3,0(r3)
   8a008:	1887883a 	add	r3,r3,r2
   8a00c:	00800804 	movi	r2,32
   8a010:	10e5c83a 	sub	r18,r2,r3
   8a014:	9000901e 	bne	r18,zero,8a258 <__umoddi3+0x41c>
   8a018:	982cd43a 	srli	r22,r19,16
   8a01c:	8ce3c83a 	sub	r17,r17,r19
   8a020:	9d7fffcc 	andi	r21,r19,65535
   8a024:	b00b883a 	mov	r5,r22
   8a028:	8809883a 	mov	r4,r17
   8a02c:	008a4d00 	call	8a4d0 <__umodsi3>
   8a030:	8809883a 	mov	r4,r17
   8a034:	b00b883a 	mov	r5,r22
   8a038:	1021883a 	mov	r16,r2
   8a03c:	008a46c0 	call	8a46c <__udivsi3>
   8a040:	8006943a 	slli	r3,r16,16
   8a044:	a008d43a 	srli	r4,r20,16
   8a048:	1545383a 	mul	r2,r2,r21
   8a04c:	20c8b03a 	or	r4,r4,r3
   8a050:	2080042e 	bgeu	r4,r2,8a064 <__umoddi3+0x228>
   8a054:	24c9883a 	add	r4,r4,r19
   8a058:	24c00236 	bltu	r4,r19,8a064 <__umoddi3+0x228>
   8a05c:	2080012e 	bgeu	r4,r2,8a064 <__umoddi3+0x228>
   8a060:	24c9883a 	add	r4,r4,r19
   8a064:	20a1c83a 	sub	r16,r4,r2
   8a068:	b00b883a 	mov	r5,r22
   8a06c:	8009883a 	mov	r4,r16
   8a070:	008a4d00 	call	8a4d0 <__umodsi3>
   8a074:	1023883a 	mov	r17,r2
   8a078:	b00b883a 	mov	r5,r22
   8a07c:	8009883a 	mov	r4,r16
   8a080:	008a46c0 	call	8a46c <__udivsi3>
   8a084:	8822943a 	slli	r17,r17,16
   8a088:	1545383a 	mul	r2,r2,r21
   8a08c:	a53fffcc 	andi	r20,r20,65535
   8a090:	a446b03a 	or	r3,r20,r17
   8a094:	18bfb02e 	bgeu	r3,r2,89f58 <__umoddi3+0x11c>
   8a098:	003fab06 	br	89f48 <__umoddi3+0x10c>
   8a09c:	2005883a 	mov	r2,r4
   8a0a0:	2807883a 	mov	r3,r5
   8a0a4:	dfc00b17 	ldw	ra,44(sp)
   8a0a8:	df000a17 	ldw	fp,40(sp)
   8a0ac:	ddc00917 	ldw	r23,36(sp)
   8a0b0:	dd800817 	ldw	r22,32(sp)
   8a0b4:	dd400717 	ldw	r21,28(sp)
   8a0b8:	dd000617 	ldw	r20,24(sp)
   8a0bc:	dcc00517 	ldw	r19,20(sp)
   8a0c0:	dc800417 	ldw	r18,16(sp)
   8a0c4:	dc400317 	ldw	r17,12(sp)
   8a0c8:	dc000217 	ldw	r16,8(sp)
   8a0cc:	dec00c04 	addi	sp,sp,48
   8a0d0:	f800283a 	ret
   8a0d4:	04c03fc4 	movi	r19,255
   8a0d8:	99c9803a 	cmpltu	r4,r19,r7
   8a0dc:	200890fa 	slli	r4,r4,3
   8a0e0:	003fa806 	br	89f84 <__umoddi3+0x148>
   8a0e4:	00803fc4 	movi	r2,255
   8a0e8:	14c5803a 	cmpltu	r2,r2,r19
   8a0ec:	100490fa 	slli	r2,r2,3
   8a0f0:	003fc006 	br	89ff4 <__umoddi3+0x1b8>
   8a0f4:	00804034 	movhi	r2,256
   8a0f8:	10bfffc4 	addi	r2,r2,-1
   8a0fc:	11808b36 	bltu	r2,r6,8a32c <__umoddi3+0x4f0>
   8a100:	01000404 	movi	r4,16
   8a104:	003f6406 	br	89e98 <__umoddi3+0x5c>
   8a108:	34c4d83a 	srl	r2,r6,r19
   8a10c:	3d0e983a 	sll	r7,r7,r20
   8a110:	8cf8d83a 	srl	fp,r17,r19
   8a114:	8d10983a 	sll	r8,r17,r20
   8a118:	38aab03a 	or	r21,r7,r2
   8a11c:	a82cd43a 	srli	r22,r21,16
   8a120:	84e2d83a 	srl	r17,r16,r19
   8a124:	e009883a 	mov	r4,fp
   8a128:	b00b883a 	mov	r5,r22
   8a12c:	8a22b03a 	or	r17,r17,r8
   8a130:	3524983a 	sll	r18,r6,r20
   8a134:	008a4d00 	call	8a4d0 <__umodsi3>
   8a138:	e009883a 	mov	r4,fp
   8a13c:	b00b883a 	mov	r5,r22
   8a140:	102f883a 	mov	r23,r2
   8a144:	008a46c0 	call	8a46c <__udivsi3>
   8a148:	100d883a 	mov	r6,r2
   8a14c:	b808943a 	slli	r4,r23,16
   8a150:	aa3fffcc 	andi	r8,r21,65535
   8a154:	8804d43a 	srli	r2,r17,16
   8a158:	41af383a 	mul	r23,r8,r6
   8a15c:	8520983a 	sll	r16,r16,r20
   8a160:	1104b03a 	or	r2,r2,r4
   8a164:	15c0042e 	bgeu	r2,r23,8a178 <__umoddi3+0x33c>
   8a168:	1545883a 	add	r2,r2,r21
   8a16c:	30ffffc4 	addi	r3,r6,-1
   8a170:	1540742e 	bgeu	r2,r21,8a344 <__umoddi3+0x508>
   8a174:	180d883a 	mov	r6,r3
   8a178:	15efc83a 	sub	r23,r2,r23
   8a17c:	b00b883a 	mov	r5,r22
   8a180:	b809883a 	mov	r4,r23
   8a184:	d9800115 	stw	r6,4(sp)
   8a188:	da000015 	stw	r8,0(sp)
   8a18c:	008a4d00 	call	8a4d0 <__umodsi3>
   8a190:	b00b883a 	mov	r5,r22
   8a194:	b809883a 	mov	r4,r23
   8a198:	1039883a 	mov	fp,r2
   8a19c:	008a46c0 	call	8a46c <__udivsi3>
   8a1a0:	da000017 	ldw	r8,0(sp)
   8a1a4:	e038943a 	slli	fp,fp,16
   8a1a8:	100b883a 	mov	r5,r2
   8a1ac:	4089383a 	mul	r4,r8,r2
   8a1b0:	8a3fffcc 	andi	r8,r17,65535
   8a1b4:	4710b03a 	or	r8,r8,fp
   8a1b8:	d9800117 	ldw	r6,4(sp)
   8a1bc:	4100042e 	bgeu	r8,r4,8a1d0 <__umoddi3+0x394>
   8a1c0:	4551883a 	add	r8,r8,r21
   8a1c4:	10bfffc4 	addi	r2,r2,-1
   8a1c8:	45405a2e 	bgeu	r8,r21,8a334 <__umoddi3+0x4f8>
   8a1cc:	100b883a 	mov	r5,r2
   8a1d0:	300c943a 	slli	r6,r6,16
   8a1d4:	91ffffcc 	andi	r7,r18,65535
   8a1d8:	9004d43a 	srli	r2,r18,16
   8a1dc:	314cb03a 	or	r6,r6,r5
   8a1e0:	317fffcc 	andi	r5,r6,65535
   8a1e4:	300cd43a 	srli	r6,r6,16
   8a1e8:	29d3383a 	mul	r9,r5,r7
   8a1ec:	288b383a 	mul	r5,r5,r2
   8a1f0:	31cf383a 	mul	r7,r6,r7
   8a1f4:	4806d43a 	srli	r3,r9,16
   8a1f8:	4111c83a 	sub	r8,r8,r4
   8a1fc:	29cb883a 	add	r5,r5,r7
   8a200:	194b883a 	add	r5,r3,r5
   8a204:	3085383a 	mul	r2,r6,r2
   8a208:	29c0022e 	bgeu	r5,r7,8a214 <__umoddi3+0x3d8>
   8a20c:	00c00074 	movhi	r3,1
   8a210:	10c5883a 	add	r2,r2,r3
   8a214:	2808d43a 	srli	r4,r5,16
   8a218:	280a943a 	slli	r5,r5,16
   8a21c:	4a7fffcc 	andi	r9,r9,65535
   8a220:	2085883a 	add	r2,r4,r2
   8a224:	2a4b883a 	add	r5,r5,r9
   8a228:	40803636 	bltu	r8,r2,8a304 <__umoddi3+0x4c8>
   8a22c:	40804d26 	beq	r8,r2,8a364 <__umoddi3+0x528>
   8a230:	4089c83a 	sub	r4,r8,r2
   8a234:	280f883a 	mov	r7,r5
   8a238:	81cfc83a 	sub	r7,r16,r7
   8a23c:	81c7803a 	cmpltu	r3,r16,r7
   8a240:	20c7c83a 	sub	r3,r4,r3
   8a244:	1cc4983a 	sll	r2,r3,r19
   8a248:	3d0ed83a 	srl	r7,r7,r20
   8a24c:	1d06d83a 	srl	r3,r3,r20
   8a250:	11c4b03a 	or	r2,r2,r7
   8a254:	003f9306 	br	8a0a4 <__umoddi3+0x268>
   8a258:	9ca6983a 	sll	r19,r19,r18
   8a25c:	88e8d83a 	srl	r20,r17,r3
   8a260:	80c4d83a 	srl	r2,r16,r3
   8a264:	982cd43a 	srli	r22,r19,16
   8a268:	8ca2983a 	sll	r17,r17,r18
   8a26c:	a009883a 	mov	r4,r20
   8a270:	b00b883a 	mov	r5,r22
   8a274:	1478b03a 	or	fp,r2,r17
   8a278:	008a4d00 	call	8a4d0 <__umodsi3>
   8a27c:	a009883a 	mov	r4,r20
   8a280:	b00b883a 	mov	r5,r22
   8a284:	1023883a 	mov	r17,r2
   8a288:	008a46c0 	call	8a46c <__udivsi3>
   8a28c:	9d7fffcc 	andi	r21,r19,65535
   8a290:	880a943a 	slli	r5,r17,16
   8a294:	e008d43a 	srli	r4,fp,16
   8a298:	a885383a 	mul	r2,r21,r2
   8a29c:	84a8983a 	sll	r20,r16,r18
   8a2a0:	2148b03a 	or	r4,r4,r5
   8a2a4:	2080042e 	bgeu	r4,r2,8a2b8 <__umoddi3+0x47c>
   8a2a8:	24c9883a 	add	r4,r4,r19
   8a2ac:	24c00236 	bltu	r4,r19,8a2b8 <__umoddi3+0x47c>
   8a2b0:	2080012e 	bgeu	r4,r2,8a2b8 <__umoddi3+0x47c>
   8a2b4:	24c9883a 	add	r4,r4,r19
   8a2b8:	20a3c83a 	sub	r17,r4,r2
   8a2bc:	b00b883a 	mov	r5,r22
   8a2c0:	8809883a 	mov	r4,r17
   8a2c4:	008a4d00 	call	8a4d0 <__umodsi3>
   8a2c8:	102f883a 	mov	r23,r2
   8a2cc:	8809883a 	mov	r4,r17
   8a2d0:	b00b883a 	mov	r5,r22
   8a2d4:	008a46c0 	call	8a46c <__udivsi3>
   8a2d8:	b82e943a 	slli	r23,r23,16
   8a2dc:	a885383a 	mul	r2,r21,r2
   8a2e0:	e13fffcc 	andi	r4,fp,65535
   8a2e4:	25c8b03a 	or	r4,r4,r23
   8a2e8:	2080042e 	bgeu	r4,r2,8a2fc <__umoddi3+0x4c0>
   8a2ec:	24c9883a 	add	r4,r4,r19
   8a2f0:	24c00236 	bltu	r4,r19,8a2fc <__umoddi3+0x4c0>
   8a2f4:	2080012e 	bgeu	r4,r2,8a2fc <__umoddi3+0x4c0>
   8a2f8:	24c9883a 	add	r4,r4,r19
   8a2fc:	20a3c83a 	sub	r17,r4,r2
   8a300:	003f4806 	br	8a024 <__umoddi3+0x1e8>
   8a304:	2c8fc83a 	sub	r7,r5,r18
   8a308:	1545c83a 	sub	r2,r2,r21
   8a30c:	29cb803a 	cmpltu	r5,r5,r7
   8a310:	1145c83a 	sub	r2,r2,r5
   8a314:	4089c83a 	sub	r4,r8,r2
   8a318:	003fc706 	br	8a238 <__umoddi3+0x3fc>
   8a31c:	01000604 	movi	r4,24
   8a320:	003f1806 	br	89f84 <__umoddi3+0x148>
   8a324:	00800604 	movi	r2,24
   8a328:	003f3206 	br	89ff4 <__umoddi3+0x1b8>
   8a32c:	01000604 	movi	r4,24
   8a330:	003ed906 	br	89e98 <__umoddi3+0x5c>
   8a334:	413fa52e 	bgeu	r8,r4,8a1cc <__umoddi3+0x390>
   8a338:	297fff84 	addi	r5,r5,-2
   8a33c:	4551883a 	add	r8,r8,r21
   8a340:	003fa306 	br	8a1d0 <__umoddi3+0x394>
   8a344:	15ff8b2e 	bgeu	r2,r23,8a174 <__umoddi3+0x338>
   8a348:	31bfff84 	addi	r6,r6,-2
   8a34c:	1545883a 	add	r2,r2,r21
   8a350:	003f8906 	br	8a178 <__umoddi3+0x33c>
   8a354:	24c9883a 	add	r4,r4,r19
   8a358:	003eee06 	br	89f14 <__umoddi3+0xd8>
   8a35c:	8005883a 	mov	r2,r16
   8a360:	003f1706 	br	89fc0 <__umoddi3+0x184>
   8a364:	817fe736 	bltu	r16,r5,8a304 <__umoddi3+0x4c8>
   8a368:	280f883a 	mov	r7,r5
   8a36c:	0009883a 	mov	r4,zero
   8a370:	003fb106 	br	8a238 <__umoddi3+0x3fc>

0008a374 <__divsi3>:
   8a374:	20001b16 	blt	r4,zero,8a3e4 <__divsi3+0x70>
   8a378:	000f883a 	mov	r7,zero
   8a37c:	28001616 	blt	r5,zero,8a3d8 <__divsi3+0x64>
   8a380:	200d883a 	mov	r6,r4
   8a384:	29001a2e 	bgeu	r5,r4,8a3f0 <__divsi3+0x7c>
   8a388:	00800804 	movi	r2,32
   8a38c:	00c00044 	movi	r3,1
   8a390:	00000106 	br	8a398 <__divsi3+0x24>
   8a394:	10000d26 	beq	r2,zero,8a3cc <__divsi3+0x58>
   8a398:	294b883a 	add	r5,r5,r5
   8a39c:	10bfffc4 	addi	r2,r2,-1
   8a3a0:	18c7883a 	add	r3,r3,r3
   8a3a4:	293ffb36 	bltu	r5,r4,8a394 <__divsi3+0x20>
   8a3a8:	0005883a 	mov	r2,zero
   8a3ac:	18000726 	beq	r3,zero,8a3cc <__divsi3+0x58>
   8a3b0:	0005883a 	mov	r2,zero
   8a3b4:	31400236 	bltu	r6,r5,8a3c0 <__divsi3+0x4c>
   8a3b8:	314dc83a 	sub	r6,r6,r5
   8a3bc:	10c4b03a 	or	r2,r2,r3
   8a3c0:	1806d07a 	srli	r3,r3,1
   8a3c4:	280ad07a 	srli	r5,r5,1
   8a3c8:	183ffa1e 	bne	r3,zero,8a3b4 <__divsi3+0x40>
   8a3cc:	38000126 	beq	r7,zero,8a3d4 <__divsi3+0x60>
   8a3d0:	0085c83a 	sub	r2,zero,r2
   8a3d4:	f800283a 	ret
   8a3d8:	014bc83a 	sub	r5,zero,r5
   8a3dc:	39c0005c 	xori	r7,r7,1
   8a3e0:	003fe706 	br	8a380 <__divsi3+0xc>
   8a3e4:	0109c83a 	sub	r4,zero,r4
   8a3e8:	01c00044 	movi	r7,1
   8a3ec:	003fe306 	br	8a37c <__divsi3+0x8>
   8a3f0:	00c00044 	movi	r3,1
   8a3f4:	003fee06 	br	8a3b0 <__divsi3+0x3c>

0008a3f8 <__modsi3>:
   8a3f8:	20001716 	blt	r4,zero,8a458 <__modsi3+0x60>
   8a3fc:	000f883a 	mov	r7,zero
   8a400:	2005883a 	mov	r2,r4
   8a404:	28001216 	blt	r5,zero,8a450 <__modsi3+0x58>
   8a408:	2900162e 	bgeu	r5,r4,8a464 <__modsi3+0x6c>
   8a40c:	01800804 	movi	r6,32
   8a410:	00c00044 	movi	r3,1
   8a414:	00000106 	br	8a41c <__modsi3+0x24>
   8a418:	30000a26 	beq	r6,zero,8a444 <__modsi3+0x4c>
   8a41c:	294b883a 	add	r5,r5,r5
   8a420:	31bfffc4 	addi	r6,r6,-1
   8a424:	18c7883a 	add	r3,r3,r3
   8a428:	293ffb36 	bltu	r5,r4,8a418 <__modsi3+0x20>
   8a42c:	18000526 	beq	r3,zero,8a444 <__modsi3+0x4c>
   8a430:	1806d07a 	srli	r3,r3,1
   8a434:	11400136 	bltu	r2,r5,8a43c <__modsi3+0x44>
   8a438:	1145c83a 	sub	r2,r2,r5
   8a43c:	280ad07a 	srli	r5,r5,1
   8a440:	183ffb1e 	bne	r3,zero,8a430 <__modsi3+0x38>
   8a444:	38000126 	beq	r7,zero,8a44c <__modsi3+0x54>
   8a448:	0085c83a 	sub	r2,zero,r2
   8a44c:	f800283a 	ret
   8a450:	014bc83a 	sub	r5,zero,r5
   8a454:	003fec06 	br	8a408 <__modsi3+0x10>
   8a458:	0109c83a 	sub	r4,zero,r4
   8a45c:	01c00044 	movi	r7,1
   8a460:	003fe706 	br	8a400 <__modsi3+0x8>
   8a464:	00c00044 	movi	r3,1
   8a468:	003ff106 	br	8a430 <__modsi3+0x38>

0008a46c <__udivsi3>:
   8a46c:	200d883a 	mov	r6,r4
   8a470:	2900152e 	bgeu	r5,r4,8a4c8 <__udivsi3+0x5c>
   8a474:	28001416 	blt	r5,zero,8a4c8 <__udivsi3+0x5c>
   8a478:	00800804 	movi	r2,32
   8a47c:	00c00044 	movi	r3,1
   8a480:	00000206 	br	8a48c <__udivsi3+0x20>
   8a484:	10000e26 	beq	r2,zero,8a4c0 <__udivsi3+0x54>
   8a488:	28000516 	blt	r5,zero,8a4a0 <__udivsi3+0x34>
   8a48c:	294b883a 	add	r5,r5,r5
   8a490:	10bfffc4 	addi	r2,r2,-1
   8a494:	18c7883a 	add	r3,r3,r3
   8a498:	293ffa36 	bltu	r5,r4,8a484 <__udivsi3+0x18>
   8a49c:	18000826 	beq	r3,zero,8a4c0 <__udivsi3+0x54>
   8a4a0:	0005883a 	mov	r2,zero
   8a4a4:	31400236 	bltu	r6,r5,8a4b0 <__udivsi3+0x44>
   8a4a8:	314dc83a 	sub	r6,r6,r5
   8a4ac:	10c4b03a 	or	r2,r2,r3
   8a4b0:	1806d07a 	srli	r3,r3,1
   8a4b4:	280ad07a 	srli	r5,r5,1
   8a4b8:	183ffa1e 	bne	r3,zero,8a4a4 <__udivsi3+0x38>
   8a4bc:	f800283a 	ret
   8a4c0:	0005883a 	mov	r2,zero
   8a4c4:	f800283a 	ret
   8a4c8:	00c00044 	movi	r3,1
   8a4cc:	003ff406 	br	8a4a0 <__udivsi3+0x34>

0008a4d0 <__umodsi3>:
   8a4d0:	2005883a 	mov	r2,r4
   8a4d4:	2900122e 	bgeu	r5,r4,8a520 <__umodsi3+0x50>
   8a4d8:	28001116 	blt	r5,zero,8a520 <__umodsi3+0x50>
   8a4dc:	01800804 	movi	r6,32
   8a4e0:	00c00044 	movi	r3,1
   8a4e4:	00000206 	br	8a4f0 <__umodsi3+0x20>
   8a4e8:	30000c26 	beq	r6,zero,8a51c <__umodsi3+0x4c>
   8a4ec:	28000516 	blt	r5,zero,8a504 <__umodsi3+0x34>
   8a4f0:	294b883a 	add	r5,r5,r5
   8a4f4:	31bfffc4 	addi	r6,r6,-1
   8a4f8:	18c7883a 	add	r3,r3,r3
   8a4fc:	293ffa36 	bltu	r5,r4,8a4e8 <__umodsi3+0x18>
   8a500:	18000626 	beq	r3,zero,8a51c <__umodsi3+0x4c>
   8a504:	1806d07a 	srli	r3,r3,1
   8a508:	11400136 	bltu	r2,r5,8a510 <__umodsi3+0x40>
   8a50c:	1145c83a 	sub	r2,r2,r5
   8a510:	280ad07a 	srli	r5,r5,1
   8a514:	183ffb1e 	bne	r3,zero,8a504 <__umodsi3+0x34>
   8a518:	f800283a 	ret
   8a51c:	f800283a 	ret
   8a520:	00c00044 	movi	r3,1
   8a524:	003ff706 	br	8a504 <__umodsi3+0x34>

0008a528 <__adddf3>:
   8a528:	02c00434 	movhi	r11,16
   8a52c:	5affffc4 	addi	r11,r11,-1
   8a530:	2806d7fa 	srli	r3,r5,31
   8a534:	2ad4703a 	and	r10,r5,r11
   8a538:	3ad2703a 	and	r9,r7,r11
   8a53c:	3804d53a 	srli	r2,r7,20
   8a540:	3018d77a 	srli	r12,r6,29
   8a544:	280ad53a 	srli	r5,r5,20
   8a548:	501490fa 	slli	r10,r10,3
   8a54c:	2010d77a 	srli	r8,r4,29
   8a550:	481290fa 	slli	r9,r9,3
   8a554:	380ed7fa 	srli	r7,r7,31
   8a558:	defffb04 	addi	sp,sp,-20
   8a55c:	dc800215 	stw	r18,8(sp)
   8a560:	dc400115 	stw	r17,4(sp)
   8a564:	dc000015 	stw	r16,0(sp)
   8a568:	dfc00415 	stw	ra,16(sp)
   8a56c:	dcc00315 	stw	r19,12(sp)
   8a570:	1c803fcc 	andi	r18,r3,255
   8a574:	2c01ffcc 	andi	r16,r5,2047
   8a578:	5210b03a 	or	r8,r10,r8
   8a57c:	202290fa 	slli	r17,r4,3
   8a580:	1081ffcc 	andi	r2,r2,2047
   8a584:	4b12b03a 	or	r9,r9,r12
   8a588:	300c90fa 	slli	r6,r6,3
   8a58c:	91c07526 	beq	r18,r7,8a764 <__adddf3+0x23c>
   8a590:	8087c83a 	sub	r3,r16,r2
   8a594:	00c0ab0e 	bge	zero,r3,8a844 <__adddf3+0x31c>
   8a598:	10002a1e 	bne	r2,zero,8a644 <__adddf3+0x11c>
   8a59c:	4984b03a 	or	r2,r9,r6
   8a5a0:	1000961e 	bne	r2,zero,8a7fc <__adddf3+0x2d4>
   8a5a4:	888001cc 	andi	r2,r17,7
   8a5a8:	10000726 	beq	r2,zero,8a5c8 <__adddf3+0xa0>
   8a5ac:	888003cc 	andi	r2,r17,15
   8a5b0:	00c00104 	movi	r3,4
   8a5b4:	10c00426 	beq	r2,r3,8a5c8 <__adddf3+0xa0>
   8a5b8:	88c7883a 	add	r3,r17,r3
   8a5bc:	1c63803a 	cmpltu	r17,r3,r17
   8a5c0:	4451883a 	add	r8,r8,r17
   8a5c4:	1823883a 	mov	r17,r3
   8a5c8:	4080202c 	andhi	r2,r8,128
   8a5cc:	10005926 	beq	r2,zero,8a734 <__adddf3+0x20c>
   8a5d0:	84000044 	addi	r16,r16,1
   8a5d4:	0081ffc4 	movi	r2,2047
   8a5d8:	8080ba26 	beq	r16,r2,8a8c4 <__adddf3+0x39c>
   8a5dc:	00bfe034 	movhi	r2,65408
   8a5e0:	10bfffc4 	addi	r2,r2,-1
   8a5e4:	4090703a 	and	r8,r8,r2
   8a5e8:	4004977a 	slli	r2,r8,29
   8a5ec:	4010927a 	slli	r8,r8,9
   8a5f0:	8822d0fa 	srli	r17,r17,3
   8a5f4:	8401ffcc 	andi	r16,r16,2047
   8a5f8:	4010d33a 	srli	r8,r8,12
   8a5fc:	9007883a 	mov	r3,r18
   8a600:	1444b03a 	or	r2,r2,r17
   8a604:	8401ffcc 	andi	r16,r16,2047
   8a608:	8020953a 	slli	r16,r16,20
   8a60c:	18c03fcc 	andi	r3,r3,255
   8a610:	01000434 	movhi	r4,16
   8a614:	213fffc4 	addi	r4,r4,-1
   8a618:	180697fa 	slli	r3,r3,31
   8a61c:	4110703a 	and	r8,r8,r4
   8a620:	4410b03a 	or	r8,r8,r16
   8a624:	40c6b03a 	or	r3,r8,r3
   8a628:	dfc00417 	ldw	ra,16(sp)
   8a62c:	dcc00317 	ldw	r19,12(sp)
   8a630:	dc800217 	ldw	r18,8(sp)
   8a634:	dc400117 	ldw	r17,4(sp)
   8a638:	dc000017 	ldw	r16,0(sp)
   8a63c:	dec00504 	addi	sp,sp,20
   8a640:	f800283a 	ret
   8a644:	0081ffc4 	movi	r2,2047
   8a648:	80bfd626 	beq	r16,r2,8a5a4 <__adddf3+0x7c>
   8a64c:	4a402034 	orhi	r9,r9,128
   8a650:	00800e04 	movi	r2,56
   8a654:	10c09f16 	blt	r2,r3,8a8d4 <__adddf3+0x3ac>
   8a658:	008007c4 	movi	r2,31
   8a65c:	10c0c216 	blt	r2,r3,8a968 <__adddf3+0x440>
   8a660:	00800804 	movi	r2,32
   8a664:	10c5c83a 	sub	r2,r2,r3
   8a668:	488a983a 	sll	r5,r9,r2
   8a66c:	30c8d83a 	srl	r4,r6,r3
   8a670:	3084983a 	sll	r2,r6,r2
   8a674:	48c6d83a 	srl	r3,r9,r3
   8a678:	290cb03a 	or	r6,r5,r4
   8a67c:	1004c03a 	cmpne	r2,r2,zero
   8a680:	308cb03a 	or	r6,r6,r2
   8a684:	898dc83a 	sub	r6,r17,r6
   8a688:	89a3803a 	cmpltu	r17,r17,r6
   8a68c:	40d1c83a 	sub	r8,r8,r3
   8a690:	4451c83a 	sub	r8,r8,r17
   8a694:	3023883a 	mov	r17,r6
   8a698:	4080202c 	andhi	r2,r8,128
   8a69c:	10002326 	beq	r2,zero,8a72c <__adddf3+0x204>
   8a6a0:	04c02034 	movhi	r19,128
   8a6a4:	9cffffc4 	addi	r19,r19,-1
   8a6a8:	44e6703a 	and	r19,r8,r19
   8a6ac:	98007626 	beq	r19,zero,8a888 <__adddf3+0x360>
   8a6b0:	9809883a 	mov	r4,r19
   8a6b4:	008cb2c0 	call	8cb2c <__clzsi2>
   8a6b8:	10fffe04 	addi	r3,r2,-8
   8a6bc:	010007c4 	movi	r4,31
   8a6c0:	20c07716 	blt	r4,r3,8a8a0 <__adddf3+0x378>
   8a6c4:	00800804 	movi	r2,32
   8a6c8:	10c5c83a 	sub	r2,r2,r3
   8a6cc:	8884d83a 	srl	r2,r17,r2
   8a6d0:	98d0983a 	sll	r8,r19,r3
   8a6d4:	88e2983a 	sll	r17,r17,r3
   8a6d8:	1204b03a 	or	r2,r2,r8
   8a6dc:	1c007416 	blt	r3,r16,8a8b0 <__adddf3+0x388>
   8a6e0:	1c21c83a 	sub	r16,r3,r16
   8a6e4:	82000044 	addi	r8,r16,1
   8a6e8:	00c007c4 	movi	r3,31
   8a6ec:	1a009116 	blt	r3,r8,8a934 <__adddf3+0x40c>
   8a6f0:	00c00804 	movi	r3,32
   8a6f4:	1a07c83a 	sub	r3,r3,r8
   8a6f8:	8a08d83a 	srl	r4,r17,r8
   8a6fc:	88e2983a 	sll	r17,r17,r3
   8a700:	10c6983a 	sll	r3,r2,r3
   8a704:	1210d83a 	srl	r8,r2,r8
   8a708:	8804c03a 	cmpne	r2,r17,zero
   8a70c:	1906b03a 	or	r3,r3,r4
   8a710:	18a2b03a 	or	r17,r3,r2
   8a714:	0021883a 	mov	r16,zero
   8a718:	003fa206 	br	8a5a4 <__adddf3+0x7c>
   8a71c:	1890b03a 	or	r8,r3,r2
   8a720:	40017d26 	beq	r8,zero,8ad18 <__adddf3+0x7f0>
   8a724:	1011883a 	mov	r8,r2
   8a728:	1823883a 	mov	r17,r3
   8a72c:	888001cc 	andi	r2,r17,7
   8a730:	103f9e1e 	bne	r2,zero,8a5ac <__adddf3+0x84>
   8a734:	4004977a 	slli	r2,r8,29
   8a738:	8822d0fa 	srli	r17,r17,3
   8a73c:	4010d0fa 	srli	r8,r8,3
   8a740:	9007883a 	mov	r3,r18
   8a744:	1444b03a 	or	r2,r2,r17
   8a748:	0101ffc4 	movi	r4,2047
   8a74c:	81002426 	beq	r16,r4,8a7e0 <__adddf3+0x2b8>
   8a750:	8120703a 	and	r16,r16,r4
   8a754:	01000434 	movhi	r4,16
   8a758:	213fffc4 	addi	r4,r4,-1
   8a75c:	4110703a 	and	r8,r8,r4
   8a760:	003fa806 	br	8a604 <__adddf3+0xdc>
   8a764:	8089c83a 	sub	r4,r16,r2
   8a768:	01005e0e 	bge	zero,r4,8a8e4 <__adddf3+0x3bc>
   8a76c:	10002b26 	beq	r2,zero,8a81c <__adddf3+0x2f4>
   8a770:	0081ffc4 	movi	r2,2047
   8a774:	80bf8b26 	beq	r16,r2,8a5a4 <__adddf3+0x7c>
   8a778:	4a402034 	orhi	r9,r9,128
   8a77c:	00800e04 	movi	r2,56
   8a780:	1100a40e 	bge	r2,r4,8aa14 <__adddf3+0x4ec>
   8a784:	498cb03a 	or	r6,r9,r6
   8a788:	300ac03a 	cmpne	r5,r6,zero
   8a78c:	0013883a 	mov	r9,zero
   8a790:	2c4b883a 	add	r5,r5,r17
   8a794:	2c63803a 	cmpltu	r17,r5,r17
   8a798:	4a11883a 	add	r8,r9,r8
   8a79c:	8a11883a 	add	r8,r17,r8
   8a7a0:	2823883a 	mov	r17,r5
   8a7a4:	4080202c 	andhi	r2,r8,128
   8a7a8:	103fe026 	beq	r2,zero,8a72c <__adddf3+0x204>
   8a7ac:	84000044 	addi	r16,r16,1
   8a7b0:	0081ffc4 	movi	r2,2047
   8a7b4:	8080d226 	beq	r16,r2,8ab00 <__adddf3+0x5d8>
   8a7b8:	00bfe034 	movhi	r2,65408
   8a7bc:	10bfffc4 	addi	r2,r2,-1
   8a7c0:	4090703a 	and	r8,r8,r2
   8a7c4:	880ad07a 	srli	r5,r17,1
   8a7c8:	400897fa 	slli	r4,r8,31
   8a7cc:	88c0004c 	andi	r3,r17,1
   8a7d0:	28e2b03a 	or	r17,r5,r3
   8a7d4:	4010d07a 	srli	r8,r8,1
   8a7d8:	2462b03a 	or	r17,r4,r17
   8a7dc:	003f7106 	br	8a5a4 <__adddf3+0x7c>
   8a7e0:	4088b03a 	or	r4,r8,r2
   8a7e4:	20014526 	beq	r4,zero,8acfc <__adddf3+0x7d4>
   8a7e8:	01000434 	movhi	r4,16
   8a7ec:	42000234 	orhi	r8,r8,8
   8a7f0:	213fffc4 	addi	r4,r4,-1
   8a7f4:	4110703a 	and	r8,r8,r4
   8a7f8:	003f8206 	br	8a604 <__adddf3+0xdc>
   8a7fc:	18ffffc4 	addi	r3,r3,-1
   8a800:	1800491e 	bne	r3,zero,8a928 <__adddf3+0x400>
   8a804:	898bc83a 	sub	r5,r17,r6
   8a808:	8963803a 	cmpltu	r17,r17,r5
   8a80c:	4251c83a 	sub	r8,r8,r9
   8a810:	4451c83a 	sub	r8,r8,r17
   8a814:	2823883a 	mov	r17,r5
   8a818:	003f9f06 	br	8a698 <__adddf3+0x170>
   8a81c:	4984b03a 	or	r2,r9,r6
   8a820:	103f6026 	beq	r2,zero,8a5a4 <__adddf3+0x7c>
   8a824:	213fffc4 	addi	r4,r4,-1
   8a828:	2000931e 	bne	r4,zero,8aa78 <__adddf3+0x550>
   8a82c:	898d883a 	add	r6,r17,r6
   8a830:	3463803a 	cmpltu	r17,r6,r17
   8a834:	4251883a 	add	r8,r8,r9
   8a838:	8a11883a 	add	r8,r17,r8
   8a83c:	3023883a 	mov	r17,r6
   8a840:	003fd806 	br	8a7a4 <__adddf3+0x27c>
   8a844:	1800541e 	bne	r3,zero,8a998 <__adddf3+0x470>
   8a848:	80800044 	addi	r2,r16,1
   8a84c:	1081ffcc 	andi	r2,r2,2047
   8a850:	00c00044 	movi	r3,1
   8a854:	1880a00e 	bge	r3,r2,8aad8 <__adddf3+0x5b0>
   8a858:	8989c83a 	sub	r4,r17,r6
   8a85c:	8905803a 	cmpltu	r2,r17,r4
   8a860:	4267c83a 	sub	r19,r8,r9
   8a864:	98a7c83a 	sub	r19,r19,r2
   8a868:	9880202c 	andhi	r2,r19,128
   8a86c:	10006326 	beq	r2,zero,8a9fc <__adddf3+0x4d4>
   8a870:	3463c83a 	sub	r17,r6,r17
   8a874:	4a07c83a 	sub	r3,r9,r8
   8a878:	344d803a 	cmpltu	r6,r6,r17
   8a87c:	19a7c83a 	sub	r19,r3,r6
   8a880:	3825883a 	mov	r18,r7
   8a884:	983f8a1e 	bne	r19,zero,8a6b0 <__adddf3+0x188>
   8a888:	8809883a 	mov	r4,r17
   8a88c:	008cb2c0 	call	8cb2c <__clzsi2>
   8a890:	10800804 	addi	r2,r2,32
   8a894:	10fffe04 	addi	r3,r2,-8
   8a898:	010007c4 	movi	r4,31
   8a89c:	20ff890e 	bge	r4,r3,8a6c4 <__adddf3+0x19c>
   8a8a0:	10bff604 	addi	r2,r2,-40
   8a8a4:	8884983a 	sll	r2,r17,r2
   8a8a8:	0023883a 	mov	r17,zero
   8a8ac:	1c3f8c0e 	bge	r3,r16,8a6e0 <__adddf3+0x1b8>
   8a8b0:	023fe034 	movhi	r8,65408
   8a8b4:	423fffc4 	addi	r8,r8,-1
   8a8b8:	80e1c83a 	sub	r16,r16,r3
   8a8bc:	1210703a 	and	r8,r2,r8
   8a8c0:	003f3806 	br	8a5a4 <__adddf3+0x7c>
   8a8c4:	9007883a 	mov	r3,r18
   8a8c8:	0011883a 	mov	r8,zero
   8a8cc:	0005883a 	mov	r2,zero
   8a8d0:	003f4c06 	br	8a604 <__adddf3+0xdc>
   8a8d4:	498cb03a 	or	r6,r9,r6
   8a8d8:	300cc03a 	cmpne	r6,r6,zero
   8a8dc:	0007883a 	mov	r3,zero
   8a8e0:	003f6806 	br	8a684 <__adddf3+0x15c>
   8a8e4:	20009c1e 	bne	r4,zero,8ab58 <__adddf3+0x630>
   8a8e8:	80800044 	addi	r2,r16,1
   8a8ec:	1141ffcc 	andi	r5,r2,2047
   8a8f0:	01000044 	movi	r4,1
   8a8f4:	2140670e 	bge	r4,r5,8aa94 <__adddf3+0x56c>
   8a8f8:	0101ffc4 	movi	r4,2047
   8a8fc:	11007f26 	beq	r2,r4,8aafc <__adddf3+0x5d4>
   8a900:	898d883a 	add	r6,r17,r6
   8a904:	4247883a 	add	r3,r8,r9
   8a908:	3451803a 	cmpltu	r8,r6,r17
   8a90c:	40d1883a 	add	r8,r8,r3
   8a910:	402297fa 	slli	r17,r8,31
   8a914:	300cd07a 	srli	r6,r6,1
   8a918:	4010d07a 	srli	r8,r8,1
   8a91c:	1021883a 	mov	r16,r2
   8a920:	89a2b03a 	or	r17,r17,r6
   8a924:	003f1f06 	br	8a5a4 <__adddf3+0x7c>
   8a928:	0081ffc4 	movi	r2,2047
   8a92c:	80bf481e 	bne	r16,r2,8a650 <__adddf3+0x128>
   8a930:	003f1c06 	br	8a5a4 <__adddf3+0x7c>
   8a934:	843ff844 	addi	r16,r16,-31
   8a938:	01000804 	movi	r4,32
   8a93c:	1406d83a 	srl	r3,r2,r16
   8a940:	41005026 	beq	r8,r4,8aa84 <__adddf3+0x55c>
   8a944:	01001004 	movi	r4,64
   8a948:	2211c83a 	sub	r8,r4,r8
   8a94c:	1204983a 	sll	r2,r2,r8
   8a950:	88a2b03a 	or	r17,r17,r2
   8a954:	8822c03a 	cmpne	r17,r17,zero
   8a958:	1c62b03a 	or	r17,r3,r17
   8a95c:	0011883a 	mov	r8,zero
   8a960:	0021883a 	mov	r16,zero
   8a964:	003f7106 	br	8a72c <__adddf3+0x204>
   8a968:	193ff804 	addi	r4,r3,-32
   8a96c:	00800804 	movi	r2,32
   8a970:	4908d83a 	srl	r4,r9,r4
   8a974:	18804526 	beq	r3,r2,8aa8c <__adddf3+0x564>
   8a978:	00801004 	movi	r2,64
   8a97c:	10c5c83a 	sub	r2,r2,r3
   8a980:	4886983a 	sll	r3,r9,r2
   8a984:	198cb03a 	or	r6,r3,r6
   8a988:	300cc03a 	cmpne	r6,r6,zero
   8a98c:	218cb03a 	or	r6,r4,r6
   8a990:	0007883a 	mov	r3,zero
   8a994:	003f3b06 	br	8a684 <__adddf3+0x15c>
   8a998:	80002a26 	beq	r16,zero,8aa44 <__adddf3+0x51c>
   8a99c:	0101ffc4 	movi	r4,2047
   8a9a0:	11006826 	beq	r2,r4,8ab44 <__adddf3+0x61c>
   8a9a4:	00c7c83a 	sub	r3,zero,r3
   8a9a8:	42002034 	orhi	r8,r8,128
   8a9ac:	01000e04 	movi	r4,56
   8a9b0:	20c07c16 	blt	r4,r3,8aba4 <__adddf3+0x67c>
   8a9b4:	010007c4 	movi	r4,31
   8a9b8:	20c0da16 	blt	r4,r3,8ad24 <__adddf3+0x7fc>
   8a9bc:	01000804 	movi	r4,32
   8a9c0:	20c9c83a 	sub	r4,r4,r3
   8a9c4:	4114983a 	sll	r10,r8,r4
   8a9c8:	88cad83a 	srl	r5,r17,r3
   8a9cc:	8908983a 	sll	r4,r17,r4
   8a9d0:	40c6d83a 	srl	r3,r8,r3
   8a9d4:	5162b03a 	or	r17,r10,r5
   8a9d8:	2008c03a 	cmpne	r4,r4,zero
   8a9dc:	8922b03a 	or	r17,r17,r4
   8a9e0:	3463c83a 	sub	r17,r6,r17
   8a9e4:	48c7c83a 	sub	r3,r9,r3
   8a9e8:	344d803a 	cmpltu	r6,r6,r17
   8a9ec:	1991c83a 	sub	r8,r3,r6
   8a9f0:	1021883a 	mov	r16,r2
   8a9f4:	3825883a 	mov	r18,r7
   8a9f8:	003f2706 	br	8a698 <__adddf3+0x170>
   8a9fc:	24d0b03a 	or	r8,r4,r19
   8aa00:	40001b1e 	bne	r8,zero,8aa70 <__adddf3+0x548>
   8aa04:	0005883a 	mov	r2,zero
   8aa08:	0007883a 	mov	r3,zero
   8aa0c:	0021883a 	mov	r16,zero
   8aa10:	003f4d06 	br	8a748 <__adddf3+0x220>
   8aa14:	008007c4 	movi	r2,31
   8aa18:	11003c16 	blt	r2,r4,8ab0c <__adddf3+0x5e4>
   8aa1c:	00800804 	movi	r2,32
   8aa20:	1105c83a 	sub	r2,r2,r4
   8aa24:	488e983a 	sll	r7,r9,r2
   8aa28:	310ad83a 	srl	r5,r6,r4
   8aa2c:	3084983a 	sll	r2,r6,r2
   8aa30:	4912d83a 	srl	r9,r9,r4
   8aa34:	394ab03a 	or	r5,r7,r5
   8aa38:	1004c03a 	cmpne	r2,r2,zero
   8aa3c:	288ab03a 	or	r5,r5,r2
   8aa40:	003f5306 	br	8a790 <__adddf3+0x268>
   8aa44:	4448b03a 	or	r4,r8,r17
   8aa48:	20003e26 	beq	r4,zero,8ab44 <__adddf3+0x61c>
   8aa4c:	00c6303a 	nor	r3,zero,r3
   8aa50:	18003a1e 	bne	r3,zero,8ab3c <__adddf3+0x614>
   8aa54:	3463c83a 	sub	r17,r6,r17
   8aa58:	4a07c83a 	sub	r3,r9,r8
   8aa5c:	344d803a 	cmpltu	r6,r6,r17
   8aa60:	1991c83a 	sub	r8,r3,r6
   8aa64:	1021883a 	mov	r16,r2
   8aa68:	3825883a 	mov	r18,r7
   8aa6c:	003f0a06 	br	8a698 <__adddf3+0x170>
   8aa70:	2023883a 	mov	r17,r4
   8aa74:	003f0d06 	br	8a6ac <__adddf3+0x184>
   8aa78:	0081ffc4 	movi	r2,2047
   8aa7c:	80bf3f1e 	bne	r16,r2,8a77c <__adddf3+0x254>
   8aa80:	003ec806 	br	8a5a4 <__adddf3+0x7c>
   8aa84:	0005883a 	mov	r2,zero
   8aa88:	003fb106 	br	8a950 <__adddf3+0x428>
   8aa8c:	0007883a 	mov	r3,zero
   8aa90:	003fbc06 	br	8a984 <__adddf3+0x45c>
   8aa94:	4444b03a 	or	r2,r8,r17
   8aa98:	8000871e 	bne	r16,zero,8acb8 <__adddf3+0x790>
   8aa9c:	1000ba26 	beq	r2,zero,8ad88 <__adddf3+0x860>
   8aaa0:	4984b03a 	or	r2,r9,r6
   8aaa4:	103ebf26 	beq	r2,zero,8a5a4 <__adddf3+0x7c>
   8aaa8:	8985883a 	add	r2,r17,r6
   8aaac:	4247883a 	add	r3,r8,r9
   8aab0:	1451803a 	cmpltu	r8,r2,r17
   8aab4:	40d1883a 	add	r8,r8,r3
   8aab8:	40c0202c 	andhi	r3,r8,128
   8aabc:	1023883a 	mov	r17,r2
   8aac0:	183f1a26 	beq	r3,zero,8a72c <__adddf3+0x204>
   8aac4:	00bfe034 	movhi	r2,65408
   8aac8:	10bfffc4 	addi	r2,r2,-1
   8aacc:	2021883a 	mov	r16,r4
   8aad0:	4090703a 	and	r8,r8,r2
   8aad4:	003eb306 	br	8a5a4 <__adddf3+0x7c>
   8aad8:	4444b03a 	or	r2,r8,r17
   8aadc:	8000291e 	bne	r16,zero,8ab84 <__adddf3+0x65c>
   8aae0:	10004b1e 	bne	r2,zero,8ac10 <__adddf3+0x6e8>
   8aae4:	4990b03a 	or	r8,r9,r6
   8aae8:	40008b26 	beq	r8,zero,8ad18 <__adddf3+0x7f0>
   8aaec:	4811883a 	mov	r8,r9
   8aaf0:	3023883a 	mov	r17,r6
   8aaf4:	3825883a 	mov	r18,r7
   8aaf8:	003eaa06 	br	8a5a4 <__adddf3+0x7c>
   8aafc:	1021883a 	mov	r16,r2
   8ab00:	0011883a 	mov	r8,zero
   8ab04:	0005883a 	mov	r2,zero
   8ab08:	003f0f06 	br	8a748 <__adddf3+0x220>
   8ab0c:	217ff804 	addi	r5,r4,-32
   8ab10:	00800804 	movi	r2,32
   8ab14:	494ad83a 	srl	r5,r9,r5
   8ab18:	20807d26 	beq	r4,r2,8ad10 <__adddf3+0x7e8>
   8ab1c:	00801004 	movi	r2,64
   8ab20:	1109c83a 	sub	r4,r2,r4
   8ab24:	4912983a 	sll	r9,r9,r4
   8ab28:	498cb03a 	or	r6,r9,r6
   8ab2c:	300cc03a 	cmpne	r6,r6,zero
   8ab30:	298ab03a 	or	r5,r5,r6
   8ab34:	0013883a 	mov	r9,zero
   8ab38:	003f1506 	br	8a790 <__adddf3+0x268>
   8ab3c:	0101ffc4 	movi	r4,2047
   8ab40:	113f9a1e 	bne	r2,r4,8a9ac <__adddf3+0x484>
   8ab44:	4811883a 	mov	r8,r9
   8ab48:	3023883a 	mov	r17,r6
   8ab4c:	1021883a 	mov	r16,r2
   8ab50:	3825883a 	mov	r18,r7
   8ab54:	003e9306 	br	8a5a4 <__adddf3+0x7c>
   8ab58:	8000161e 	bne	r16,zero,8abb4 <__adddf3+0x68c>
   8ab5c:	444ab03a 	or	r5,r8,r17
   8ab60:	28005126 	beq	r5,zero,8aca8 <__adddf3+0x780>
   8ab64:	0108303a 	nor	r4,zero,r4
   8ab68:	20004d1e 	bne	r4,zero,8aca0 <__adddf3+0x778>
   8ab6c:	89a3883a 	add	r17,r17,r6
   8ab70:	4253883a 	add	r9,r8,r9
   8ab74:	898d803a 	cmpltu	r6,r17,r6
   8ab78:	3251883a 	add	r8,r6,r9
   8ab7c:	1021883a 	mov	r16,r2
   8ab80:	003f0806 	br	8a7a4 <__adddf3+0x27c>
   8ab84:	1000301e 	bne	r2,zero,8ac48 <__adddf3+0x720>
   8ab88:	4984b03a 	or	r2,r9,r6
   8ab8c:	10007126 	beq	r2,zero,8ad54 <__adddf3+0x82c>
   8ab90:	4811883a 	mov	r8,r9
   8ab94:	3023883a 	mov	r17,r6
   8ab98:	3825883a 	mov	r18,r7
   8ab9c:	0401ffc4 	movi	r16,2047
   8aba0:	003e8006 	br	8a5a4 <__adddf3+0x7c>
   8aba4:	4462b03a 	or	r17,r8,r17
   8aba8:	8822c03a 	cmpne	r17,r17,zero
   8abac:	0007883a 	mov	r3,zero
   8abb0:	003f8b06 	br	8a9e0 <__adddf3+0x4b8>
   8abb4:	0141ffc4 	movi	r5,2047
   8abb8:	11403b26 	beq	r2,r5,8aca8 <__adddf3+0x780>
   8abbc:	0109c83a 	sub	r4,zero,r4
   8abc0:	42002034 	orhi	r8,r8,128
   8abc4:	01400e04 	movi	r5,56
   8abc8:	29006716 	blt	r5,r4,8ad68 <__adddf3+0x840>
   8abcc:	014007c4 	movi	r5,31
   8abd0:	29007016 	blt	r5,r4,8ad94 <__adddf3+0x86c>
   8abd4:	01400804 	movi	r5,32
   8abd8:	290bc83a 	sub	r5,r5,r4
   8abdc:	4154983a 	sll	r10,r8,r5
   8abe0:	890ed83a 	srl	r7,r17,r4
   8abe4:	894a983a 	sll	r5,r17,r5
   8abe8:	4108d83a 	srl	r4,r8,r4
   8abec:	51e2b03a 	or	r17,r10,r7
   8abf0:	280ac03a 	cmpne	r5,r5,zero
   8abf4:	8962b03a 	or	r17,r17,r5
   8abf8:	89a3883a 	add	r17,r17,r6
   8abfc:	2253883a 	add	r9,r4,r9
   8ac00:	898d803a 	cmpltu	r6,r17,r6
   8ac04:	3251883a 	add	r8,r6,r9
   8ac08:	1021883a 	mov	r16,r2
   8ac0c:	003ee506 	br	8a7a4 <__adddf3+0x27c>
   8ac10:	4984b03a 	or	r2,r9,r6
   8ac14:	103e6326 	beq	r2,zero,8a5a4 <__adddf3+0x7c>
   8ac18:	8987c83a 	sub	r3,r17,r6
   8ac1c:	88c9803a 	cmpltu	r4,r17,r3
   8ac20:	4245c83a 	sub	r2,r8,r9
   8ac24:	1105c83a 	sub	r2,r2,r4
   8ac28:	1100202c 	andhi	r4,r2,128
   8ac2c:	203ebb26 	beq	r4,zero,8a71c <__adddf3+0x1f4>
   8ac30:	3463c83a 	sub	r17,r6,r17
   8ac34:	4a07c83a 	sub	r3,r9,r8
   8ac38:	344d803a 	cmpltu	r6,r6,r17
   8ac3c:	1991c83a 	sub	r8,r3,r6
   8ac40:	3825883a 	mov	r18,r7
   8ac44:	003e5706 	br	8a5a4 <__adddf3+0x7c>
   8ac48:	4984b03a 	or	r2,r9,r6
   8ac4c:	10002e26 	beq	r2,zero,8ad08 <__adddf3+0x7e0>
   8ac50:	4004d0fa 	srli	r2,r8,3
   8ac54:	8822d0fa 	srli	r17,r17,3
   8ac58:	4010977a 	slli	r8,r8,29
   8ac5c:	10c0022c 	andhi	r3,r2,8
   8ac60:	4462b03a 	or	r17,r8,r17
   8ac64:	18000826 	beq	r3,zero,8ac88 <__adddf3+0x760>
   8ac68:	4808d0fa 	srli	r4,r9,3
   8ac6c:	20c0022c 	andhi	r3,r4,8
   8ac70:	1800051e 	bne	r3,zero,8ac88 <__adddf3+0x760>
   8ac74:	300cd0fa 	srli	r6,r6,3
   8ac78:	4806977a 	slli	r3,r9,29
   8ac7c:	2005883a 	mov	r2,r4
   8ac80:	3825883a 	mov	r18,r7
   8ac84:	19a2b03a 	or	r17,r3,r6
   8ac88:	8810d77a 	srli	r8,r17,29
   8ac8c:	100490fa 	slli	r2,r2,3
   8ac90:	882290fa 	slli	r17,r17,3
   8ac94:	0401ffc4 	movi	r16,2047
   8ac98:	4090b03a 	or	r8,r8,r2
   8ac9c:	003e4106 	br	8a5a4 <__adddf3+0x7c>
   8aca0:	0141ffc4 	movi	r5,2047
   8aca4:	117fc71e 	bne	r2,r5,8abc4 <__adddf3+0x69c>
   8aca8:	4811883a 	mov	r8,r9
   8acac:	3023883a 	mov	r17,r6
   8acb0:	1021883a 	mov	r16,r2
   8acb4:	003e3b06 	br	8a5a4 <__adddf3+0x7c>
   8acb8:	10002f26 	beq	r2,zero,8ad78 <__adddf3+0x850>
   8acbc:	4984b03a 	or	r2,r9,r6
   8acc0:	10001126 	beq	r2,zero,8ad08 <__adddf3+0x7e0>
   8acc4:	4004d0fa 	srli	r2,r8,3
   8acc8:	8822d0fa 	srli	r17,r17,3
   8accc:	4010977a 	slli	r8,r8,29
   8acd0:	10c0022c 	andhi	r3,r2,8
   8acd4:	4462b03a 	or	r17,r8,r17
   8acd8:	183feb26 	beq	r3,zero,8ac88 <__adddf3+0x760>
   8acdc:	4808d0fa 	srli	r4,r9,3
   8ace0:	20c0022c 	andhi	r3,r4,8
   8ace4:	183fe81e 	bne	r3,zero,8ac88 <__adddf3+0x760>
   8ace8:	300cd0fa 	srli	r6,r6,3
   8acec:	4806977a 	slli	r3,r9,29
   8acf0:	2005883a 	mov	r2,r4
   8acf4:	19a2b03a 	or	r17,r3,r6
   8acf8:	003fe306 	br	8ac88 <__adddf3+0x760>
   8acfc:	0011883a 	mov	r8,zero
   8ad00:	0005883a 	mov	r2,zero
   8ad04:	003e3f06 	br	8a604 <__adddf3+0xdc>
   8ad08:	0401ffc4 	movi	r16,2047
   8ad0c:	003e2506 	br	8a5a4 <__adddf3+0x7c>
   8ad10:	0013883a 	mov	r9,zero
   8ad14:	003f8406 	br	8ab28 <__adddf3+0x600>
   8ad18:	0005883a 	mov	r2,zero
   8ad1c:	0007883a 	mov	r3,zero
   8ad20:	003e8906 	br	8a748 <__adddf3+0x220>
   8ad24:	197ff804 	addi	r5,r3,-32
   8ad28:	01000804 	movi	r4,32
   8ad2c:	414ad83a 	srl	r5,r8,r5
   8ad30:	19002426 	beq	r3,r4,8adc4 <__adddf3+0x89c>
   8ad34:	01001004 	movi	r4,64
   8ad38:	20c7c83a 	sub	r3,r4,r3
   8ad3c:	40c6983a 	sll	r3,r8,r3
   8ad40:	1c46b03a 	or	r3,r3,r17
   8ad44:	1806c03a 	cmpne	r3,r3,zero
   8ad48:	28e2b03a 	or	r17,r5,r3
   8ad4c:	0007883a 	mov	r3,zero
   8ad50:	003f2306 	br	8a9e0 <__adddf3+0x4b8>
   8ad54:	0007883a 	mov	r3,zero
   8ad58:	5811883a 	mov	r8,r11
   8ad5c:	00bfffc4 	movi	r2,-1
   8ad60:	0401ffc4 	movi	r16,2047
   8ad64:	003e7806 	br	8a748 <__adddf3+0x220>
   8ad68:	4462b03a 	or	r17,r8,r17
   8ad6c:	8822c03a 	cmpne	r17,r17,zero
   8ad70:	0009883a 	mov	r4,zero
   8ad74:	003fa006 	br	8abf8 <__adddf3+0x6d0>
   8ad78:	4811883a 	mov	r8,r9
   8ad7c:	3023883a 	mov	r17,r6
   8ad80:	0401ffc4 	movi	r16,2047
   8ad84:	003e0706 	br	8a5a4 <__adddf3+0x7c>
   8ad88:	4811883a 	mov	r8,r9
   8ad8c:	3023883a 	mov	r17,r6
   8ad90:	003e0406 	br	8a5a4 <__adddf3+0x7c>
   8ad94:	21fff804 	addi	r7,r4,-32
   8ad98:	01400804 	movi	r5,32
   8ad9c:	41ced83a 	srl	r7,r8,r7
   8ada0:	21400a26 	beq	r4,r5,8adcc <__adddf3+0x8a4>
   8ada4:	01401004 	movi	r5,64
   8ada8:	2909c83a 	sub	r4,r5,r4
   8adac:	4108983a 	sll	r4,r8,r4
   8adb0:	2448b03a 	or	r4,r4,r17
   8adb4:	2008c03a 	cmpne	r4,r4,zero
   8adb8:	3922b03a 	or	r17,r7,r4
   8adbc:	0009883a 	mov	r4,zero
   8adc0:	003f8d06 	br	8abf8 <__adddf3+0x6d0>
   8adc4:	0007883a 	mov	r3,zero
   8adc8:	003fdd06 	br	8ad40 <__adddf3+0x818>
   8adcc:	0009883a 	mov	r4,zero
   8add0:	003ff706 	br	8adb0 <__adddf3+0x888>

0008add4 <__divdf3>:
   8add4:	defff204 	addi	sp,sp,-56
   8add8:	dd400915 	stw	r21,36(sp)
   8addc:	282ad53a 	srli	r21,r5,20
   8ade0:	dd000815 	stw	r20,32(sp)
   8ade4:	2828d7fa 	srli	r20,r5,31
   8ade8:	dc000415 	stw	r16,16(sp)
   8adec:	04000434 	movhi	r16,16
   8adf0:	df000c15 	stw	fp,48(sp)
   8adf4:	843fffc4 	addi	r16,r16,-1
   8adf8:	dfc00d15 	stw	ra,52(sp)
   8adfc:	ddc00b15 	stw	r23,44(sp)
   8ae00:	dd800a15 	stw	r22,40(sp)
   8ae04:	dcc00715 	stw	r19,28(sp)
   8ae08:	dc800615 	stw	r18,24(sp)
   8ae0c:	dc400515 	stw	r17,20(sp)
   8ae10:	ad41ffcc 	andi	r21,r21,2047
   8ae14:	2c20703a 	and	r16,r5,r16
   8ae18:	a7003fcc 	andi	fp,r20,255
   8ae1c:	a8006126 	beq	r21,zero,8afa4 <__divdf3+0x1d0>
   8ae20:	0081ffc4 	movi	r2,2047
   8ae24:	2025883a 	mov	r18,r4
   8ae28:	a8803726 	beq	r21,r2,8af08 <__divdf3+0x134>
   8ae2c:	80c00434 	orhi	r3,r16,16
   8ae30:	180690fa 	slli	r3,r3,3
   8ae34:	2020d77a 	srli	r16,r4,29
   8ae38:	202490fa 	slli	r18,r4,3
   8ae3c:	ad7f0044 	addi	r21,r21,-1023
   8ae40:	80e0b03a 	or	r16,r16,r3
   8ae44:	0027883a 	mov	r19,zero
   8ae48:	0013883a 	mov	r9,zero
   8ae4c:	3808d53a 	srli	r4,r7,20
   8ae50:	382cd7fa 	srli	r22,r7,31
   8ae54:	04400434 	movhi	r17,16
   8ae58:	8c7fffc4 	addi	r17,r17,-1
   8ae5c:	2101ffcc 	andi	r4,r4,2047
   8ae60:	3011883a 	mov	r8,r6
   8ae64:	3c62703a 	and	r17,r7,r17
   8ae68:	b5c03fcc 	andi	r23,r22,255
   8ae6c:	20006c26 	beq	r4,zero,8b020 <__divdf3+0x24c>
   8ae70:	0081ffc4 	movi	r2,2047
   8ae74:	20806426 	beq	r4,r2,8b008 <__divdf3+0x234>
   8ae78:	88c00434 	orhi	r3,r17,16
   8ae7c:	180690fa 	slli	r3,r3,3
   8ae80:	3022d77a 	srli	r17,r6,29
   8ae84:	301090fa 	slli	r8,r6,3
   8ae88:	213f0044 	addi	r4,r4,-1023
   8ae8c:	88e2b03a 	or	r17,r17,r3
   8ae90:	000d883a 	mov	r6,zero
   8ae94:	a584f03a 	xor	r2,r20,r22
   8ae98:	34cab03a 	or	r5,r6,r19
   8ae9c:	1007883a 	mov	r3,r2
   8aea0:	14c03fcc 	andi	r19,r2,255
   8aea4:	008003c4 	movi	r2,15
   8aea8:	a92bc83a 	sub	r21,r21,r4
   8aeac:	11409036 	bltu	r2,r5,8b0f0 <__divdf3+0x31c>
   8aeb0:	280a90ba 	slli	r5,r5,2
   8aeb4:	00800274 	movhi	r2,9
   8aeb8:	10abb204 	addi	r2,r2,-20792
   8aebc:	288b883a 	add	r5,r5,r2
   8aec0:	28800017 	ldw	r2,0(r5)
   8aec4:	1000683a 	jmp	r2
   8aec8:	0008b0f0 	cmpltui	zero,zero,8899
   8aecc:	0008af40 	call	8af4 <__alt_mem_mm-0x7750c>
   8aed0:	0008b0e0 	cmpeqi	zero,zero,8899
   8aed4:	0008af34 	movhi	zero,8892
   8aed8:	0008b0e0 	cmpeqi	zero,zero,8899
   8aedc:	0008b0b4 	movhi	zero,8898
   8aee0:	0008b0e0 	cmpeqi	zero,zero,8899
   8aee4:	0008af34 	movhi	zero,8892
   8aee8:	0008af40 	call	8af4 <__alt_mem_mm-0x7750c>
   8aeec:	0008af40 	call	8af4 <__alt_mem_mm-0x7750c>
   8aef0:	0008b0b4 	movhi	zero,8898
   8aef4:	0008af34 	movhi	zero,8892
   8aef8:	0008af24 	muli	zero,zero,8892
   8aefc:	0008af24 	muli	zero,zero,8892
   8af00:	0008af24 	muli	zero,zero,8892
   8af04:	0008b3d4 	movui	zero,8911
   8af08:	2404b03a 	or	r2,r4,r16
   8af0c:	1000661e 	bne	r2,zero,8b0a8 <__divdf3+0x2d4>
   8af10:	04c00204 	movi	r19,8
   8af14:	0021883a 	mov	r16,zero
   8af18:	0025883a 	mov	r18,zero
   8af1c:	02400084 	movi	r9,2
   8af20:	003fca06 	br	8ae4c <__divdf3+0x78>
   8af24:	8023883a 	mov	r17,r16
   8af28:	9011883a 	mov	r8,r18
   8af2c:	e02f883a 	mov	r23,fp
   8af30:	480d883a 	mov	r6,r9
   8af34:	00800084 	movi	r2,2
   8af38:	3081311e 	bne	r6,r2,8b400 <__divdf3+0x62c>
   8af3c:	b827883a 	mov	r19,r23
   8af40:	98c0004c 	andi	r3,r19,1
   8af44:	0081ffc4 	movi	r2,2047
   8af48:	000b883a 	mov	r5,zero
   8af4c:	0025883a 	mov	r18,zero
   8af50:	1004953a 	slli	r2,r2,20
   8af54:	18c03fcc 	andi	r3,r3,255
   8af58:	04400434 	movhi	r17,16
   8af5c:	8c7fffc4 	addi	r17,r17,-1
   8af60:	180697fa 	slli	r3,r3,31
   8af64:	2c4a703a 	and	r5,r5,r17
   8af68:	288ab03a 	or	r5,r5,r2
   8af6c:	28c6b03a 	or	r3,r5,r3
   8af70:	9005883a 	mov	r2,r18
   8af74:	dfc00d17 	ldw	ra,52(sp)
   8af78:	df000c17 	ldw	fp,48(sp)
   8af7c:	ddc00b17 	ldw	r23,44(sp)
   8af80:	dd800a17 	ldw	r22,40(sp)
   8af84:	dd400917 	ldw	r21,36(sp)
   8af88:	dd000817 	ldw	r20,32(sp)
   8af8c:	dcc00717 	ldw	r19,28(sp)
   8af90:	dc800617 	ldw	r18,24(sp)
   8af94:	dc400517 	ldw	r17,20(sp)
   8af98:	dc000417 	ldw	r16,16(sp)
   8af9c:	dec00e04 	addi	sp,sp,56
   8afa0:	f800283a 	ret
   8afa4:	2404b03a 	or	r2,r4,r16
   8afa8:	2027883a 	mov	r19,r4
   8afac:	10003926 	beq	r2,zero,8b094 <__divdf3+0x2c0>
   8afb0:	80012e26 	beq	r16,zero,8b46c <__divdf3+0x698>
   8afb4:	8009883a 	mov	r4,r16
   8afb8:	d9800315 	stw	r6,12(sp)
   8afbc:	d9c00215 	stw	r7,8(sp)
   8afc0:	008cb2c0 	call	8cb2c <__clzsi2>
   8afc4:	d9800317 	ldw	r6,12(sp)
   8afc8:	d9c00217 	ldw	r7,8(sp)
   8afcc:	10fffd44 	addi	r3,r2,-11
   8afd0:	01000704 	movi	r4,28
   8afd4:	20c12116 	blt	r4,r3,8b45c <__divdf3+0x688>
   8afd8:	01000744 	movi	r4,29
   8afdc:	147ffe04 	addi	r17,r2,-8
   8afe0:	20c9c83a 	sub	r4,r4,r3
   8afe4:	8460983a 	sll	r16,r16,r17
   8afe8:	9908d83a 	srl	r4,r19,r4
   8afec:	9c64983a 	sll	r18,r19,r17
   8aff0:	2420b03a 	or	r16,r4,r16
   8aff4:	057f0084 	movi	r21,-1022
   8aff8:	a8ebc83a 	sub	r21,r21,r3
   8affc:	0027883a 	mov	r19,zero
   8b000:	0013883a 	mov	r9,zero
   8b004:	003f9106 	br	8ae4c <__divdf3+0x78>
   8b008:	3444b03a 	or	r2,r6,r17
   8b00c:	10001f1e 	bne	r2,zero,8b08c <__divdf3+0x2b8>
   8b010:	0023883a 	mov	r17,zero
   8b014:	0011883a 	mov	r8,zero
   8b018:	01800084 	movi	r6,2
   8b01c:	003f9d06 	br	8ae94 <__divdf3+0xc0>
   8b020:	3444b03a 	or	r2,r6,r17
   8b024:	10001526 	beq	r2,zero,8b07c <__divdf3+0x2a8>
   8b028:	88011b26 	beq	r17,zero,8b498 <__divdf3+0x6c4>
   8b02c:	8809883a 	mov	r4,r17
   8b030:	d9800315 	stw	r6,12(sp)
   8b034:	da400115 	stw	r9,4(sp)
   8b038:	008cb2c0 	call	8cb2c <__clzsi2>
   8b03c:	d9800317 	ldw	r6,12(sp)
   8b040:	da400117 	ldw	r9,4(sp)
   8b044:	10fffd44 	addi	r3,r2,-11
   8b048:	01000704 	movi	r4,28
   8b04c:	20c10e16 	blt	r4,r3,8b488 <__divdf3+0x6b4>
   8b050:	01000744 	movi	r4,29
   8b054:	123ffe04 	addi	r8,r2,-8
   8b058:	20c9c83a 	sub	r4,r4,r3
   8b05c:	8a22983a 	sll	r17,r17,r8
   8b060:	3108d83a 	srl	r4,r6,r4
   8b064:	3210983a 	sll	r8,r6,r8
   8b068:	2462b03a 	or	r17,r4,r17
   8b06c:	013f0084 	movi	r4,-1022
   8b070:	20c9c83a 	sub	r4,r4,r3
   8b074:	000d883a 	mov	r6,zero
   8b078:	003f8606 	br	8ae94 <__divdf3+0xc0>
   8b07c:	0023883a 	mov	r17,zero
   8b080:	0011883a 	mov	r8,zero
   8b084:	01800044 	movi	r6,1
   8b088:	003f8206 	br	8ae94 <__divdf3+0xc0>
   8b08c:	018000c4 	movi	r6,3
   8b090:	003f8006 	br	8ae94 <__divdf3+0xc0>
   8b094:	04c00104 	movi	r19,4
   8b098:	0021883a 	mov	r16,zero
   8b09c:	0025883a 	mov	r18,zero
   8b0a0:	02400044 	movi	r9,1
   8b0a4:	003f6906 	br	8ae4c <__divdf3+0x78>
   8b0a8:	04c00304 	movi	r19,12
   8b0ac:	024000c4 	movi	r9,3
   8b0b0:	003f6606 	br	8ae4c <__divdf3+0x78>
   8b0b4:	01400434 	movhi	r5,16
   8b0b8:	0007883a 	mov	r3,zero
   8b0bc:	297fffc4 	addi	r5,r5,-1
   8b0c0:	04bfffc4 	movi	r18,-1
   8b0c4:	0081ffc4 	movi	r2,2047
   8b0c8:	003fa106 	br	8af50 <__divdf3+0x17c>
   8b0cc:	00c00044 	movi	r3,1
   8b0d0:	1887c83a 	sub	r3,r3,r2
   8b0d4:	01000e04 	movi	r4,56
   8b0d8:	20c1210e 	bge	r4,r3,8b560 <__divdf3+0x78c>
   8b0dc:	98c0004c 	andi	r3,r19,1
   8b0e0:	0005883a 	mov	r2,zero
   8b0e4:	000b883a 	mov	r5,zero
   8b0e8:	0025883a 	mov	r18,zero
   8b0ec:	003f9806 	br	8af50 <__divdf3+0x17c>
   8b0f0:	8c00fd36 	bltu	r17,r16,8b4e8 <__divdf3+0x714>
   8b0f4:	8440fb26 	beq	r16,r17,8b4e4 <__divdf3+0x710>
   8b0f8:	8007883a 	mov	r3,r16
   8b0fc:	ad7fffc4 	addi	r21,r21,-1
   8b100:	0021883a 	mov	r16,zero
   8b104:	400ad63a 	srli	r5,r8,24
   8b108:	8822923a 	slli	r17,r17,8
   8b10c:	1809883a 	mov	r4,r3
   8b110:	402c923a 	slli	r22,r8,8
   8b114:	8978b03a 	or	fp,r17,r5
   8b118:	e028d43a 	srli	r20,fp,16
   8b11c:	d8c00015 	stw	r3,0(sp)
   8b120:	e5ffffcc 	andi	r23,fp,65535
   8b124:	a00b883a 	mov	r5,r20
   8b128:	008a46c0 	call	8a46c <__udivsi3>
   8b12c:	d8c00017 	ldw	r3,0(sp)
   8b130:	a00b883a 	mov	r5,r20
   8b134:	d8800315 	stw	r2,12(sp)
   8b138:	1809883a 	mov	r4,r3
   8b13c:	008a4d00 	call	8a4d0 <__umodsi3>
   8b140:	d9800317 	ldw	r6,12(sp)
   8b144:	1006943a 	slli	r3,r2,16
   8b148:	9004d43a 	srli	r2,r18,16
   8b14c:	b9a3383a 	mul	r17,r23,r6
   8b150:	10c4b03a 	or	r2,r2,r3
   8b154:	1440062e 	bgeu	r2,r17,8b170 <__divdf3+0x39c>
   8b158:	1705883a 	add	r2,r2,fp
   8b15c:	30ffffc4 	addi	r3,r6,-1
   8b160:	1700ee36 	bltu	r2,fp,8b51c <__divdf3+0x748>
   8b164:	1440ed2e 	bgeu	r2,r17,8b51c <__divdf3+0x748>
   8b168:	31bfff84 	addi	r6,r6,-2
   8b16c:	1705883a 	add	r2,r2,fp
   8b170:	1463c83a 	sub	r17,r2,r17
   8b174:	a00b883a 	mov	r5,r20
   8b178:	8809883a 	mov	r4,r17
   8b17c:	d9800315 	stw	r6,12(sp)
   8b180:	008a46c0 	call	8a46c <__udivsi3>
   8b184:	a00b883a 	mov	r5,r20
   8b188:	8809883a 	mov	r4,r17
   8b18c:	d8800215 	stw	r2,8(sp)
   8b190:	008a4d00 	call	8a4d0 <__umodsi3>
   8b194:	d9c00217 	ldw	r7,8(sp)
   8b198:	1004943a 	slli	r2,r2,16
   8b19c:	94bfffcc 	andi	r18,r18,65535
   8b1a0:	b9d1383a 	mul	r8,r23,r7
   8b1a4:	90a4b03a 	or	r18,r18,r2
   8b1a8:	d9800317 	ldw	r6,12(sp)
   8b1ac:	9200062e 	bgeu	r18,r8,8b1c8 <__divdf3+0x3f4>
   8b1b0:	9725883a 	add	r18,r18,fp
   8b1b4:	38bfffc4 	addi	r2,r7,-1
   8b1b8:	9700d636 	bltu	r18,fp,8b514 <__divdf3+0x740>
   8b1bc:	9200d52e 	bgeu	r18,r8,8b514 <__divdf3+0x740>
   8b1c0:	39ffff84 	addi	r7,r7,-2
   8b1c4:	9725883a 	add	r18,r18,fp
   8b1c8:	3004943a 	slli	r2,r6,16
   8b1cc:	b012d43a 	srli	r9,r22,16
   8b1d0:	b1bfffcc 	andi	r6,r22,65535
   8b1d4:	11e2b03a 	or	r17,r2,r7
   8b1d8:	8806d43a 	srli	r3,r17,16
   8b1dc:	893fffcc 	andi	r4,r17,65535
   8b1e0:	218b383a 	mul	r5,r4,r6
   8b1e4:	30c5383a 	mul	r2,r6,r3
   8b1e8:	2249383a 	mul	r4,r4,r9
   8b1ec:	280ed43a 	srli	r7,r5,16
   8b1f0:	9225c83a 	sub	r18,r18,r8
   8b1f4:	2089883a 	add	r4,r4,r2
   8b1f8:	3909883a 	add	r4,r7,r4
   8b1fc:	1a47383a 	mul	r3,r3,r9
   8b200:	2080022e 	bgeu	r4,r2,8b20c <__divdf3+0x438>
   8b204:	00800074 	movhi	r2,1
   8b208:	1887883a 	add	r3,r3,r2
   8b20c:	2004d43a 	srli	r2,r4,16
   8b210:	2008943a 	slli	r4,r4,16
   8b214:	297fffcc 	andi	r5,r5,65535
   8b218:	10c7883a 	add	r3,r2,r3
   8b21c:	2149883a 	add	r4,r4,r5
   8b220:	90c0a536 	bltu	r18,r3,8b4b8 <__divdf3+0x6e4>
   8b224:	90c0bf26 	beq	r18,r3,8b524 <__divdf3+0x750>
   8b228:	90c7c83a 	sub	r3,r18,r3
   8b22c:	810fc83a 	sub	r7,r16,r4
   8b230:	81e5803a 	cmpltu	r18,r16,r7
   8b234:	1ca5c83a 	sub	r18,r3,r18
   8b238:	e480c126 	beq	fp,r18,8b540 <__divdf3+0x76c>
   8b23c:	a00b883a 	mov	r5,r20
   8b240:	9009883a 	mov	r4,r18
   8b244:	d9800315 	stw	r6,12(sp)
   8b248:	d9c00215 	stw	r7,8(sp)
   8b24c:	da400115 	stw	r9,4(sp)
   8b250:	008a46c0 	call	8a46c <__udivsi3>
   8b254:	a00b883a 	mov	r5,r20
   8b258:	9009883a 	mov	r4,r18
   8b25c:	d8800015 	stw	r2,0(sp)
   8b260:	008a4d00 	call	8a4d0 <__umodsi3>
   8b264:	d9c00217 	ldw	r7,8(sp)
   8b268:	da000017 	ldw	r8,0(sp)
   8b26c:	1006943a 	slli	r3,r2,16
   8b270:	3804d43a 	srli	r2,r7,16
   8b274:	ba21383a 	mul	r16,r23,r8
   8b278:	d9800317 	ldw	r6,12(sp)
   8b27c:	10c4b03a 	or	r2,r2,r3
   8b280:	da400117 	ldw	r9,4(sp)
   8b284:	1400062e 	bgeu	r2,r16,8b2a0 <__divdf3+0x4cc>
   8b288:	1705883a 	add	r2,r2,fp
   8b28c:	40ffffc4 	addi	r3,r8,-1
   8b290:	1700ad36 	bltu	r2,fp,8b548 <__divdf3+0x774>
   8b294:	1400ac2e 	bgeu	r2,r16,8b548 <__divdf3+0x774>
   8b298:	423fff84 	addi	r8,r8,-2
   8b29c:	1705883a 	add	r2,r2,fp
   8b2a0:	1421c83a 	sub	r16,r2,r16
   8b2a4:	a00b883a 	mov	r5,r20
   8b2a8:	8009883a 	mov	r4,r16
   8b2ac:	d9800315 	stw	r6,12(sp)
   8b2b0:	d9c00215 	stw	r7,8(sp)
   8b2b4:	da000015 	stw	r8,0(sp)
   8b2b8:	da400115 	stw	r9,4(sp)
   8b2bc:	008a46c0 	call	8a46c <__udivsi3>
   8b2c0:	8009883a 	mov	r4,r16
   8b2c4:	a00b883a 	mov	r5,r20
   8b2c8:	1025883a 	mov	r18,r2
   8b2cc:	008a4d00 	call	8a4d0 <__umodsi3>
   8b2d0:	d9c00217 	ldw	r7,8(sp)
   8b2d4:	1004943a 	slli	r2,r2,16
   8b2d8:	bcaf383a 	mul	r23,r23,r18
   8b2dc:	393fffcc 	andi	r4,r7,65535
   8b2e0:	2088b03a 	or	r4,r4,r2
   8b2e4:	d9800317 	ldw	r6,12(sp)
   8b2e8:	da000017 	ldw	r8,0(sp)
   8b2ec:	da400117 	ldw	r9,4(sp)
   8b2f0:	25c0062e 	bgeu	r4,r23,8b30c <__divdf3+0x538>
   8b2f4:	2709883a 	add	r4,r4,fp
   8b2f8:	90bfffc4 	addi	r2,r18,-1
   8b2fc:	27009436 	bltu	r4,fp,8b550 <__divdf3+0x77c>
   8b300:	25c0932e 	bgeu	r4,r23,8b550 <__divdf3+0x77c>
   8b304:	94bfff84 	addi	r18,r18,-2
   8b308:	2709883a 	add	r4,r4,fp
   8b30c:	4004943a 	slli	r2,r8,16
   8b310:	25efc83a 	sub	r23,r4,r23
   8b314:	1490b03a 	or	r8,r2,r18
   8b318:	4008d43a 	srli	r4,r8,16
   8b31c:	40ffffcc 	andi	r3,r8,65535
   8b320:	30c5383a 	mul	r2,r6,r3
   8b324:	1a47383a 	mul	r3,r3,r9
   8b328:	310d383a 	mul	r6,r6,r4
   8b32c:	100ad43a 	srli	r5,r2,16
   8b330:	4913383a 	mul	r9,r9,r4
   8b334:	1987883a 	add	r3,r3,r6
   8b338:	28c7883a 	add	r3,r5,r3
   8b33c:	1980022e 	bgeu	r3,r6,8b348 <__divdf3+0x574>
   8b340:	01000074 	movhi	r4,1
   8b344:	4913883a 	add	r9,r9,r4
   8b348:	1808d43a 	srli	r4,r3,16
   8b34c:	1806943a 	slli	r3,r3,16
   8b350:	10bfffcc 	andi	r2,r2,65535
   8b354:	2253883a 	add	r9,r4,r9
   8b358:	1887883a 	add	r3,r3,r2
   8b35c:	ba403836 	bltu	r23,r9,8b440 <__divdf3+0x66c>
   8b360:	ba403626 	beq	r23,r9,8b43c <__divdf3+0x668>
   8b364:	42000054 	ori	r8,r8,1
   8b368:	a880ffc4 	addi	r2,r21,1023
   8b36c:	00bf570e 	bge	zero,r2,8b0cc <__divdf3+0x2f8>
   8b370:	40c001cc 	andi	r3,r8,7
   8b374:	18000726 	beq	r3,zero,8b394 <__divdf3+0x5c0>
   8b378:	40c003cc 	andi	r3,r8,15
   8b37c:	01000104 	movi	r4,4
   8b380:	19000426 	beq	r3,r4,8b394 <__divdf3+0x5c0>
   8b384:	4107883a 	add	r3,r8,r4
   8b388:	1a11803a 	cmpltu	r8,r3,r8
   8b38c:	8a23883a 	add	r17,r17,r8
   8b390:	1811883a 	mov	r8,r3
   8b394:	88c0402c 	andhi	r3,r17,256
   8b398:	18000426 	beq	r3,zero,8b3ac <__divdf3+0x5d8>
   8b39c:	00ffc034 	movhi	r3,65280
   8b3a0:	18ffffc4 	addi	r3,r3,-1
   8b3a4:	a8810004 	addi	r2,r21,1024
   8b3a8:	88e2703a 	and	r17,r17,r3
   8b3ac:	00c1ff84 	movi	r3,2046
   8b3b0:	18bee316 	blt	r3,r2,8af40 <__divdf3+0x16c>
   8b3b4:	8824977a 	slli	r18,r17,29
   8b3b8:	4010d0fa 	srli	r8,r8,3
   8b3bc:	8822927a 	slli	r17,r17,9
   8b3c0:	1081ffcc 	andi	r2,r2,2047
   8b3c4:	9224b03a 	or	r18,r18,r8
   8b3c8:	880ad33a 	srli	r5,r17,12
   8b3cc:	98c0004c 	andi	r3,r19,1
   8b3d0:	003edf06 	br	8af50 <__divdf3+0x17c>
   8b3d4:	8080022c 	andhi	r2,r16,8
   8b3d8:	10001226 	beq	r2,zero,8b424 <__divdf3+0x650>
   8b3dc:	8880022c 	andhi	r2,r17,8
   8b3e0:	1000101e 	bne	r2,zero,8b424 <__divdf3+0x650>
   8b3e4:	00800434 	movhi	r2,16
   8b3e8:	89400234 	orhi	r5,r17,8
   8b3ec:	10bfffc4 	addi	r2,r2,-1
   8b3f0:	b007883a 	mov	r3,r22
   8b3f4:	288a703a 	and	r5,r5,r2
   8b3f8:	4025883a 	mov	r18,r8
   8b3fc:	003f3106 	br	8b0c4 <__divdf3+0x2f0>
   8b400:	008000c4 	movi	r2,3
   8b404:	3080a626 	beq	r6,r2,8b6a0 <__divdf3+0x8cc>
   8b408:	00800044 	movi	r2,1
   8b40c:	3080521e 	bne	r6,r2,8b558 <__divdf3+0x784>
   8b410:	b807883a 	mov	r3,r23
   8b414:	0005883a 	mov	r2,zero
   8b418:	000b883a 	mov	r5,zero
   8b41c:	0025883a 	mov	r18,zero
   8b420:	003ecb06 	br	8af50 <__divdf3+0x17c>
   8b424:	00800434 	movhi	r2,16
   8b428:	81400234 	orhi	r5,r16,8
   8b42c:	10bfffc4 	addi	r2,r2,-1
   8b430:	a007883a 	mov	r3,r20
   8b434:	288a703a 	and	r5,r5,r2
   8b438:	003f2206 	br	8b0c4 <__divdf3+0x2f0>
   8b43c:	183fca26 	beq	r3,zero,8b368 <__divdf3+0x594>
   8b440:	e5ef883a 	add	r23,fp,r23
   8b444:	40bfffc4 	addi	r2,r8,-1
   8b448:	bf00392e 	bgeu	r23,fp,8b530 <__divdf3+0x75c>
   8b44c:	1011883a 	mov	r8,r2
   8b450:	ba7fc41e 	bne	r23,r9,8b364 <__divdf3+0x590>
   8b454:	b0ffc31e 	bne	r22,r3,8b364 <__divdf3+0x590>
   8b458:	003fc306 	br	8b368 <__divdf3+0x594>
   8b45c:	10bff604 	addi	r2,r2,-40
   8b460:	98a0983a 	sll	r16,r19,r2
   8b464:	0025883a 	mov	r18,zero
   8b468:	003ee206 	br	8aff4 <__divdf3+0x220>
   8b46c:	d9800315 	stw	r6,12(sp)
   8b470:	d9c00215 	stw	r7,8(sp)
   8b474:	008cb2c0 	call	8cb2c <__clzsi2>
   8b478:	10800804 	addi	r2,r2,32
   8b47c:	d9c00217 	ldw	r7,8(sp)
   8b480:	d9800317 	ldw	r6,12(sp)
   8b484:	003ed106 	br	8afcc <__divdf3+0x1f8>
   8b488:	10bff604 	addi	r2,r2,-40
   8b48c:	30a2983a 	sll	r17,r6,r2
   8b490:	0011883a 	mov	r8,zero
   8b494:	003ef506 	br	8b06c <__divdf3+0x298>
   8b498:	3009883a 	mov	r4,r6
   8b49c:	d9800315 	stw	r6,12(sp)
   8b4a0:	da400115 	stw	r9,4(sp)
   8b4a4:	008cb2c0 	call	8cb2c <__clzsi2>
   8b4a8:	10800804 	addi	r2,r2,32
   8b4ac:	da400117 	ldw	r9,4(sp)
   8b4b0:	d9800317 	ldw	r6,12(sp)
   8b4b4:	003ee306 	br	8b044 <__divdf3+0x270>
   8b4b8:	85a1883a 	add	r16,r16,r22
   8b4bc:	8585803a 	cmpltu	r2,r16,r22
   8b4c0:	1705883a 	add	r2,r2,fp
   8b4c4:	14a5883a 	add	r18,r2,r18
   8b4c8:	88bfffc4 	addi	r2,r17,-1
   8b4cc:	e4800c2e 	bgeu	fp,r18,8b500 <__divdf3+0x72c>
   8b4d0:	90c03e36 	bltu	r18,r3,8b5cc <__divdf3+0x7f8>
   8b4d4:	1c806926 	beq	r3,r18,8b67c <__divdf3+0x8a8>
   8b4d8:	90c7c83a 	sub	r3,r18,r3
   8b4dc:	1023883a 	mov	r17,r2
   8b4e0:	003f5206 	br	8b22c <__divdf3+0x458>
   8b4e4:	923f0436 	bltu	r18,r8,8b0f8 <__divdf3+0x324>
   8b4e8:	800897fa 	slli	r4,r16,31
   8b4ec:	9004d07a 	srli	r2,r18,1
   8b4f0:	8006d07a 	srli	r3,r16,1
   8b4f4:	902097fa 	slli	r16,r18,31
   8b4f8:	20a4b03a 	or	r18,r4,r2
   8b4fc:	003f0106 	br	8b104 <__divdf3+0x330>
   8b500:	e4bff51e 	bne	fp,r18,8b4d8 <__divdf3+0x704>
   8b504:	85bff22e 	bgeu	r16,r22,8b4d0 <__divdf3+0x6fc>
   8b508:	e0c7c83a 	sub	r3,fp,r3
   8b50c:	1023883a 	mov	r17,r2
   8b510:	003f4606 	br	8b22c <__divdf3+0x458>
   8b514:	100f883a 	mov	r7,r2
   8b518:	003f2b06 	br	8b1c8 <__divdf3+0x3f4>
   8b51c:	180d883a 	mov	r6,r3
   8b520:	003f1306 	br	8b170 <__divdf3+0x39c>
   8b524:	813fe436 	bltu	r16,r4,8b4b8 <__divdf3+0x6e4>
   8b528:	0007883a 	mov	r3,zero
   8b52c:	003f3f06 	br	8b22c <__divdf3+0x458>
   8b530:	ba402c36 	bltu	r23,r9,8b5e4 <__divdf3+0x810>
   8b534:	4dc05426 	beq	r9,r23,8b688 <__divdf3+0x8b4>
   8b538:	1011883a 	mov	r8,r2
   8b53c:	003f8906 	br	8b364 <__divdf3+0x590>
   8b540:	023fffc4 	movi	r8,-1
   8b544:	003f8806 	br	8b368 <__divdf3+0x594>
   8b548:	1811883a 	mov	r8,r3
   8b54c:	003f5406 	br	8b2a0 <__divdf3+0x4cc>
   8b550:	1025883a 	mov	r18,r2
   8b554:	003f6d06 	br	8b30c <__divdf3+0x538>
   8b558:	b827883a 	mov	r19,r23
   8b55c:	003f8206 	br	8b368 <__divdf3+0x594>
   8b560:	010007c4 	movi	r4,31
   8b564:	20c02616 	blt	r4,r3,8b600 <__divdf3+0x82c>
   8b568:	00800804 	movi	r2,32
   8b56c:	10c5c83a 	sub	r2,r2,r3
   8b570:	888a983a 	sll	r5,r17,r2
   8b574:	40c8d83a 	srl	r4,r8,r3
   8b578:	4084983a 	sll	r2,r8,r2
   8b57c:	88e2d83a 	srl	r17,r17,r3
   8b580:	2906b03a 	or	r3,r5,r4
   8b584:	1004c03a 	cmpne	r2,r2,zero
   8b588:	1886b03a 	or	r3,r3,r2
   8b58c:	188001cc 	andi	r2,r3,7
   8b590:	10000726 	beq	r2,zero,8b5b0 <__divdf3+0x7dc>
   8b594:	188003cc 	andi	r2,r3,15
   8b598:	01000104 	movi	r4,4
   8b59c:	11000426 	beq	r2,r4,8b5b0 <__divdf3+0x7dc>
   8b5a0:	1805883a 	mov	r2,r3
   8b5a4:	10c00104 	addi	r3,r2,4
   8b5a8:	1885803a 	cmpltu	r2,r3,r2
   8b5ac:	88a3883a 	add	r17,r17,r2
   8b5b0:	8880202c 	andhi	r2,r17,128
   8b5b4:	10002726 	beq	r2,zero,8b654 <__divdf3+0x880>
   8b5b8:	98c0004c 	andi	r3,r19,1
   8b5bc:	00800044 	movi	r2,1
   8b5c0:	000b883a 	mov	r5,zero
   8b5c4:	0025883a 	mov	r18,zero
   8b5c8:	003e6106 	br	8af50 <__divdf3+0x17c>
   8b5cc:	85a1883a 	add	r16,r16,r22
   8b5d0:	8585803a 	cmpltu	r2,r16,r22
   8b5d4:	1705883a 	add	r2,r2,fp
   8b5d8:	14a5883a 	add	r18,r2,r18
   8b5dc:	8c7fff84 	addi	r17,r17,-2
   8b5e0:	003f1106 	br	8b228 <__divdf3+0x454>
   8b5e4:	b589883a 	add	r4,r22,r22
   8b5e8:	25ad803a 	cmpltu	r22,r4,r22
   8b5ec:	b739883a 	add	fp,r22,fp
   8b5f0:	40bfff84 	addi	r2,r8,-2
   8b5f4:	bf2f883a 	add	r23,r23,fp
   8b5f8:	202d883a 	mov	r22,r4
   8b5fc:	003f9306 	br	8b44c <__divdf3+0x678>
   8b600:	013ff844 	movi	r4,-31
   8b604:	2085c83a 	sub	r2,r4,r2
   8b608:	8888d83a 	srl	r4,r17,r2
   8b60c:	00800804 	movi	r2,32
   8b610:	18802126 	beq	r3,r2,8b698 <__divdf3+0x8c4>
   8b614:	00801004 	movi	r2,64
   8b618:	10c5c83a 	sub	r2,r2,r3
   8b61c:	8884983a 	sll	r2,r17,r2
   8b620:	1204b03a 	or	r2,r2,r8
   8b624:	1004c03a 	cmpne	r2,r2,zero
   8b628:	2084b03a 	or	r2,r4,r2
   8b62c:	144001cc 	andi	r17,r2,7
   8b630:	88000d1e 	bne	r17,zero,8b668 <__divdf3+0x894>
   8b634:	000b883a 	mov	r5,zero
   8b638:	1024d0fa 	srli	r18,r2,3
   8b63c:	98c0004c 	andi	r3,r19,1
   8b640:	0005883a 	mov	r2,zero
   8b644:	9464b03a 	or	r18,r18,r17
   8b648:	003e4106 	br	8af50 <__divdf3+0x17c>
   8b64c:	1007883a 	mov	r3,r2
   8b650:	0023883a 	mov	r17,zero
   8b654:	880a927a 	slli	r5,r17,9
   8b658:	1805883a 	mov	r2,r3
   8b65c:	8822977a 	slli	r17,r17,29
   8b660:	280ad33a 	srli	r5,r5,12
   8b664:	003ff406 	br	8b638 <__divdf3+0x864>
   8b668:	10c003cc 	andi	r3,r2,15
   8b66c:	01000104 	movi	r4,4
   8b670:	193ff626 	beq	r3,r4,8b64c <__divdf3+0x878>
   8b674:	0023883a 	mov	r17,zero
   8b678:	003fca06 	br	8b5a4 <__divdf3+0x7d0>
   8b67c:	813fd336 	bltu	r16,r4,8b5cc <__divdf3+0x7f8>
   8b680:	1023883a 	mov	r17,r2
   8b684:	003fa806 	br	8b528 <__divdf3+0x754>
   8b688:	b0ffd636 	bltu	r22,r3,8b5e4 <__divdf3+0x810>
   8b68c:	1011883a 	mov	r8,r2
   8b690:	b0ff341e 	bne	r22,r3,8b364 <__divdf3+0x590>
   8b694:	003f3406 	br	8b368 <__divdf3+0x594>
   8b698:	0005883a 	mov	r2,zero
   8b69c:	003fe006 	br	8b620 <__divdf3+0x84c>
   8b6a0:	00800434 	movhi	r2,16
   8b6a4:	89400234 	orhi	r5,r17,8
   8b6a8:	10bfffc4 	addi	r2,r2,-1
   8b6ac:	b807883a 	mov	r3,r23
   8b6b0:	288a703a 	and	r5,r5,r2
   8b6b4:	4025883a 	mov	r18,r8
   8b6b8:	003e8206 	br	8b0c4 <__divdf3+0x2f0>

0008b6bc <__eqdf2>:
   8b6bc:	2804d53a 	srli	r2,r5,20
   8b6c0:	3806d53a 	srli	r3,r7,20
   8b6c4:	02000434 	movhi	r8,16
   8b6c8:	423fffc4 	addi	r8,r8,-1
   8b6cc:	1081ffcc 	andi	r2,r2,2047
   8b6d0:	0281ffc4 	movi	r10,2047
   8b6d4:	2a12703a 	and	r9,r5,r8
   8b6d8:	18c1ffcc 	andi	r3,r3,2047
   8b6dc:	3a10703a 	and	r8,r7,r8
   8b6e0:	280ad7fa 	srli	r5,r5,31
   8b6e4:	380ed7fa 	srli	r7,r7,31
   8b6e8:	12801026 	beq	r2,r10,8b72c <__eqdf2+0x70>
   8b6ec:	0281ffc4 	movi	r10,2047
   8b6f0:	1a800a26 	beq	r3,r10,8b71c <__eqdf2+0x60>
   8b6f4:	10c00226 	beq	r2,r3,8b700 <__eqdf2+0x44>
   8b6f8:	00800044 	movi	r2,1
   8b6fc:	f800283a 	ret
   8b700:	4a3ffd1e 	bne	r9,r8,8b6f8 <__eqdf2+0x3c>
   8b704:	21bffc1e 	bne	r4,r6,8b6f8 <__eqdf2+0x3c>
   8b708:	29c00c26 	beq	r5,r7,8b73c <__eqdf2+0x80>
   8b70c:	103ffa1e 	bne	r2,zero,8b6f8 <__eqdf2+0x3c>
   8b710:	2244b03a 	or	r2,r4,r9
   8b714:	1004c03a 	cmpne	r2,r2,zero
   8b718:	f800283a 	ret
   8b71c:	3214b03a 	or	r10,r6,r8
   8b720:	503ff426 	beq	r10,zero,8b6f4 <__eqdf2+0x38>
   8b724:	00800044 	movi	r2,1
   8b728:	f800283a 	ret
   8b72c:	2254b03a 	or	r10,r4,r9
   8b730:	503fee26 	beq	r10,zero,8b6ec <__eqdf2+0x30>
   8b734:	00800044 	movi	r2,1
   8b738:	f800283a 	ret
   8b73c:	0005883a 	mov	r2,zero
   8b740:	f800283a 	ret

0008b744 <__gedf2>:
   8b744:	2804d53a 	srli	r2,r5,20
   8b748:	3806d53a 	srli	r3,r7,20
   8b74c:	02000434 	movhi	r8,16
   8b750:	423fffc4 	addi	r8,r8,-1
   8b754:	1081ffcc 	andi	r2,r2,2047
   8b758:	0241ffc4 	movi	r9,2047
   8b75c:	2a14703a 	and	r10,r5,r8
   8b760:	18c1ffcc 	andi	r3,r3,2047
   8b764:	3a10703a 	and	r8,r7,r8
   8b768:	280ad7fa 	srli	r5,r5,31
   8b76c:	380ed7fa 	srli	r7,r7,31
   8b770:	12401d26 	beq	r2,r9,8b7e8 <__gedf2+0xa4>
   8b774:	0241ffc4 	movi	r9,2047
   8b778:	1a401226 	beq	r3,r9,8b7c4 <__gedf2+0x80>
   8b77c:	1000081e 	bne	r2,zero,8b7a0 <__gedf2+0x5c>
   8b780:	2296b03a 	or	r11,r4,r10
   8b784:	5813003a 	cmpeq	r9,r11,zero
   8b788:	1800091e 	bne	r3,zero,8b7b0 <__gedf2+0x6c>
   8b78c:	3218b03a 	or	r12,r6,r8
   8b790:	6000071e 	bne	r12,zero,8b7b0 <__gedf2+0x6c>
   8b794:	0005883a 	mov	r2,zero
   8b798:	5800101e 	bne	r11,zero,8b7dc <__gedf2+0x98>
   8b79c:	f800283a 	ret
   8b7a0:	18000c1e 	bne	r3,zero,8b7d4 <__gedf2+0x90>
   8b7a4:	3212b03a 	or	r9,r6,r8
   8b7a8:	48000c26 	beq	r9,zero,8b7dc <__gedf2+0x98>
   8b7ac:	0013883a 	mov	r9,zero
   8b7b0:	39c03fcc 	andi	r7,r7,255
   8b7b4:	48000826 	beq	r9,zero,8b7d8 <__gedf2+0x94>
   8b7b8:	38000926 	beq	r7,zero,8b7e0 <__gedf2+0x9c>
   8b7bc:	00800044 	movi	r2,1
   8b7c0:	f800283a 	ret
   8b7c4:	3212b03a 	or	r9,r6,r8
   8b7c8:	483fec26 	beq	r9,zero,8b77c <__gedf2+0x38>
   8b7cc:	00bfff84 	movi	r2,-2
   8b7d0:	f800283a 	ret
   8b7d4:	39c03fcc 	andi	r7,r7,255
   8b7d8:	29c00626 	beq	r5,r7,8b7f4 <__gedf2+0xb0>
   8b7dc:	283ff726 	beq	r5,zero,8b7bc <__gedf2+0x78>
   8b7e0:	00bfffc4 	movi	r2,-1
   8b7e4:	f800283a 	ret
   8b7e8:	2292b03a 	or	r9,r4,r10
   8b7ec:	483fe126 	beq	r9,zero,8b774 <__gedf2+0x30>
   8b7f0:	003ff606 	br	8b7cc <__gedf2+0x88>
   8b7f4:	18bff916 	blt	r3,r2,8b7dc <__gedf2+0x98>
   8b7f8:	10c00316 	blt	r2,r3,8b808 <__gedf2+0xc4>
   8b7fc:	42bff736 	bltu	r8,r10,8b7dc <__gedf2+0x98>
   8b800:	52000326 	beq	r10,r8,8b810 <__gedf2+0xcc>
   8b804:	5200042e 	bgeu	r10,r8,8b818 <__gedf2+0xd4>
   8b808:	283fec1e 	bne	r5,zero,8b7bc <__gedf2+0x78>
   8b80c:	003ff406 	br	8b7e0 <__gedf2+0x9c>
   8b810:	313ff236 	bltu	r6,r4,8b7dc <__gedf2+0x98>
   8b814:	21bffc36 	bltu	r4,r6,8b808 <__gedf2+0xc4>
   8b818:	0005883a 	mov	r2,zero
   8b81c:	f800283a 	ret

0008b820 <__ledf2>:
   8b820:	2804d53a 	srli	r2,r5,20
   8b824:	3810d53a 	srli	r8,r7,20
   8b828:	00c00434 	movhi	r3,16
   8b82c:	18ffffc4 	addi	r3,r3,-1
   8b830:	1081ffcc 	andi	r2,r2,2047
   8b834:	0241ffc4 	movi	r9,2047
   8b838:	28d4703a 	and	r10,r5,r3
   8b83c:	4201ffcc 	andi	r8,r8,2047
   8b840:	38c6703a 	and	r3,r7,r3
   8b844:	280ad7fa 	srli	r5,r5,31
   8b848:	380ed7fa 	srli	r7,r7,31
   8b84c:	12401f26 	beq	r2,r9,8b8cc <__ledf2+0xac>
   8b850:	0241ffc4 	movi	r9,2047
   8b854:	42401426 	beq	r8,r9,8b8a8 <__ledf2+0x88>
   8b858:	1000091e 	bne	r2,zero,8b880 <__ledf2+0x60>
   8b85c:	2296b03a 	or	r11,r4,r10
   8b860:	5813003a 	cmpeq	r9,r11,zero
   8b864:	29403fcc 	andi	r5,r5,255
   8b868:	40000a1e 	bne	r8,zero,8b894 <__ledf2+0x74>
   8b86c:	30d8b03a 	or	r12,r6,r3
   8b870:	6000081e 	bne	r12,zero,8b894 <__ledf2+0x74>
   8b874:	0005883a 	mov	r2,zero
   8b878:	5800111e 	bne	r11,zero,8b8c0 <__ledf2+0xa0>
   8b87c:	f800283a 	ret
   8b880:	29403fcc 	andi	r5,r5,255
   8b884:	40000c1e 	bne	r8,zero,8b8b8 <__ledf2+0x98>
   8b888:	30d2b03a 	or	r9,r6,r3
   8b88c:	48000c26 	beq	r9,zero,8b8c0 <__ledf2+0xa0>
   8b890:	0013883a 	mov	r9,zero
   8b894:	39c03fcc 	andi	r7,r7,255
   8b898:	48000826 	beq	r9,zero,8b8bc <__ledf2+0x9c>
   8b89c:	38001126 	beq	r7,zero,8b8e4 <__ledf2+0xc4>
   8b8a0:	00800044 	movi	r2,1
   8b8a4:	f800283a 	ret
   8b8a8:	30d2b03a 	or	r9,r6,r3
   8b8ac:	483fea26 	beq	r9,zero,8b858 <__ledf2+0x38>
   8b8b0:	00800084 	movi	r2,2
   8b8b4:	f800283a 	ret
   8b8b8:	39c03fcc 	andi	r7,r7,255
   8b8bc:	39400726 	beq	r7,r5,8b8dc <__ledf2+0xbc>
   8b8c0:	2800081e 	bne	r5,zero,8b8e4 <__ledf2+0xc4>
   8b8c4:	00800044 	movi	r2,1
   8b8c8:	f800283a 	ret
   8b8cc:	2292b03a 	or	r9,r4,r10
   8b8d0:	483fdf26 	beq	r9,zero,8b850 <__ledf2+0x30>
   8b8d4:	00800084 	movi	r2,2
   8b8d8:	f800283a 	ret
   8b8dc:	4080030e 	bge	r8,r2,8b8ec <__ledf2+0xcc>
   8b8e0:	383fef26 	beq	r7,zero,8b8a0 <__ledf2+0x80>
   8b8e4:	00bfffc4 	movi	r2,-1
   8b8e8:	f800283a 	ret
   8b8ec:	123feb16 	blt	r2,r8,8b89c <__ledf2+0x7c>
   8b8f0:	1abff336 	bltu	r3,r10,8b8c0 <__ledf2+0xa0>
   8b8f4:	50c00326 	beq	r10,r3,8b904 <__ledf2+0xe4>
   8b8f8:	50c0042e 	bgeu	r10,r3,8b90c <__ledf2+0xec>
   8b8fc:	283fe81e 	bne	r5,zero,8b8a0 <__ledf2+0x80>
   8b900:	003ff806 	br	8b8e4 <__ledf2+0xc4>
   8b904:	313fee36 	bltu	r6,r4,8b8c0 <__ledf2+0xa0>
   8b908:	21bffc36 	bltu	r4,r6,8b8fc <__ledf2+0xdc>
   8b90c:	0005883a 	mov	r2,zero
   8b910:	f800283a 	ret

0008b914 <__muldf3>:
   8b914:	defff304 	addi	sp,sp,-52
   8b918:	dd400815 	stw	r21,32(sp)
   8b91c:	282ad53a 	srli	r21,r5,20
   8b920:	dd800915 	stw	r22,36(sp)
   8b924:	282cd7fa 	srli	r22,r5,31
   8b928:	dc000315 	stw	r16,12(sp)
   8b92c:	04000434 	movhi	r16,16
   8b930:	dd000715 	stw	r20,28(sp)
   8b934:	843fffc4 	addi	r16,r16,-1
   8b938:	dfc00c15 	stw	ra,48(sp)
   8b93c:	df000b15 	stw	fp,44(sp)
   8b940:	ddc00a15 	stw	r23,40(sp)
   8b944:	dcc00615 	stw	r19,24(sp)
   8b948:	dc800515 	stw	r18,20(sp)
   8b94c:	dc400415 	stw	r17,16(sp)
   8b950:	ad41ffcc 	andi	r21,r21,2047
   8b954:	2c20703a 	and	r16,r5,r16
   8b958:	b029883a 	mov	r20,r22
   8b95c:	b2403fcc 	andi	r9,r22,255
   8b960:	a8006026 	beq	r21,zero,8bae4 <__muldf3+0x1d0>
   8b964:	0081ffc4 	movi	r2,2047
   8b968:	2027883a 	mov	r19,r4
   8b96c:	a8803626 	beq	r21,r2,8ba48 <__muldf3+0x134>
   8b970:	80c00434 	orhi	r3,r16,16
   8b974:	180690fa 	slli	r3,r3,3
   8b978:	2020d77a 	srli	r16,r4,29
   8b97c:	202690fa 	slli	r19,r4,3
   8b980:	ad7f0044 	addi	r21,r21,-1023
   8b984:	80e0b03a 	or	r16,r16,r3
   8b988:	0025883a 	mov	r18,zero
   8b98c:	0039883a 	mov	fp,zero
   8b990:	3808d53a 	srli	r4,r7,20
   8b994:	382ed7fa 	srli	r23,r7,31
   8b998:	04400434 	movhi	r17,16
   8b99c:	8c7fffc4 	addi	r17,r17,-1
   8b9a0:	2101ffcc 	andi	r4,r4,2047
   8b9a4:	3011883a 	mov	r8,r6
   8b9a8:	3c62703a 	and	r17,r7,r17
   8b9ac:	ba803fcc 	andi	r10,r23,255
   8b9b0:	20006d26 	beq	r4,zero,8bb68 <__muldf3+0x254>
   8b9b4:	0081ffc4 	movi	r2,2047
   8b9b8:	20806526 	beq	r4,r2,8bb50 <__muldf3+0x23c>
   8b9bc:	88c00434 	orhi	r3,r17,16
   8b9c0:	180690fa 	slli	r3,r3,3
   8b9c4:	3022d77a 	srli	r17,r6,29
   8b9c8:	301090fa 	slli	r8,r6,3
   8b9cc:	213f0044 	addi	r4,r4,-1023
   8b9d0:	88e2b03a 	or	r17,r17,r3
   8b9d4:	000b883a 	mov	r5,zero
   8b9d8:	a909883a 	add	r4,r21,r4
   8b9dc:	2c84b03a 	or	r2,r5,r18
   8b9e0:	00c003c4 	movi	r3,15
   8b9e4:	bdacf03a 	xor	r22,r23,r22
   8b9e8:	22c00044 	addi	r11,r4,1
   8b9ec:	18809936 	bltu	r3,r2,8bc54 <__muldf3+0x340>
   8b9f0:	100490ba 	slli	r2,r2,2
   8b9f4:	00c00274 	movhi	r3,9
   8b9f8:	18ee8204 	addi	r3,r3,-17912
   8b9fc:	10c5883a 	add	r2,r2,r3
   8ba00:	10800017 	ldw	r2,0(r2)
   8ba04:	1000683a 	jmp	r2
   8ba08:	0008bc54 	movui	zero,8945
   8ba0c:	0008ba68 	cmpgeui	zero,zero,8937
   8ba10:	0008ba68 	cmpgeui	zero,zero,8937
   8ba14:	0008ba64 	muli	zero,zero,8937
   8ba18:	0008bc30 	cmpltui	zero,zero,8944
   8ba1c:	0008bc30 	cmpltui	zero,zero,8944
   8ba20:	0008bc18 	cmpnei	zero,zero,8944
   8ba24:	0008ba64 	muli	zero,zero,8937
   8ba28:	0008bc30 	cmpltui	zero,zero,8944
   8ba2c:	0008bc18 	cmpnei	zero,zero,8944
   8ba30:	0008bc30 	cmpltui	zero,zero,8944
   8ba34:	0008ba64 	muli	zero,zero,8937
   8ba38:	0008bc40 	call	8bc4 <__alt_mem_mm-0x7743c>
   8ba3c:	0008bc40 	call	8bc4 <__alt_mem_mm-0x7743c>
   8ba40:	0008bc40 	call	8bc4 <__alt_mem_mm-0x7743c>
   8ba44:	0008be5c 	xori	zero,zero,8953
   8ba48:	2404b03a 	or	r2,r4,r16
   8ba4c:	10006f1e 	bne	r2,zero,8bc0c <__muldf3+0x2f8>
   8ba50:	04800204 	movi	r18,8
   8ba54:	0021883a 	mov	r16,zero
   8ba58:	0027883a 	mov	r19,zero
   8ba5c:	07000084 	movi	fp,2
   8ba60:	003fcb06 	br	8b990 <__muldf3+0x7c>
   8ba64:	502d883a 	mov	r22,r10
   8ba68:	00800084 	movi	r2,2
   8ba6c:	28805726 	beq	r5,r2,8bbcc <__muldf3+0x2b8>
   8ba70:	008000c4 	movi	r2,3
   8ba74:	28816626 	beq	r5,r2,8c010 <__muldf3+0x6fc>
   8ba78:	00800044 	movi	r2,1
   8ba7c:	2881411e 	bne	r5,r2,8bf84 <__muldf3+0x670>
   8ba80:	b029883a 	mov	r20,r22
   8ba84:	0005883a 	mov	r2,zero
   8ba88:	000b883a 	mov	r5,zero
   8ba8c:	0027883a 	mov	r19,zero
   8ba90:	1004953a 	slli	r2,r2,20
   8ba94:	a0c03fcc 	andi	r3,r20,255
   8ba98:	04400434 	movhi	r17,16
   8ba9c:	8c7fffc4 	addi	r17,r17,-1
   8baa0:	180697fa 	slli	r3,r3,31
   8baa4:	2c4a703a 	and	r5,r5,r17
   8baa8:	288ab03a 	or	r5,r5,r2
   8baac:	28c6b03a 	or	r3,r5,r3
   8bab0:	9805883a 	mov	r2,r19
   8bab4:	dfc00c17 	ldw	ra,48(sp)
   8bab8:	df000b17 	ldw	fp,44(sp)
   8babc:	ddc00a17 	ldw	r23,40(sp)
   8bac0:	dd800917 	ldw	r22,36(sp)
   8bac4:	dd400817 	ldw	r21,32(sp)
   8bac8:	dd000717 	ldw	r20,28(sp)
   8bacc:	dcc00617 	ldw	r19,24(sp)
   8bad0:	dc800517 	ldw	r18,20(sp)
   8bad4:	dc400417 	ldw	r17,16(sp)
   8bad8:	dc000317 	ldw	r16,12(sp)
   8badc:	dec00d04 	addi	sp,sp,52
   8bae0:	f800283a 	ret
   8bae4:	2404b03a 	or	r2,r4,r16
   8bae8:	2025883a 	mov	r18,r4
   8baec:	10004226 	beq	r2,zero,8bbf8 <__muldf3+0x2e4>
   8baf0:	8000fc26 	beq	r16,zero,8bee4 <__muldf3+0x5d0>
   8baf4:	8009883a 	mov	r4,r16
   8baf8:	d9800215 	stw	r6,8(sp)
   8bafc:	d9c00015 	stw	r7,0(sp)
   8bb00:	da400115 	stw	r9,4(sp)
   8bb04:	008cb2c0 	call	8cb2c <__clzsi2>
   8bb08:	d9800217 	ldw	r6,8(sp)
   8bb0c:	d9c00017 	ldw	r7,0(sp)
   8bb10:	da400117 	ldw	r9,4(sp)
   8bb14:	10fffd44 	addi	r3,r2,-11
   8bb18:	01000704 	movi	r4,28
   8bb1c:	20c0ed16 	blt	r4,r3,8bed4 <__muldf3+0x5c0>
   8bb20:	01000744 	movi	r4,29
   8bb24:	147ffe04 	addi	r17,r2,-8
   8bb28:	20c9c83a 	sub	r4,r4,r3
   8bb2c:	8460983a 	sll	r16,r16,r17
   8bb30:	9108d83a 	srl	r4,r18,r4
   8bb34:	9466983a 	sll	r19,r18,r17
   8bb38:	2420b03a 	or	r16,r4,r16
   8bb3c:	013f0084 	movi	r4,-1022
   8bb40:	20ebc83a 	sub	r21,r4,r3
   8bb44:	0025883a 	mov	r18,zero
   8bb48:	0039883a 	mov	fp,zero
   8bb4c:	003f9006 	br	8b990 <__muldf3+0x7c>
   8bb50:	3444b03a 	or	r2,r6,r17
   8bb54:	1000261e 	bne	r2,zero,8bbf0 <__muldf3+0x2dc>
   8bb58:	0023883a 	mov	r17,zero
   8bb5c:	0011883a 	mov	r8,zero
   8bb60:	01400084 	movi	r5,2
   8bb64:	003f9c06 	br	8b9d8 <__muldf3+0xc4>
   8bb68:	3444b03a 	or	r2,r6,r17
   8bb6c:	10001c26 	beq	r2,zero,8bbe0 <__muldf3+0x2cc>
   8bb70:	8800ce26 	beq	r17,zero,8beac <__muldf3+0x598>
   8bb74:	8809883a 	mov	r4,r17
   8bb78:	d9800215 	stw	r6,8(sp)
   8bb7c:	da400115 	stw	r9,4(sp)
   8bb80:	da800015 	stw	r10,0(sp)
   8bb84:	008cb2c0 	call	8cb2c <__clzsi2>
   8bb88:	d9800217 	ldw	r6,8(sp)
   8bb8c:	da400117 	ldw	r9,4(sp)
   8bb90:	da800017 	ldw	r10,0(sp)
   8bb94:	113ffd44 	addi	r4,r2,-11
   8bb98:	00c00704 	movi	r3,28
   8bb9c:	1900bf16 	blt	r3,r4,8be9c <__muldf3+0x588>
   8bba0:	00c00744 	movi	r3,29
   8bba4:	123ffe04 	addi	r8,r2,-8
   8bba8:	1907c83a 	sub	r3,r3,r4
   8bbac:	8a22983a 	sll	r17,r17,r8
   8bbb0:	30c6d83a 	srl	r3,r6,r3
   8bbb4:	3210983a 	sll	r8,r6,r8
   8bbb8:	1c62b03a 	or	r17,r3,r17
   8bbbc:	017f0084 	movi	r5,-1022
   8bbc0:	2909c83a 	sub	r4,r5,r4
   8bbc4:	000b883a 	mov	r5,zero
   8bbc8:	003f8306 	br	8b9d8 <__muldf3+0xc4>
   8bbcc:	b029883a 	mov	r20,r22
   8bbd0:	0081ffc4 	movi	r2,2047
   8bbd4:	000b883a 	mov	r5,zero
   8bbd8:	0027883a 	mov	r19,zero
   8bbdc:	003fac06 	br	8ba90 <__muldf3+0x17c>
   8bbe0:	0023883a 	mov	r17,zero
   8bbe4:	0011883a 	mov	r8,zero
   8bbe8:	01400044 	movi	r5,1
   8bbec:	003f7a06 	br	8b9d8 <__muldf3+0xc4>
   8bbf0:	014000c4 	movi	r5,3
   8bbf4:	003f7806 	br	8b9d8 <__muldf3+0xc4>
   8bbf8:	04800104 	movi	r18,4
   8bbfc:	0021883a 	mov	r16,zero
   8bc00:	0027883a 	mov	r19,zero
   8bc04:	07000044 	movi	fp,1
   8bc08:	003f6106 	br	8b990 <__muldf3+0x7c>
   8bc0c:	04800304 	movi	r18,12
   8bc10:	070000c4 	movi	fp,3
   8bc14:	003f5e06 	br	8b990 <__muldf3+0x7c>
   8bc18:	01400434 	movhi	r5,16
   8bc1c:	0029883a 	mov	r20,zero
   8bc20:	297fffc4 	addi	r5,r5,-1
   8bc24:	04ffffc4 	movi	r19,-1
   8bc28:	0081ffc4 	movi	r2,2047
   8bc2c:	003f9806 	br	8ba90 <__muldf3+0x17c>
   8bc30:	8023883a 	mov	r17,r16
   8bc34:	9811883a 	mov	r8,r19
   8bc38:	e00b883a 	mov	r5,fp
   8bc3c:	003f8a06 	br	8ba68 <__muldf3+0x154>
   8bc40:	8023883a 	mov	r17,r16
   8bc44:	9811883a 	mov	r8,r19
   8bc48:	482d883a 	mov	r22,r9
   8bc4c:	e00b883a 	mov	r5,fp
   8bc50:	003f8506 	br	8ba68 <__muldf3+0x154>
   8bc54:	980ad43a 	srli	r5,r19,16
   8bc58:	401ad43a 	srli	r13,r8,16
   8bc5c:	9cffffcc 	andi	r19,r19,65535
   8bc60:	423fffcc 	andi	r8,r8,65535
   8bc64:	44d9383a 	mul	r12,r8,r19
   8bc68:	4145383a 	mul	r2,r8,r5
   8bc6c:	6ccd383a 	mul	r6,r13,r19
   8bc70:	6006d43a 	srli	r3,r12,16
   8bc74:	2b5d383a 	mul	r14,r5,r13
   8bc78:	308d883a 	add	r6,r6,r2
   8bc7c:	198d883a 	add	r6,r3,r6
   8bc80:	3080022e 	bgeu	r6,r2,8bc8c <__muldf3+0x378>
   8bc84:	00800074 	movhi	r2,1
   8bc88:	709d883a 	add	r14,r14,r2
   8bc8c:	8828d43a 	srli	r20,r17,16
   8bc90:	8bffffcc 	andi	r15,r17,65535
   8bc94:	7ce3383a 	mul	r17,r15,r19
   8bc98:	7945383a 	mul	r2,r15,r5
   8bc9c:	a4e7383a 	mul	r19,r20,r19
   8bca0:	8814d43a 	srli	r10,r17,16
   8bca4:	3012943a 	slli	r9,r6,16
   8bca8:	98a7883a 	add	r19,r19,r2
   8bcac:	633fffcc 	andi	r12,r12,65535
   8bcb0:	54d5883a 	add	r10,r10,r19
   8bcb4:	3006d43a 	srli	r3,r6,16
   8bcb8:	4b13883a 	add	r9,r9,r12
   8bcbc:	2d0b383a 	mul	r5,r5,r20
   8bcc0:	5080022e 	bgeu	r10,r2,8bccc <__muldf3+0x3b8>
   8bcc4:	00800074 	movhi	r2,1
   8bcc8:	288b883a 	add	r5,r5,r2
   8bccc:	802ad43a 	srli	r21,r16,16
   8bcd0:	843fffcc 	andi	r16,r16,65535
   8bcd4:	440d383a 	mul	r6,r8,r16
   8bcd8:	4565383a 	mul	r18,r8,r21
   8bcdc:	8359383a 	mul	r12,r16,r13
   8bce0:	500e943a 	slli	r7,r10,16
   8bce4:	3010d43a 	srli	r8,r6,16
   8bce8:	5026d43a 	srli	r19,r10,16
   8bcec:	6499883a 	add	r12,r12,r18
   8bcf0:	8abfffcc 	andi	r10,r17,65535
   8bcf4:	3a95883a 	add	r10,r7,r10
   8bcf8:	4319883a 	add	r12,r8,r12
   8bcfc:	9967883a 	add	r19,r19,r5
   8bd00:	1a87883a 	add	r3,r3,r10
   8bd04:	6d5b383a 	mul	r13,r13,r21
   8bd08:	6480022e 	bgeu	r12,r18,8bd14 <__muldf3+0x400>
   8bd0c:	00800074 	movhi	r2,1
   8bd10:	689b883a 	add	r13,r13,r2
   8bd14:	7c25383a 	mul	r18,r15,r16
   8bd18:	7d4b383a 	mul	r5,r15,r21
   8bd1c:	850f383a 	mul	r7,r16,r20
   8bd20:	901ed43a 	srli	r15,r18,16
   8bd24:	6004d43a 	srli	r2,r12,16
   8bd28:	6010943a 	slli	r8,r12,16
   8bd2c:	394f883a 	add	r7,r7,r5
   8bd30:	333fffcc 	andi	r12,r6,65535
   8bd34:	79df883a 	add	r15,r15,r7
   8bd38:	135b883a 	add	r13,r2,r13
   8bd3c:	a563383a 	mul	r17,r20,r21
   8bd40:	4305883a 	add	r2,r8,r12
   8bd44:	7940022e 	bgeu	r15,r5,8bd50 <__muldf3+0x43c>
   8bd48:	01400074 	movhi	r5,1
   8bd4c:	8963883a 	add	r17,r17,r5
   8bd50:	780a943a 	slli	r5,r15,16
   8bd54:	91bfffcc 	andi	r6,r18,65535
   8bd58:	70c7883a 	add	r3,r14,r3
   8bd5c:	298d883a 	add	r6,r5,r6
   8bd60:	1a8f803a 	cmpltu	r7,r3,r10
   8bd64:	34cb883a 	add	r5,r6,r19
   8bd68:	10c7883a 	add	r3,r2,r3
   8bd6c:	3955883a 	add	r10,r7,r5
   8bd70:	1885803a 	cmpltu	r2,r3,r2
   8bd74:	6a91883a 	add	r8,r13,r10
   8bd78:	780cd43a 	srli	r6,r15,16
   8bd7c:	1219883a 	add	r12,r2,r8
   8bd80:	2ccb803a 	cmpltu	r5,r5,r19
   8bd84:	51cf803a 	cmpltu	r7,r10,r7
   8bd88:	29ceb03a 	or	r7,r5,r7
   8bd8c:	4351803a 	cmpltu	r8,r8,r13
   8bd90:	608b803a 	cmpltu	r5,r12,r2
   8bd94:	4144b03a 	or	r2,r8,r5
   8bd98:	398f883a 	add	r7,r7,r6
   8bd9c:	3885883a 	add	r2,r7,r2
   8bda0:	1810927a 	slli	r8,r3,9
   8bda4:	1445883a 	add	r2,r2,r17
   8bda8:	1004927a 	slli	r2,r2,9
   8bdac:	6022d5fa 	srli	r17,r12,23
   8bdb0:	1806d5fa 	srli	r3,r3,23
   8bdb4:	4252b03a 	or	r9,r8,r9
   8bdb8:	600a927a 	slli	r5,r12,9
   8bdbc:	4810c03a 	cmpne	r8,r9,zero
   8bdc0:	1462b03a 	or	r17,r2,r17
   8bdc4:	40c6b03a 	or	r3,r8,r3
   8bdc8:	8880402c 	andhi	r2,r17,256
   8bdcc:	1950b03a 	or	r8,r3,r5
   8bdd0:	10000726 	beq	r2,zero,8bdf0 <__muldf3+0x4dc>
   8bdd4:	4006d07a 	srli	r3,r8,1
   8bdd8:	880497fa 	slli	r2,r17,31
   8bddc:	4200004c 	andi	r8,r8,1
   8bde0:	8822d07a 	srli	r17,r17,1
   8bde4:	1a10b03a 	or	r8,r3,r8
   8bde8:	1210b03a 	or	r8,r2,r8
   8bdec:	5809883a 	mov	r4,r11
   8bdf0:	2080ffc4 	addi	r2,r4,1023
   8bdf4:	0080440e 	bge	zero,r2,8bf08 <__muldf3+0x5f4>
   8bdf8:	40c001cc 	andi	r3,r8,7
   8bdfc:	18000726 	beq	r3,zero,8be1c <__muldf3+0x508>
   8be00:	40c003cc 	andi	r3,r8,15
   8be04:	01400104 	movi	r5,4
   8be08:	19400426 	beq	r3,r5,8be1c <__muldf3+0x508>
   8be0c:	4147883a 	add	r3,r8,r5
   8be10:	1a11803a 	cmpltu	r8,r3,r8
   8be14:	8a23883a 	add	r17,r17,r8
   8be18:	1811883a 	mov	r8,r3
   8be1c:	88c0402c 	andhi	r3,r17,256
   8be20:	18000426 	beq	r3,zero,8be34 <__muldf3+0x520>
   8be24:	00ffc034 	movhi	r3,65280
   8be28:	18ffffc4 	addi	r3,r3,-1
   8be2c:	20810004 	addi	r2,r4,1024
   8be30:	88e2703a 	and	r17,r17,r3
   8be34:	00c1ff84 	movi	r3,2046
   8be38:	18bf6416 	blt	r3,r2,8bbcc <__muldf3+0x2b8>
   8be3c:	8826977a 	slli	r19,r17,29
   8be40:	4010d0fa 	srli	r8,r8,3
   8be44:	8822927a 	slli	r17,r17,9
   8be48:	1081ffcc 	andi	r2,r2,2047
   8be4c:	9a26b03a 	or	r19,r19,r8
   8be50:	880ad33a 	srli	r5,r17,12
   8be54:	b029883a 	mov	r20,r22
   8be58:	003f0d06 	br	8ba90 <__muldf3+0x17c>
   8be5c:	8080022c 	andhi	r2,r16,8
   8be60:	10000926 	beq	r2,zero,8be88 <__muldf3+0x574>
   8be64:	8880022c 	andhi	r2,r17,8
   8be68:	1000071e 	bne	r2,zero,8be88 <__muldf3+0x574>
   8be6c:	00800434 	movhi	r2,16
   8be70:	89400234 	orhi	r5,r17,8
   8be74:	10bfffc4 	addi	r2,r2,-1
   8be78:	b829883a 	mov	r20,r23
   8be7c:	288a703a 	and	r5,r5,r2
   8be80:	4027883a 	mov	r19,r8
   8be84:	003f6806 	br	8bc28 <__muldf3+0x314>
   8be88:	00800434 	movhi	r2,16
   8be8c:	81400234 	orhi	r5,r16,8
   8be90:	10bfffc4 	addi	r2,r2,-1
   8be94:	288a703a 	and	r5,r5,r2
   8be98:	003f6306 	br	8bc28 <__muldf3+0x314>
   8be9c:	10bff604 	addi	r2,r2,-40
   8bea0:	30a2983a 	sll	r17,r6,r2
   8bea4:	0011883a 	mov	r8,zero
   8bea8:	003f4406 	br	8bbbc <__muldf3+0x2a8>
   8beac:	3009883a 	mov	r4,r6
   8beb0:	d9800215 	stw	r6,8(sp)
   8beb4:	da400115 	stw	r9,4(sp)
   8beb8:	da800015 	stw	r10,0(sp)
   8bebc:	008cb2c0 	call	8cb2c <__clzsi2>
   8bec0:	10800804 	addi	r2,r2,32
   8bec4:	da800017 	ldw	r10,0(sp)
   8bec8:	da400117 	ldw	r9,4(sp)
   8becc:	d9800217 	ldw	r6,8(sp)
   8bed0:	003f3006 	br	8bb94 <__muldf3+0x280>
   8bed4:	10bff604 	addi	r2,r2,-40
   8bed8:	90a0983a 	sll	r16,r18,r2
   8bedc:	0027883a 	mov	r19,zero
   8bee0:	003f1606 	br	8bb3c <__muldf3+0x228>
   8bee4:	d9800215 	stw	r6,8(sp)
   8bee8:	d9c00015 	stw	r7,0(sp)
   8beec:	da400115 	stw	r9,4(sp)
   8bef0:	008cb2c0 	call	8cb2c <__clzsi2>
   8bef4:	10800804 	addi	r2,r2,32
   8bef8:	da400117 	ldw	r9,4(sp)
   8befc:	d9c00017 	ldw	r7,0(sp)
   8bf00:	d9800217 	ldw	r6,8(sp)
   8bf04:	003f0306 	br	8bb14 <__muldf3+0x200>
   8bf08:	00c00044 	movi	r3,1
   8bf0c:	1887c83a 	sub	r3,r3,r2
   8bf10:	01000e04 	movi	r4,56
   8bf14:	20feda16 	blt	r4,r3,8ba80 <__muldf3+0x16c>
   8bf18:	010007c4 	movi	r4,31
   8bf1c:	20c01b16 	blt	r4,r3,8bf8c <__muldf3+0x678>
   8bf20:	00800804 	movi	r2,32
   8bf24:	10c5c83a 	sub	r2,r2,r3
   8bf28:	888a983a 	sll	r5,r17,r2
   8bf2c:	40c8d83a 	srl	r4,r8,r3
   8bf30:	4084983a 	sll	r2,r8,r2
   8bf34:	88e2d83a 	srl	r17,r17,r3
   8bf38:	2906b03a 	or	r3,r5,r4
   8bf3c:	1004c03a 	cmpne	r2,r2,zero
   8bf40:	1886b03a 	or	r3,r3,r2
   8bf44:	188001cc 	andi	r2,r3,7
   8bf48:	10000726 	beq	r2,zero,8bf68 <__muldf3+0x654>
   8bf4c:	188003cc 	andi	r2,r3,15
   8bf50:	01000104 	movi	r4,4
   8bf54:	11000426 	beq	r2,r4,8bf68 <__muldf3+0x654>
   8bf58:	1805883a 	mov	r2,r3
   8bf5c:	10c00104 	addi	r3,r2,4
   8bf60:	1885803a 	cmpltu	r2,r3,r2
   8bf64:	88a3883a 	add	r17,r17,r2
   8bf68:	8880202c 	andhi	r2,r17,128
   8bf6c:	10001c26 	beq	r2,zero,8bfe0 <__muldf3+0x6cc>
   8bf70:	b029883a 	mov	r20,r22
   8bf74:	00800044 	movi	r2,1
   8bf78:	000b883a 	mov	r5,zero
   8bf7c:	0027883a 	mov	r19,zero
   8bf80:	003ec306 	br	8ba90 <__muldf3+0x17c>
   8bf84:	5809883a 	mov	r4,r11
   8bf88:	003f9906 	br	8bdf0 <__muldf3+0x4dc>
   8bf8c:	013ff844 	movi	r4,-31
   8bf90:	2085c83a 	sub	r2,r4,r2
   8bf94:	8888d83a 	srl	r4,r17,r2
   8bf98:	00800804 	movi	r2,32
   8bf9c:	18801a26 	beq	r3,r2,8c008 <__muldf3+0x6f4>
   8bfa0:	00801004 	movi	r2,64
   8bfa4:	10c5c83a 	sub	r2,r2,r3
   8bfa8:	8884983a 	sll	r2,r17,r2
   8bfac:	1204b03a 	or	r2,r2,r8
   8bfb0:	1004c03a 	cmpne	r2,r2,zero
   8bfb4:	2084b03a 	or	r2,r4,r2
   8bfb8:	144001cc 	andi	r17,r2,7
   8bfbc:	88000d1e 	bne	r17,zero,8bff4 <__muldf3+0x6e0>
   8bfc0:	000b883a 	mov	r5,zero
   8bfc4:	1026d0fa 	srli	r19,r2,3
   8bfc8:	b029883a 	mov	r20,r22
   8bfcc:	0005883a 	mov	r2,zero
   8bfd0:	9c66b03a 	or	r19,r19,r17
   8bfd4:	003eae06 	br	8ba90 <__muldf3+0x17c>
   8bfd8:	1007883a 	mov	r3,r2
   8bfdc:	0023883a 	mov	r17,zero
   8bfe0:	880a927a 	slli	r5,r17,9
   8bfe4:	1805883a 	mov	r2,r3
   8bfe8:	8822977a 	slli	r17,r17,29
   8bfec:	280ad33a 	srli	r5,r5,12
   8bff0:	003ff406 	br	8bfc4 <__muldf3+0x6b0>
   8bff4:	10c003cc 	andi	r3,r2,15
   8bff8:	01000104 	movi	r4,4
   8bffc:	193ff626 	beq	r3,r4,8bfd8 <__muldf3+0x6c4>
   8c000:	0023883a 	mov	r17,zero
   8c004:	003fd506 	br	8bf5c <__muldf3+0x648>
   8c008:	0005883a 	mov	r2,zero
   8c00c:	003fe706 	br	8bfac <__muldf3+0x698>
   8c010:	00800434 	movhi	r2,16
   8c014:	89400234 	orhi	r5,r17,8
   8c018:	10bfffc4 	addi	r2,r2,-1
   8c01c:	b029883a 	mov	r20,r22
   8c020:	288a703a 	and	r5,r5,r2
   8c024:	4027883a 	mov	r19,r8
   8c028:	003eff06 	br	8bc28 <__muldf3+0x314>

0008c02c <__subdf3>:
   8c02c:	02000434 	movhi	r8,16
   8c030:	423fffc4 	addi	r8,r8,-1
   8c034:	defffb04 	addi	sp,sp,-20
   8c038:	2a14703a 	and	r10,r5,r8
   8c03c:	3812d53a 	srli	r9,r7,20
   8c040:	3a10703a 	and	r8,r7,r8
   8c044:	2006d77a 	srli	r3,r4,29
   8c048:	3004d77a 	srli	r2,r6,29
   8c04c:	dc000015 	stw	r16,0(sp)
   8c050:	501490fa 	slli	r10,r10,3
   8c054:	2820d53a 	srli	r16,r5,20
   8c058:	401090fa 	slli	r8,r8,3
   8c05c:	dc800215 	stw	r18,8(sp)
   8c060:	dc400115 	stw	r17,4(sp)
   8c064:	dfc00415 	stw	ra,16(sp)
   8c068:	202290fa 	slli	r17,r4,3
   8c06c:	dcc00315 	stw	r19,12(sp)
   8c070:	4a41ffcc 	andi	r9,r9,2047
   8c074:	0101ffc4 	movi	r4,2047
   8c078:	2824d7fa 	srli	r18,r5,31
   8c07c:	8401ffcc 	andi	r16,r16,2047
   8c080:	50c6b03a 	or	r3,r10,r3
   8c084:	380ed7fa 	srli	r7,r7,31
   8c088:	408ab03a 	or	r5,r8,r2
   8c08c:	300c90fa 	slli	r6,r6,3
   8c090:	49009626 	beq	r9,r4,8c2ec <__subdf3+0x2c0>
   8c094:	39c0005c 	xori	r7,r7,1
   8c098:	8245c83a 	sub	r2,r16,r9
   8c09c:	3c807426 	beq	r7,r18,8c270 <__subdf3+0x244>
   8c0a0:	0080af0e 	bge	zero,r2,8c360 <__subdf3+0x334>
   8c0a4:	48002a1e 	bne	r9,zero,8c150 <__subdf3+0x124>
   8c0a8:	2988b03a 	or	r4,r5,r6
   8c0ac:	20009a1e 	bne	r4,zero,8c318 <__subdf3+0x2ec>
   8c0b0:	888001cc 	andi	r2,r17,7
   8c0b4:	10000726 	beq	r2,zero,8c0d4 <__subdf3+0xa8>
   8c0b8:	888003cc 	andi	r2,r17,15
   8c0bc:	01000104 	movi	r4,4
   8c0c0:	11000426 	beq	r2,r4,8c0d4 <__subdf3+0xa8>
   8c0c4:	890b883a 	add	r5,r17,r4
   8c0c8:	2c63803a 	cmpltu	r17,r5,r17
   8c0cc:	1c47883a 	add	r3,r3,r17
   8c0d0:	2823883a 	mov	r17,r5
   8c0d4:	1880202c 	andhi	r2,r3,128
   8c0d8:	10005926 	beq	r2,zero,8c240 <__subdf3+0x214>
   8c0dc:	84000044 	addi	r16,r16,1
   8c0e0:	0081ffc4 	movi	r2,2047
   8c0e4:	8080be26 	beq	r16,r2,8c3e0 <__subdf3+0x3b4>
   8c0e8:	017fe034 	movhi	r5,65408
   8c0ec:	297fffc4 	addi	r5,r5,-1
   8c0f0:	1946703a 	and	r3,r3,r5
   8c0f4:	1804977a 	slli	r2,r3,29
   8c0f8:	1806927a 	slli	r3,r3,9
   8c0fc:	8822d0fa 	srli	r17,r17,3
   8c100:	8401ffcc 	andi	r16,r16,2047
   8c104:	180ad33a 	srli	r5,r3,12
   8c108:	9100004c 	andi	r4,r18,1
   8c10c:	1444b03a 	or	r2,r2,r17
   8c110:	80c1ffcc 	andi	r3,r16,2047
   8c114:	1820953a 	slli	r16,r3,20
   8c118:	20c03fcc 	andi	r3,r4,255
   8c11c:	180897fa 	slli	r4,r3,31
   8c120:	00c00434 	movhi	r3,16
   8c124:	18ffffc4 	addi	r3,r3,-1
   8c128:	28c6703a 	and	r3,r5,r3
   8c12c:	1c06b03a 	or	r3,r3,r16
   8c130:	1906b03a 	or	r3,r3,r4
   8c134:	dfc00417 	ldw	ra,16(sp)
   8c138:	dcc00317 	ldw	r19,12(sp)
   8c13c:	dc800217 	ldw	r18,8(sp)
   8c140:	dc400117 	ldw	r17,4(sp)
   8c144:	dc000017 	ldw	r16,0(sp)
   8c148:	dec00504 	addi	sp,sp,20
   8c14c:	f800283a 	ret
   8c150:	0101ffc4 	movi	r4,2047
   8c154:	813fd626 	beq	r16,r4,8c0b0 <__subdf3+0x84>
   8c158:	29402034 	orhi	r5,r5,128
   8c15c:	01000e04 	movi	r4,56
   8c160:	2080a316 	blt	r4,r2,8c3f0 <__subdf3+0x3c4>
   8c164:	010007c4 	movi	r4,31
   8c168:	2080c616 	blt	r4,r2,8c484 <__subdf3+0x458>
   8c16c:	01000804 	movi	r4,32
   8c170:	2089c83a 	sub	r4,r4,r2
   8c174:	2910983a 	sll	r8,r5,r4
   8c178:	308ed83a 	srl	r7,r6,r2
   8c17c:	3108983a 	sll	r4,r6,r4
   8c180:	2884d83a 	srl	r2,r5,r2
   8c184:	41ccb03a 	or	r6,r8,r7
   8c188:	2008c03a 	cmpne	r4,r4,zero
   8c18c:	310cb03a 	or	r6,r6,r4
   8c190:	898dc83a 	sub	r6,r17,r6
   8c194:	89a3803a 	cmpltu	r17,r17,r6
   8c198:	1887c83a 	sub	r3,r3,r2
   8c19c:	1c47c83a 	sub	r3,r3,r17
   8c1a0:	3023883a 	mov	r17,r6
   8c1a4:	1880202c 	andhi	r2,r3,128
   8c1a8:	10002326 	beq	r2,zero,8c238 <__subdf3+0x20c>
   8c1ac:	04c02034 	movhi	r19,128
   8c1b0:	9cffffc4 	addi	r19,r19,-1
   8c1b4:	1ce6703a 	and	r19,r3,r19
   8c1b8:	98007a26 	beq	r19,zero,8c3a4 <__subdf3+0x378>
   8c1bc:	9809883a 	mov	r4,r19
   8c1c0:	008cb2c0 	call	8cb2c <__clzsi2>
   8c1c4:	113ffe04 	addi	r4,r2,-8
   8c1c8:	00c007c4 	movi	r3,31
   8c1cc:	19007b16 	blt	r3,r4,8c3bc <__subdf3+0x390>
   8c1d0:	00800804 	movi	r2,32
   8c1d4:	1105c83a 	sub	r2,r2,r4
   8c1d8:	8884d83a 	srl	r2,r17,r2
   8c1dc:	9906983a 	sll	r3,r19,r4
   8c1e0:	8922983a 	sll	r17,r17,r4
   8c1e4:	10c4b03a 	or	r2,r2,r3
   8c1e8:	24007816 	blt	r4,r16,8c3cc <__subdf3+0x3a0>
   8c1ec:	2421c83a 	sub	r16,r4,r16
   8c1f0:	80c00044 	addi	r3,r16,1
   8c1f4:	010007c4 	movi	r4,31
   8c1f8:	20c09516 	blt	r4,r3,8c450 <__subdf3+0x424>
   8c1fc:	01400804 	movi	r5,32
   8c200:	28cbc83a 	sub	r5,r5,r3
   8c204:	88c8d83a 	srl	r4,r17,r3
   8c208:	8962983a 	sll	r17,r17,r5
   8c20c:	114a983a 	sll	r5,r2,r5
   8c210:	10c6d83a 	srl	r3,r2,r3
   8c214:	8804c03a 	cmpne	r2,r17,zero
   8c218:	290ab03a 	or	r5,r5,r4
   8c21c:	28a2b03a 	or	r17,r5,r2
   8c220:	0021883a 	mov	r16,zero
   8c224:	003fa206 	br	8c0b0 <__subdf3+0x84>
   8c228:	2090b03a 	or	r8,r4,r2
   8c22c:	40018e26 	beq	r8,zero,8c868 <__subdf3+0x83c>
   8c230:	1007883a 	mov	r3,r2
   8c234:	2023883a 	mov	r17,r4
   8c238:	888001cc 	andi	r2,r17,7
   8c23c:	103f9e1e 	bne	r2,zero,8c0b8 <__subdf3+0x8c>
   8c240:	1804977a 	slli	r2,r3,29
   8c244:	8822d0fa 	srli	r17,r17,3
   8c248:	1810d0fa 	srli	r8,r3,3
   8c24c:	9100004c 	andi	r4,r18,1
   8c250:	1444b03a 	or	r2,r2,r17
   8c254:	00c1ffc4 	movi	r3,2047
   8c258:	80c02826 	beq	r16,r3,8c2fc <__subdf3+0x2d0>
   8c25c:	01400434 	movhi	r5,16
   8c260:	297fffc4 	addi	r5,r5,-1
   8c264:	80e0703a 	and	r16,r16,r3
   8c268:	414a703a 	and	r5,r8,r5
   8c26c:	003fa806 	br	8c110 <__subdf3+0xe4>
   8c270:	0080630e 	bge	zero,r2,8c400 <__subdf3+0x3d4>
   8c274:	48003026 	beq	r9,zero,8c338 <__subdf3+0x30c>
   8c278:	0101ffc4 	movi	r4,2047
   8c27c:	813f8c26 	beq	r16,r4,8c0b0 <__subdf3+0x84>
   8c280:	29402034 	orhi	r5,r5,128
   8c284:	01000e04 	movi	r4,56
   8c288:	2080a90e 	bge	r4,r2,8c530 <__subdf3+0x504>
   8c28c:	298cb03a 	or	r6,r5,r6
   8c290:	3012c03a 	cmpne	r9,r6,zero
   8c294:	0005883a 	mov	r2,zero
   8c298:	4c53883a 	add	r9,r9,r17
   8c29c:	4c63803a 	cmpltu	r17,r9,r17
   8c2a0:	10c7883a 	add	r3,r2,r3
   8c2a4:	88c7883a 	add	r3,r17,r3
   8c2a8:	4823883a 	mov	r17,r9
   8c2ac:	1880202c 	andhi	r2,r3,128
   8c2b0:	1000d026 	beq	r2,zero,8c5f4 <__subdf3+0x5c8>
   8c2b4:	84000044 	addi	r16,r16,1
   8c2b8:	0081ffc4 	movi	r2,2047
   8c2bc:	8080fe26 	beq	r16,r2,8c6b8 <__subdf3+0x68c>
   8c2c0:	00bfe034 	movhi	r2,65408
   8c2c4:	10bfffc4 	addi	r2,r2,-1
   8c2c8:	1886703a 	and	r3,r3,r2
   8c2cc:	880ad07a 	srli	r5,r17,1
   8c2d0:	180497fa 	slli	r2,r3,31
   8c2d4:	8900004c 	andi	r4,r17,1
   8c2d8:	2922b03a 	or	r17,r5,r4
   8c2dc:	1806d07a 	srli	r3,r3,1
   8c2e0:	1462b03a 	or	r17,r2,r17
   8c2e4:	3825883a 	mov	r18,r7
   8c2e8:	003f7106 	br	8c0b0 <__subdf3+0x84>
   8c2ec:	2984b03a 	or	r2,r5,r6
   8c2f0:	103f6826 	beq	r2,zero,8c094 <__subdf3+0x68>
   8c2f4:	39c03fcc 	andi	r7,r7,255
   8c2f8:	003f6706 	br	8c098 <__subdf3+0x6c>
   8c2fc:	4086b03a 	or	r3,r8,r2
   8c300:	18015226 	beq	r3,zero,8c84c <__subdf3+0x820>
   8c304:	00c00434 	movhi	r3,16
   8c308:	41400234 	orhi	r5,r8,8
   8c30c:	18ffffc4 	addi	r3,r3,-1
   8c310:	28ca703a 	and	r5,r5,r3
   8c314:	003f7e06 	br	8c110 <__subdf3+0xe4>
   8c318:	10bfffc4 	addi	r2,r2,-1
   8c31c:	1000491e 	bne	r2,zero,8c444 <__subdf3+0x418>
   8c320:	898fc83a 	sub	r7,r17,r6
   8c324:	89e3803a 	cmpltu	r17,r17,r7
   8c328:	1947c83a 	sub	r3,r3,r5
   8c32c:	1c47c83a 	sub	r3,r3,r17
   8c330:	3823883a 	mov	r17,r7
   8c334:	003f9b06 	br	8c1a4 <__subdf3+0x178>
   8c338:	2988b03a 	or	r4,r5,r6
   8c33c:	203f5c26 	beq	r4,zero,8c0b0 <__subdf3+0x84>
   8c340:	10bfffc4 	addi	r2,r2,-1
   8c344:	1000931e 	bne	r2,zero,8c594 <__subdf3+0x568>
   8c348:	898d883a 	add	r6,r17,r6
   8c34c:	3463803a 	cmpltu	r17,r6,r17
   8c350:	1947883a 	add	r3,r3,r5
   8c354:	88c7883a 	add	r3,r17,r3
   8c358:	3023883a 	mov	r17,r6
   8c35c:	003fd306 	br	8c2ac <__subdf3+0x280>
   8c360:	1000541e 	bne	r2,zero,8c4b4 <__subdf3+0x488>
   8c364:	80800044 	addi	r2,r16,1
   8c368:	1081ffcc 	andi	r2,r2,2047
   8c36c:	01000044 	movi	r4,1
   8c370:	2080a20e 	bge	r4,r2,8c5fc <__subdf3+0x5d0>
   8c374:	8989c83a 	sub	r4,r17,r6
   8c378:	8905803a 	cmpltu	r2,r17,r4
   8c37c:	1967c83a 	sub	r19,r3,r5
   8c380:	98a7c83a 	sub	r19,r19,r2
   8c384:	9880202c 	andhi	r2,r19,128
   8c388:	10006326 	beq	r2,zero,8c518 <__subdf3+0x4ec>
   8c38c:	3463c83a 	sub	r17,r6,r17
   8c390:	28c7c83a 	sub	r3,r5,r3
   8c394:	344d803a 	cmpltu	r6,r6,r17
   8c398:	19a7c83a 	sub	r19,r3,r6
   8c39c:	3825883a 	mov	r18,r7
   8c3a0:	983f861e 	bne	r19,zero,8c1bc <__subdf3+0x190>
   8c3a4:	8809883a 	mov	r4,r17
   8c3a8:	008cb2c0 	call	8cb2c <__clzsi2>
   8c3ac:	10800804 	addi	r2,r2,32
   8c3b0:	113ffe04 	addi	r4,r2,-8
   8c3b4:	00c007c4 	movi	r3,31
   8c3b8:	193f850e 	bge	r3,r4,8c1d0 <__subdf3+0x1a4>
   8c3bc:	10bff604 	addi	r2,r2,-40
   8c3c0:	8884983a 	sll	r2,r17,r2
   8c3c4:	0023883a 	mov	r17,zero
   8c3c8:	243f880e 	bge	r4,r16,8c1ec <__subdf3+0x1c0>
   8c3cc:	00ffe034 	movhi	r3,65408
   8c3d0:	18ffffc4 	addi	r3,r3,-1
   8c3d4:	8121c83a 	sub	r16,r16,r4
   8c3d8:	10c6703a 	and	r3,r2,r3
   8c3dc:	003f3406 	br	8c0b0 <__subdf3+0x84>
   8c3e0:	9100004c 	andi	r4,r18,1
   8c3e4:	000b883a 	mov	r5,zero
   8c3e8:	0005883a 	mov	r2,zero
   8c3ec:	003f4806 	br	8c110 <__subdf3+0xe4>
   8c3f0:	298cb03a 	or	r6,r5,r6
   8c3f4:	300cc03a 	cmpne	r6,r6,zero
   8c3f8:	0005883a 	mov	r2,zero
   8c3fc:	003f6406 	br	8c190 <__subdf3+0x164>
   8c400:	10009a1e 	bne	r2,zero,8c66c <__subdf3+0x640>
   8c404:	82400044 	addi	r9,r16,1
   8c408:	4881ffcc 	andi	r2,r9,2047
   8c40c:	02800044 	movi	r10,1
   8c410:	5080670e 	bge	r10,r2,8c5b0 <__subdf3+0x584>
   8c414:	0081ffc4 	movi	r2,2047
   8c418:	4880af26 	beq	r9,r2,8c6d8 <__subdf3+0x6ac>
   8c41c:	898d883a 	add	r6,r17,r6
   8c420:	1945883a 	add	r2,r3,r5
   8c424:	3447803a 	cmpltu	r3,r6,r17
   8c428:	1887883a 	add	r3,r3,r2
   8c42c:	182297fa 	slli	r17,r3,31
   8c430:	300cd07a 	srli	r6,r6,1
   8c434:	1806d07a 	srli	r3,r3,1
   8c438:	4821883a 	mov	r16,r9
   8c43c:	89a2b03a 	or	r17,r17,r6
   8c440:	003f1b06 	br	8c0b0 <__subdf3+0x84>
   8c444:	0101ffc4 	movi	r4,2047
   8c448:	813f441e 	bne	r16,r4,8c15c <__subdf3+0x130>
   8c44c:	003f1806 	br	8c0b0 <__subdf3+0x84>
   8c450:	843ff844 	addi	r16,r16,-31
   8c454:	01400804 	movi	r5,32
   8c458:	1408d83a 	srl	r4,r2,r16
   8c45c:	19405026 	beq	r3,r5,8c5a0 <__subdf3+0x574>
   8c460:	01401004 	movi	r5,64
   8c464:	28c7c83a 	sub	r3,r5,r3
   8c468:	10c4983a 	sll	r2,r2,r3
   8c46c:	88a2b03a 	or	r17,r17,r2
   8c470:	8822c03a 	cmpne	r17,r17,zero
   8c474:	2462b03a 	or	r17,r4,r17
   8c478:	0007883a 	mov	r3,zero
   8c47c:	0021883a 	mov	r16,zero
   8c480:	003f6d06 	br	8c238 <__subdf3+0x20c>
   8c484:	11fff804 	addi	r7,r2,-32
   8c488:	01000804 	movi	r4,32
   8c48c:	29ced83a 	srl	r7,r5,r7
   8c490:	11004526 	beq	r2,r4,8c5a8 <__subdf3+0x57c>
   8c494:	01001004 	movi	r4,64
   8c498:	2089c83a 	sub	r4,r4,r2
   8c49c:	2904983a 	sll	r2,r5,r4
   8c4a0:	118cb03a 	or	r6,r2,r6
   8c4a4:	300cc03a 	cmpne	r6,r6,zero
   8c4a8:	398cb03a 	or	r6,r7,r6
   8c4ac:	0005883a 	mov	r2,zero
   8c4b0:	003f3706 	br	8c190 <__subdf3+0x164>
   8c4b4:	80002a26 	beq	r16,zero,8c560 <__subdf3+0x534>
   8c4b8:	0101ffc4 	movi	r4,2047
   8c4bc:	49006626 	beq	r9,r4,8c658 <__subdf3+0x62c>
   8c4c0:	0085c83a 	sub	r2,zero,r2
   8c4c4:	18c02034 	orhi	r3,r3,128
   8c4c8:	01000e04 	movi	r4,56
   8c4cc:	20807e16 	blt	r4,r2,8c6c8 <__subdf3+0x69c>
   8c4d0:	010007c4 	movi	r4,31
   8c4d4:	2080e716 	blt	r4,r2,8c874 <__subdf3+0x848>
   8c4d8:	01000804 	movi	r4,32
   8c4dc:	2089c83a 	sub	r4,r4,r2
   8c4e0:	1914983a 	sll	r10,r3,r4
   8c4e4:	8890d83a 	srl	r8,r17,r2
   8c4e8:	8908983a 	sll	r4,r17,r4
   8c4ec:	1884d83a 	srl	r2,r3,r2
   8c4f0:	5222b03a 	or	r17,r10,r8
   8c4f4:	2006c03a 	cmpne	r3,r4,zero
   8c4f8:	88e2b03a 	or	r17,r17,r3
   8c4fc:	3463c83a 	sub	r17,r6,r17
   8c500:	2885c83a 	sub	r2,r5,r2
   8c504:	344d803a 	cmpltu	r6,r6,r17
   8c508:	1187c83a 	sub	r3,r2,r6
   8c50c:	4821883a 	mov	r16,r9
   8c510:	3825883a 	mov	r18,r7
   8c514:	003f2306 	br	8c1a4 <__subdf3+0x178>
   8c518:	24d0b03a 	or	r8,r4,r19
   8c51c:	40001b1e 	bne	r8,zero,8c58c <__subdf3+0x560>
   8c520:	0005883a 	mov	r2,zero
   8c524:	0009883a 	mov	r4,zero
   8c528:	0021883a 	mov	r16,zero
   8c52c:	003f4906 	br	8c254 <__subdf3+0x228>
   8c530:	010007c4 	movi	r4,31
   8c534:	20803a16 	blt	r4,r2,8c620 <__subdf3+0x5f4>
   8c538:	01000804 	movi	r4,32
   8c53c:	2089c83a 	sub	r4,r4,r2
   8c540:	2912983a 	sll	r9,r5,r4
   8c544:	3090d83a 	srl	r8,r6,r2
   8c548:	3108983a 	sll	r4,r6,r4
   8c54c:	2884d83a 	srl	r2,r5,r2
   8c550:	4a12b03a 	or	r9,r9,r8
   8c554:	2008c03a 	cmpne	r4,r4,zero
   8c558:	4912b03a 	or	r9,r9,r4
   8c55c:	003f4e06 	br	8c298 <__subdf3+0x26c>
   8c560:	1c48b03a 	or	r4,r3,r17
   8c564:	20003c26 	beq	r4,zero,8c658 <__subdf3+0x62c>
   8c568:	0084303a 	nor	r2,zero,r2
   8c56c:	1000381e 	bne	r2,zero,8c650 <__subdf3+0x624>
   8c570:	3463c83a 	sub	r17,r6,r17
   8c574:	28c5c83a 	sub	r2,r5,r3
   8c578:	344d803a 	cmpltu	r6,r6,r17
   8c57c:	1187c83a 	sub	r3,r2,r6
   8c580:	4821883a 	mov	r16,r9
   8c584:	3825883a 	mov	r18,r7
   8c588:	003f0606 	br	8c1a4 <__subdf3+0x178>
   8c58c:	2023883a 	mov	r17,r4
   8c590:	003f0906 	br	8c1b8 <__subdf3+0x18c>
   8c594:	0101ffc4 	movi	r4,2047
   8c598:	813f3a1e 	bne	r16,r4,8c284 <__subdf3+0x258>
   8c59c:	003ec406 	br	8c0b0 <__subdf3+0x84>
   8c5a0:	0005883a 	mov	r2,zero
   8c5a4:	003fb106 	br	8c46c <__subdf3+0x440>
   8c5a8:	0005883a 	mov	r2,zero
   8c5ac:	003fbc06 	br	8c4a0 <__subdf3+0x474>
   8c5b0:	1c44b03a 	or	r2,r3,r17
   8c5b4:	80008e1e 	bne	r16,zero,8c7f0 <__subdf3+0x7c4>
   8c5b8:	1000c826 	beq	r2,zero,8c8dc <__subdf3+0x8b0>
   8c5bc:	2984b03a 	or	r2,r5,r6
   8c5c0:	103ebb26 	beq	r2,zero,8c0b0 <__subdf3+0x84>
   8c5c4:	8989883a 	add	r4,r17,r6
   8c5c8:	1945883a 	add	r2,r3,r5
   8c5cc:	2447803a 	cmpltu	r3,r4,r17
   8c5d0:	1887883a 	add	r3,r3,r2
   8c5d4:	1880202c 	andhi	r2,r3,128
   8c5d8:	2023883a 	mov	r17,r4
   8c5dc:	103f1626 	beq	r2,zero,8c238 <__subdf3+0x20c>
   8c5e0:	00bfe034 	movhi	r2,65408
   8c5e4:	10bfffc4 	addi	r2,r2,-1
   8c5e8:	5021883a 	mov	r16,r10
   8c5ec:	1886703a 	and	r3,r3,r2
   8c5f0:	003eaf06 	br	8c0b0 <__subdf3+0x84>
   8c5f4:	3825883a 	mov	r18,r7
   8c5f8:	003f0f06 	br	8c238 <__subdf3+0x20c>
   8c5fc:	1c44b03a 	or	r2,r3,r17
   8c600:	8000251e 	bne	r16,zero,8c698 <__subdf3+0x66c>
   8c604:	1000661e 	bne	r2,zero,8c7a0 <__subdf3+0x774>
   8c608:	2990b03a 	or	r8,r5,r6
   8c60c:	40009626 	beq	r8,zero,8c868 <__subdf3+0x83c>
   8c610:	2807883a 	mov	r3,r5
   8c614:	3023883a 	mov	r17,r6
   8c618:	3825883a 	mov	r18,r7
   8c61c:	003ea406 	br	8c0b0 <__subdf3+0x84>
   8c620:	127ff804 	addi	r9,r2,-32
   8c624:	01000804 	movi	r4,32
   8c628:	2a52d83a 	srl	r9,r5,r9
   8c62c:	11008c26 	beq	r2,r4,8c860 <__subdf3+0x834>
   8c630:	01001004 	movi	r4,64
   8c634:	2085c83a 	sub	r2,r4,r2
   8c638:	2884983a 	sll	r2,r5,r2
   8c63c:	118cb03a 	or	r6,r2,r6
   8c640:	300cc03a 	cmpne	r6,r6,zero
   8c644:	4992b03a 	or	r9,r9,r6
   8c648:	0005883a 	mov	r2,zero
   8c64c:	003f1206 	br	8c298 <__subdf3+0x26c>
   8c650:	0101ffc4 	movi	r4,2047
   8c654:	493f9c1e 	bne	r9,r4,8c4c8 <__subdf3+0x49c>
   8c658:	2807883a 	mov	r3,r5
   8c65c:	3023883a 	mov	r17,r6
   8c660:	4821883a 	mov	r16,r9
   8c664:	3825883a 	mov	r18,r7
   8c668:	003e9106 	br	8c0b0 <__subdf3+0x84>
   8c66c:	80001f1e 	bne	r16,zero,8c6ec <__subdf3+0x6c0>
   8c670:	1c48b03a 	or	r4,r3,r17
   8c674:	20005a26 	beq	r4,zero,8c7e0 <__subdf3+0x7b4>
   8c678:	0084303a 	nor	r2,zero,r2
   8c67c:	1000561e 	bne	r2,zero,8c7d8 <__subdf3+0x7ac>
   8c680:	89a3883a 	add	r17,r17,r6
   8c684:	1945883a 	add	r2,r3,r5
   8c688:	898d803a 	cmpltu	r6,r17,r6
   8c68c:	3087883a 	add	r3,r6,r2
   8c690:	4821883a 	mov	r16,r9
   8c694:	003f0506 	br	8c2ac <__subdf3+0x280>
   8c698:	10002b1e 	bne	r2,zero,8c748 <__subdf3+0x71c>
   8c69c:	2984b03a 	or	r2,r5,r6
   8c6a0:	10008026 	beq	r2,zero,8c8a4 <__subdf3+0x878>
   8c6a4:	2807883a 	mov	r3,r5
   8c6a8:	3023883a 	mov	r17,r6
   8c6ac:	3825883a 	mov	r18,r7
   8c6b0:	0401ffc4 	movi	r16,2047
   8c6b4:	003e7e06 	br	8c0b0 <__subdf3+0x84>
   8c6b8:	3809883a 	mov	r4,r7
   8c6bc:	0011883a 	mov	r8,zero
   8c6c0:	0005883a 	mov	r2,zero
   8c6c4:	003ee306 	br	8c254 <__subdf3+0x228>
   8c6c8:	1c62b03a 	or	r17,r3,r17
   8c6cc:	8822c03a 	cmpne	r17,r17,zero
   8c6d0:	0005883a 	mov	r2,zero
   8c6d4:	003f8906 	br	8c4fc <__subdf3+0x4d0>
   8c6d8:	3809883a 	mov	r4,r7
   8c6dc:	4821883a 	mov	r16,r9
   8c6e0:	0011883a 	mov	r8,zero
   8c6e4:	0005883a 	mov	r2,zero
   8c6e8:	003eda06 	br	8c254 <__subdf3+0x228>
   8c6ec:	0101ffc4 	movi	r4,2047
   8c6f0:	49003b26 	beq	r9,r4,8c7e0 <__subdf3+0x7b4>
   8c6f4:	0085c83a 	sub	r2,zero,r2
   8c6f8:	18c02034 	orhi	r3,r3,128
   8c6fc:	01000e04 	movi	r4,56
   8c700:	20806e16 	blt	r4,r2,8c8bc <__subdf3+0x890>
   8c704:	010007c4 	movi	r4,31
   8c708:	20807716 	blt	r4,r2,8c8e8 <__subdf3+0x8bc>
   8c70c:	01000804 	movi	r4,32
   8c710:	2089c83a 	sub	r4,r4,r2
   8c714:	1914983a 	sll	r10,r3,r4
   8c718:	8890d83a 	srl	r8,r17,r2
   8c71c:	8908983a 	sll	r4,r17,r4
   8c720:	1884d83a 	srl	r2,r3,r2
   8c724:	5222b03a 	or	r17,r10,r8
   8c728:	2006c03a 	cmpne	r3,r4,zero
   8c72c:	88e2b03a 	or	r17,r17,r3
   8c730:	89a3883a 	add	r17,r17,r6
   8c734:	1145883a 	add	r2,r2,r5
   8c738:	898d803a 	cmpltu	r6,r17,r6
   8c73c:	3087883a 	add	r3,r6,r2
   8c740:	4821883a 	mov	r16,r9
   8c744:	003ed906 	br	8c2ac <__subdf3+0x280>
   8c748:	2984b03a 	or	r2,r5,r6
   8c74c:	10004226 	beq	r2,zero,8c858 <__subdf3+0x82c>
   8c750:	1808d0fa 	srli	r4,r3,3
   8c754:	8822d0fa 	srli	r17,r17,3
   8c758:	1806977a 	slli	r3,r3,29
   8c75c:	2080022c 	andhi	r2,r4,8
   8c760:	1c62b03a 	or	r17,r3,r17
   8c764:	10000826 	beq	r2,zero,8c788 <__subdf3+0x75c>
   8c768:	2812d0fa 	srli	r9,r5,3
   8c76c:	4880022c 	andhi	r2,r9,8
   8c770:	1000051e 	bne	r2,zero,8c788 <__subdf3+0x75c>
   8c774:	300cd0fa 	srli	r6,r6,3
   8c778:	2804977a 	slli	r2,r5,29
   8c77c:	4809883a 	mov	r4,r9
   8c780:	3825883a 	mov	r18,r7
   8c784:	11a2b03a 	or	r17,r2,r6
   8c788:	8806d77a 	srli	r3,r17,29
   8c78c:	200890fa 	slli	r4,r4,3
   8c790:	882290fa 	slli	r17,r17,3
   8c794:	0401ffc4 	movi	r16,2047
   8c798:	1906b03a 	or	r3,r3,r4
   8c79c:	003e4406 	br	8c0b0 <__subdf3+0x84>
   8c7a0:	2984b03a 	or	r2,r5,r6
   8c7a4:	103e4226 	beq	r2,zero,8c0b0 <__subdf3+0x84>
   8c7a8:	8989c83a 	sub	r4,r17,r6
   8c7ac:	8911803a 	cmpltu	r8,r17,r4
   8c7b0:	1945c83a 	sub	r2,r3,r5
   8c7b4:	1205c83a 	sub	r2,r2,r8
   8c7b8:	1200202c 	andhi	r8,r2,128
   8c7bc:	403e9a26 	beq	r8,zero,8c228 <__subdf3+0x1fc>
   8c7c0:	3463c83a 	sub	r17,r6,r17
   8c7c4:	28c5c83a 	sub	r2,r5,r3
   8c7c8:	344d803a 	cmpltu	r6,r6,r17
   8c7cc:	1187c83a 	sub	r3,r2,r6
   8c7d0:	3825883a 	mov	r18,r7
   8c7d4:	003e3606 	br	8c0b0 <__subdf3+0x84>
   8c7d8:	0101ffc4 	movi	r4,2047
   8c7dc:	493fc71e 	bne	r9,r4,8c6fc <__subdf3+0x6d0>
   8c7e0:	2807883a 	mov	r3,r5
   8c7e4:	3023883a 	mov	r17,r6
   8c7e8:	4821883a 	mov	r16,r9
   8c7ec:	003e3006 	br	8c0b0 <__subdf3+0x84>
   8c7f0:	10003626 	beq	r2,zero,8c8cc <__subdf3+0x8a0>
   8c7f4:	2984b03a 	or	r2,r5,r6
   8c7f8:	10001726 	beq	r2,zero,8c858 <__subdf3+0x82c>
   8c7fc:	1808d0fa 	srli	r4,r3,3
   8c800:	8822d0fa 	srli	r17,r17,3
   8c804:	1806977a 	slli	r3,r3,29
   8c808:	2080022c 	andhi	r2,r4,8
   8c80c:	1c62b03a 	or	r17,r3,r17
   8c810:	10000726 	beq	r2,zero,8c830 <__subdf3+0x804>
   8c814:	2812d0fa 	srli	r9,r5,3
   8c818:	4880022c 	andhi	r2,r9,8
   8c81c:	1000041e 	bne	r2,zero,8c830 <__subdf3+0x804>
   8c820:	300cd0fa 	srli	r6,r6,3
   8c824:	2804977a 	slli	r2,r5,29
   8c828:	4809883a 	mov	r4,r9
   8c82c:	11a2b03a 	or	r17,r2,r6
   8c830:	8806d77a 	srli	r3,r17,29
   8c834:	200890fa 	slli	r4,r4,3
   8c838:	882290fa 	slli	r17,r17,3
   8c83c:	3825883a 	mov	r18,r7
   8c840:	1906b03a 	or	r3,r3,r4
   8c844:	0401ffc4 	movi	r16,2047
   8c848:	003e1906 	br	8c0b0 <__subdf3+0x84>
   8c84c:	000b883a 	mov	r5,zero
   8c850:	0005883a 	mov	r2,zero
   8c854:	003e2e06 	br	8c110 <__subdf3+0xe4>
   8c858:	0401ffc4 	movi	r16,2047
   8c85c:	003e1406 	br	8c0b0 <__subdf3+0x84>
   8c860:	0005883a 	mov	r2,zero
   8c864:	003f7506 	br	8c63c <__subdf3+0x610>
   8c868:	0005883a 	mov	r2,zero
   8c86c:	0009883a 	mov	r4,zero
   8c870:	003e7806 	br	8c254 <__subdf3+0x228>
   8c874:	123ff804 	addi	r8,r2,-32
   8c878:	01000804 	movi	r4,32
   8c87c:	1a10d83a 	srl	r8,r3,r8
   8c880:	11002526 	beq	r2,r4,8c918 <__subdf3+0x8ec>
   8c884:	01001004 	movi	r4,64
   8c888:	2085c83a 	sub	r2,r4,r2
   8c88c:	1884983a 	sll	r2,r3,r2
   8c890:	1444b03a 	or	r2,r2,r17
   8c894:	1004c03a 	cmpne	r2,r2,zero
   8c898:	40a2b03a 	or	r17,r8,r2
   8c89c:	0005883a 	mov	r2,zero
   8c8a0:	003f1606 	br	8c4fc <__subdf3+0x4d0>
   8c8a4:	02000434 	movhi	r8,16
   8c8a8:	0009883a 	mov	r4,zero
   8c8ac:	423fffc4 	addi	r8,r8,-1
   8c8b0:	00bfffc4 	movi	r2,-1
   8c8b4:	0401ffc4 	movi	r16,2047
   8c8b8:	003e6606 	br	8c254 <__subdf3+0x228>
   8c8bc:	1c62b03a 	or	r17,r3,r17
   8c8c0:	8822c03a 	cmpne	r17,r17,zero
   8c8c4:	0005883a 	mov	r2,zero
   8c8c8:	003f9906 	br	8c730 <__subdf3+0x704>
   8c8cc:	2807883a 	mov	r3,r5
   8c8d0:	3023883a 	mov	r17,r6
   8c8d4:	0401ffc4 	movi	r16,2047
   8c8d8:	003df506 	br	8c0b0 <__subdf3+0x84>
   8c8dc:	2807883a 	mov	r3,r5
   8c8e0:	3023883a 	mov	r17,r6
   8c8e4:	003df206 	br	8c0b0 <__subdf3+0x84>
   8c8e8:	123ff804 	addi	r8,r2,-32
   8c8ec:	01000804 	movi	r4,32
   8c8f0:	1a10d83a 	srl	r8,r3,r8
   8c8f4:	11000a26 	beq	r2,r4,8c920 <__subdf3+0x8f4>
   8c8f8:	01001004 	movi	r4,64
   8c8fc:	2085c83a 	sub	r2,r4,r2
   8c900:	1884983a 	sll	r2,r3,r2
   8c904:	1444b03a 	or	r2,r2,r17
   8c908:	1004c03a 	cmpne	r2,r2,zero
   8c90c:	40a2b03a 	or	r17,r8,r2
   8c910:	0005883a 	mov	r2,zero
   8c914:	003f8606 	br	8c730 <__subdf3+0x704>
   8c918:	0005883a 	mov	r2,zero
   8c91c:	003fdc06 	br	8c890 <__subdf3+0x864>
   8c920:	0005883a 	mov	r2,zero
   8c924:	003ff706 	br	8c904 <__subdf3+0x8d8>

0008c928 <__fixdfsi>:
   8c928:	280cd53a 	srli	r6,r5,20
   8c92c:	00c00434 	movhi	r3,16
   8c930:	18ffffc4 	addi	r3,r3,-1
   8c934:	3181ffcc 	andi	r6,r6,2047
   8c938:	01c0ff84 	movi	r7,1022
   8c93c:	28c6703a 	and	r3,r5,r3
   8c940:	280ad7fa 	srli	r5,r5,31
   8c944:	3980120e 	bge	r7,r6,8c990 <__fixdfsi+0x68>
   8c948:	00810744 	movi	r2,1053
   8c94c:	11800c16 	blt	r2,r6,8c980 <__fixdfsi+0x58>
   8c950:	00810cc4 	movi	r2,1075
   8c954:	1185c83a 	sub	r2,r2,r6
   8c958:	01c007c4 	movi	r7,31
   8c95c:	18c00434 	orhi	r3,r3,16
   8c960:	38800d16 	blt	r7,r2,8c998 <__fixdfsi+0x70>
   8c964:	31befb44 	addi	r6,r6,-1043
   8c968:	2084d83a 	srl	r2,r4,r2
   8c96c:	1986983a 	sll	r3,r3,r6
   8c970:	1884b03a 	or	r2,r3,r2
   8c974:	28000726 	beq	r5,zero,8c994 <__fixdfsi+0x6c>
   8c978:	0085c83a 	sub	r2,zero,r2
   8c97c:	f800283a 	ret
   8c980:	00a00034 	movhi	r2,32768
   8c984:	10bfffc4 	addi	r2,r2,-1
   8c988:	2885883a 	add	r2,r5,r2
   8c98c:	f800283a 	ret
   8c990:	0005883a 	mov	r2,zero
   8c994:	f800283a 	ret
   8c998:	008104c4 	movi	r2,1043
   8c99c:	1185c83a 	sub	r2,r2,r6
   8c9a0:	1884d83a 	srl	r2,r3,r2
   8c9a4:	003ff306 	br	8c974 <__fixdfsi+0x4c>

0008c9a8 <__floatsidf>:
   8c9a8:	defffd04 	addi	sp,sp,-12
   8c9ac:	dfc00215 	stw	ra,8(sp)
   8c9b0:	dc400115 	stw	r17,4(sp)
   8c9b4:	dc000015 	stw	r16,0(sp)
   8c9b8:	20002b26 	beq	r4,zero,8ca68 <__floatsidf+0xc0>
   8c9bc:	2023883a 	mov	r17,r4
   8c9c0:	2020d7fa 	srli	r16,r4,31
   8c9c4:	20002d16 	blt	r4,zero,8ca7c <__floatsidf+0xd4>
   8c9c8:	8809883a 	mov	r4,r17
   8c9cc:	008cb2c0 	call	8cb2c <__clzsi2>
   8c9d0:	01410784 	movi	r5,1054
   8c9d4:	288bc83a 	sub	r5,r5,r2
   8c9d8:	01010cc4 	movi	r4,1075
   8c9dc:	2149c83a 	sub	r4,r4,r5
   8c9e0:	00c007c4 	movi	r3,31
   8c9e4:	1900160e 	bge	r3,r4,8ca40 <__floatsidf+0x98>
   8c9e8:	00c104c4 	movi	r3,1043
   8c9ec:	1947c83a 	sub	r3,r3,r5
   8c9f0:	88c6983a 	sll	r3,r17,r3
   8c9f4:	00800434 	movhi	r2,16
   8c9f8:	10bfffc4 	addi	r2,r2,-1
   8c9fc:	1886703a 	and	r3,r3,r2
   8ca00:	2941ffcc 	andi	r5,r5,2047
   8ca04:	800d883a 	mov	r6,r16
   8ca08:	0005883a 	mov	r2,zero
   8ca0c:	280a953a 	slli	r5,r5,20
   8ca10:	31803fcc 	andi	r6,r6,255
   8ca14:	01000434 	movhi	r4,16
   8ca18:	300c97fa 	slli	r6,r6,31
   8ca1c:	213fffc4 	addi	r4,r4,-1
   8ca20:	1906703a 	and	r3,r3,r4
   8ca24:	1946b03a 	or	r3,r3,r5
   8ca28:	1986b03a 	or	r3,r3,r6
   8ca2c:	dfc00217 	ldw	ra,8(sp)
   8ca30:	dc400117 	ldw	r17,4(sp)
   8ca34:	dc000017 	ldw	r16,0(sp)
   8ca38:	dec00304 	addi	sp,sp,12
   8ca3c:	f800283a 	ret
   8ca40:	00c002c4 	movi	r3,11
   8ca44:	1887c83a 	sub	r3,r3,r2
   8ca48:	88c6d83a 	srl	r3,r17,r3
   8ca4c:	8904983a 	sll	r2,r17,r4
   8ca50:	01000434 	movhi	r4,16
   8ca54:	213fffc4 	addi	r4,r4,-1
   8ca58:	2941ffcc 	andi	r5,r5,2047
   8ca5c:	1906703a 	and	r3,r3,r4
   8ca60:	800d883a 	mov	r6,r16
   8ca64:	003fe906 	br	8ca0c <__floatsidf+0x64>
   8ca68:	000d883a 	mov	r6,zero
   8ca6c:	000b883a 	mov	r5,zero
   8ca70:	0007883a 	mov	r3,zero
   8ca74:	0005883a 	mov	r2,zero
   8ca78:	003fe406 	br	8ca0c <__floatsidf+0x64>
   8ca7c:	0123c83a 	sub	r17,zero,r4
   8ca80:	003fd106 	br	8c9c8 <__floatsidf+0x20>

0008ca84 <__floatunsidf>:
   8ca84:	defffe04 	addi	sp,sp,-8
   8ca88:	dc000015 	stw	r16,0(sp)
   8ca8c:	dfc00115 	stw	ra,4(sp)
   8ca90:	2021883a 	mov	r16,r4
   8ca94:	20002226 	beq	r4,zero,8cb20 <__floatunsidf+0x9c>
   8ca98:	008cb2c0 	call	8cb2c <__clzsi2>
   8ca9c:	01010784 	movi	r4,1054
   8caa0:	2089c83a 	sub	r4,r4,r2
   8caa4:	01810cc4 	movi	r6,1075
   8caa8:	310dc83a 	sub	r6,r6,r4
   8caac:	00c007c4 	movi	r3,31
   8cab0:	1980120e 	bge	r3,r6,8cafc <__floatunsidf+0x78>
   8cab4:	00c104c4 	movi	r3,1043
   8cab8:	1907c83a 	sub	r3,r3,r4
   8cabc:	80ca983a 	sll	r5,r16,r3
   8cac0:	00800434 	movhi	r2,16
   8cac4:	10bfffc4 	addi	r2,r2,-1
   8cac8:	2101ffcc 	andi	r4,r4,2047
   8cacc:	0021883a 	mov	r16,zero
   8cad0:	288a703a 	and	r5,r5,r2
   8cad4:	2008953a 	slli	r4,r4,20
   8cad8:	00c00434 	movhi	r3,16
   8cadc:	18ffffc4 	addi	r3,r3,-1
   8cae0:	28c6703a 	and	r3,r5,r3
   8cae4:	8005883a 	mov	r2,r16
   8cae8:	1906b03a 	or	r3,r3,r4
   8caec:	dfc00117 	ldw	ra,4(sp)
   8caf0:	dc000017 	ldw	r16,0(sp)
   8caf4:	dec00204 	addi	sp,sp,8
   8caf8:	f800283a 	ret
   8cafc:	00c002c4 	movi	r3,11
   8cb00:	188bc83a 	sub	r5,r3,r2
   8cb04:	814ad83a 	srl	r5,r16,r5
   8cb08:	00c00434 	movhi	r3,16
   8cb0c:	18ffffc4 	addi	r3,r3,-1
   8cb10:	81a0983a 	sll	r16,r16,r6
   8cb14:	2101ffcc 	andi	r4,r4,2047
   8cb18:	28ca703a 	and	r5,r5,r3
   8cb1c:	003fed06 	br	8cad4 <__floatunsidf+0x50>
   8cb20:	0009883a 	mov	r4,zero
   8cb24:	000b883a 	mov	r5,zero
   8cb28:	003fea06 	br	8cad4 <__floatunsidf+0x50>

0008cb2c <__clzsi2>:
   8cb2c:	00bfffd4 	movui	r2,65535
   8cb30:	11000536 	bltu	r2,r4,8cb48 <__clzsi2+0x1c>
   8cb34:	00803fc4 	movi	r2,255
   8cb38:	11000f36 	bltu	r2,r4,8cb78 <__clzsi2+0x4c>
   8cb3c:	00800804 	movi	r2,32
   8cb40:	0007883a 	mov	r3,zero
   8cb44:	00000506 	br	8cb5c <__clzsi2+0x30>
   8cb48:	00804034 	movhi	r2,256
   8cb4c:	10bfffc4 	addi	r2,r2,-1
   8cb50:	11000c2e 	bgeu	r2,r4,8cb84 <__clzsi2+0x58>
   8cb54:	00800204 	movi	r2,8
   8cb58:	00c00604 	movi	r3,24
   8cb5c:	20c8d83a 	srl	r4,r4,r3
   8cb60:	00c00274 	movhi	r3,9
   8cb64:	18febf04 	addi	r3,r3,-1284
   8cb68:	1909883a 	add	r4,r3,r4
   8cb6c:	20c00003 	ldbu	r3,0(r4)
   8cb70:	10c5c83a 	sub	r2,r2,r3
   8cb74:	f800283a 	ret
   8cb78:	00800604 	movi	r2,24
   8cb7c:	00c00204 	movi	r3,8
   8cb80:	003ff606 	br	8cb5c <__clzsi2+0x30>
   8cb84:	00800404 	movi	r2,16
   8cb88:	1007883a 	mov	r3,r2
   8cb8c:	003ff306 	br	8cb5c <__clzsi2+0x30>

0008cb90 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8cb90:	defffe04 	addi	sp,sp,-8
   8cb94:	dfc00115 	stw	ra,4(sp)
   8cb98:	df000015 	stw	fp,0(sp)
   8cb9c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8cba0:	00800274 	movhi	r2,9
   8cba4:	1085c004 	addi	r2,r2,5888
   8cba8:	10800017 	ldw	r2,0(r2)
   8cbac:	10000526 	beq	r2,zero,8cbc4 <alt_get_errno+0x34>
   8cbb0:	00800274 	movhi	r2,9
   8cbb4:	1085c004 	addi	r2,r2,5888
   8cbb8:	10800017 	ldw	r2,0(r2)
   8cbbc:	103ee83a 	callr	r2
   8cbc0:	00000206 	br	8cbcc <alt_get_errno+0x3c>
   8cbc4:	00800274 	movhi	r2,9
   8cbc8:	108c8604 	addi	r2,r2,12824
}
   8cbcc:	e037883a 	mov	sp,fp
   8cbd0:	dfc00117 	ldw	ra,4(sp)
   8cbd4:	df000017 	ldw	fp,0(sp)
   8cbd8:	dec00204 	addi	sp,sp,8
   8cbdc:	f800283a 	ret

0008cbe0 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   8cbe0:	defffb04 	addi	sp,sp,-20
   8cbe4:	dfc00415 	stw	ra,16(sp)
   8cbe8:	df000315 	stw	fp,12(sp)
   8cbec:	df000304 	addi	fp,sp,12
   8cbf0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   8cbf4:	e0bfff17 	ldw	r2,-4(fp)
   8cbf8:	10000616 	blt	r2,zero,8cc14 <close+0x34>
   8cbfc:	e0bfff17 	ldw	r2,-4(fp)
   8cc00:	10c00324 	muli	r3,r2,12
   8cc04:	00800274 	movhi	r2,9
   8cc08:	10813d04 	addi	r2,r2,1268
   8cc0c:	1885883a 	add	r2,r3,r2
   8cc10:	00000106 	br	8cc18 <close+0x38>
   8cc14:	0005883a 	mov	r2,zero
   8cc18:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   8cc1c:	e0bffd17 	ldw	r2,-12(fp)
   8cc20:	10001926 	beq	r2,zero,8cc88 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   8cc24:	e0bffd17 	ldw	r2,-12(fp)
   8cc28:	10800017 	ldw	r2,0(r2)
   8cc2c:	10800417 	ldw	r2,16(r2)
   8cc30:	10000626 	beq	r2,zero,8cc4c <close+0x6c>
   8cc34:	e0bffd17 	ldw	r2,-12(fp)
   8cc38:	10800017 	ldw	r2,0(r2)
   8cc3c:	10800417 	ldw	r2,16(r2)
   8cc40:	e13ffd17 	ldw	r4,-12(fp)
   8cc44:	103ee83a 	callr	r2
   8cc48:	00000106 	br	8cc50 <close+0x70>
   8cc4c:	0005883a 	mov	r2,zero
   8cc50:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   8cc54:	e13fff17 	ldw	r4,-4(fp)
   8cc58:	008d5600 	call	8d560 <alt_release_fd>
    if (rval < 0)
   8cc5c:	e0bffe17 	ldw	r2,-8(fp)
   8cc60:	1000070e 	bge	r2,zero,8cc80 <close+0xa0>
    {
      ALT_ERRNO = -rval;
   8cc64:	008cb900 	call	8cb90 <alt_get_errno>
   8cc68:	1007883a 	mov	r3,r2
   8cc6c:	e0bffe17 	ldw	r2,-8(fp)
   8cc70:	0085c83a 	sub	r2,zero,r2
   8cc74:	18800015 	stw	r2,0(r3)
      return -1;
   8cc78:	00bfffc4 	movi	r2,-1
   8cc7c:	00000706 	br	8cc9c <close+0xbc>
    }
    return 0;
   8cc80:	0005883a 	mov	r2,zero
   8cc84:	00000506 	br	8cc9c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8cc88:	008cb900 	call	8cb90 <alt_get_errno>
   8cc8c:	1007883a 	mov	r3,r2
   8cc90:	00801444 	movi	r2,81
   8cc94:	18800015 	stw	r2,0(r3)
    return -1;
   8cc98:	00bfffc4 	movi	r2,-1
  }
}
   8cc9c:	e037883a 	mov	sp,fp
   8cca0:	dfc00117 	ldw	ra,4(sp)
   8cca4:	df000017 	ldw	fp,0(sp)
   8cca8:	dec00204 	addi	sp,sp,8
   8ccac:	f800283a 	ret

0008ccb0 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   8ccb0:	defffc04 	addi	sp,sp,-16
   8ccb4:	df000315 	stw	fp,12(sp)
   8ccb8:	df000304 	addi	fp,sp,12
   8ccbc:	e13ffd15 	stw	r4,-12(fp)
   8ccc0:	e17ffe15 	stw	r5,-8(fp)
   8ccc4:	e1bfff15 	stw	r6,-4(fp)
  return len;
   8ccc8:	e0bfff17 	ldw	r2,-4(fp)
}
   8cccc:	e037883a 	mov	sp,fp
   8ccd0:	df000017 	ldw	fp,0(sp)
   8ccd4:	dec00104 	addi	sp,sp,4
   8ccd8:	f800283a 	ret

0008ccdc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8ccdc:	defffe04 	addi	sp,sp,-8
   8cce0:	dfc00115 	stw	ra,4(sp)
   8cce4:	df000015 	stw	fp,0(sp)
   8cce8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8ccec:	00800274 	movhi	r2,9
   8ccf0:	1085c004 	addi	r2,r2,5888
   8ccf4:	10800017 	ldw	r2,0(r2)
   8ccf8:	10000526 	beq	r2,zero,8cd10 <alt_get_errno+0x34>
   8ccfc:	00800274 	movhi	r2,9
   8cd00:	1085c004 	addi	r2,r2,5888
   8cd04:	10800017 	ldw	r2,0(r2)
   8cd08:	103ee83a 	callr	r2
   8cd0c:	00000206 	br	8cd18 <alt_get_errno+0x3c>
   8cd10:	00800274 	movhi	r2,9
   8cd14:	108c8604 	addi	r2,r2,12824
}
   8cd18:	e037883a 	mov	sp,fp
   8cd1c:	dfc00117 	ldw	ra,4(sp)
   8cd20:	df000017 	ldw	fp,0(sp)
   8cd24:	dec00204 	addi	sp,sp,8
   8cd28:	f800283a 	ret

0008cd2c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   8cd2c:	defffb04 	addi	sp,sp,-20
   8cd30:	dfc00415 	stw	ra,16(sp)
   8cd34:	df000315 	stw	fp,12(sp)
   8cd38:	df000304 	addi	fp,sp,12
   8cd3c:	e13ffe15 	stw	r4,-8(fp)
   8cd40:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8cd44:	e0bffe17 	ldw	r2,-8(fp)
   8cd48:	10000616 	blt	r2,zero,8cd64 <fstat+0x38>
   8cd4c:	e0bffe17 	ldw	r2,-8(fp)
   8cd50:	10c00324 	muli	r3,r2,12
   8cd54:	00800274 	movhi	r2,9
   8cd58:	10813d04 	addi	r2,r2,1268
   8cd5c:	1885883a 	add	r2,r3,r2
   8cd60:	00000106 	br	8cd68 <fstat+0x3c>
   8cd64:	0005883a 	mov	r2,zero
   8cd68:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   8cd6c:	e0bffd17 	ldw	r2,-12(fp)
   8cd70:	10001026 	beq	r2,zero,8cdb4 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   8cd74:	e0bffd17 	ldw	r2,-12(fp)
   8cd78:	10800017 	ldw	r2,0(r2)
   8cd7c:	10800817 	ldw	r2,32(r2)
   8cd80:	10000726 	beq	r2,zero,8cda0 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   8cd84:	e0bffd17 	ldw	r2,-12(fp)
   8cd88:	10800017 	ldw	r2,0(r2)
   8cd8c:	10800817 	ldw	r2,32(r2)
   8cd90:	e17fff17 	ldw	r5,-4(fp)
   8cd94:	e13ffd17 	ldw	r4,-12(fp)
   8cd98:	103ee83a 	callr	r2
   8cd9c:	00000a06 	br	8cdc8 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   8cda0:	e0bfff17 	ldw	r2,-4(fp)
   8cda4:	00c80004 	movi	r3,8192
   8cda8:	10c00115 	stw	r3,4(r2)
      return 0;
   8cdac:	0005883a 	mov	r2,zero
   8cdb0:	00000506 	br	8cdc8 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8cdb4:	008ccdc0 	call	8ccdc <alt_get_errno>
   8cdb8:	1007883a 	mov	r3,r2
   8cdbc:	00801444 	movi	r2,81
   8cdc0:	18800015 	stw	r2,0(r3)
    return -1;
   8cdc4:	00bfffc4 	movi	r2,-1
  }
}
   8cdc8:	e037883a 	mov	sp,fp
   8cdcc:	dfc00117 	ldw	ra,4(sp)
   8cdd0:	df000017 	ldw	fp,0(sp)
   8cdd4:	dec00204 	addi	sp,sp,8
   8cdd8:	f800283a 	ret

0008cddc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8cddc:	defffe04 	addi	sp,sp,-8
   8cde0:	dfc00115 	stw	ra,4(sp)
   8cde4:	df000015 	stw	fp,0(sp)
   8cde8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8cdec:	00800274 	movhi	r2,9
   8cdf0:	1085c004 	addi	r2,r2,5888
   8cdf4:	10800017 	ldw	r2,0(r2)
   8cdf8:	10000526 	beq	r2,zero,8ce10 <alt_get_errno+0x34>
   8cdfc:	00800274 	movhi	r2,9
   8ce00:	1085c004 	addi	r2,r2,5888
   8ce04:	10800017 	ldw	r2,0(r2)
   8ce08:	103ee83a 	callr	r2
   8ce0c:	00000206 	br	8ce18 <alt_get_errno+0x3c>
   8ce10:	00800274 	movhi	r2,9
   8ce14:	108c8604 	addi	r2,r2,12824
}
   8ce18:	e037883a 	mov	sp,fp
   8ce1c:	dfc00117 	ldw	ra,4(sp)
   8ce20:	df000017 	ldw	fp,0(sp)
   8ce24:	dec00204 	addi	sp,sp,8
   8ce28:	f800283a 	ret

0008ce2c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   8ce2c:	deffed04 	addi	sp,sp,-76
   8ce30:	dfc01215 	stw	ra,72(sp)
   8ce34:	df001115 	stw	fp,68(sp)
   8ce38:	df001104 	addi	fp,sp,68
   8ce3c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8ce40:	e0bfff17 	ldw	r2,-4(fp)
   8ce44:	10000616 	blt	r2,zero,8ce60 <isatty+0x34>
   8ce48:	e0bfff17 	ldw	r2,-4(fp)
   8ce4c:	10c00324 	muli	r3,r2,12
   8ce50:	00800274 	movhi	r2,9
   8ce54:	10813d04 	addi	r2,r2,1268
   8ce58:	1885883a 	add	r2,r3,r2
   8ce5c:	00000106 	br	8ce64 <isatty+0x38>
   8ce60:	0005883a 	mov	r2,zero
   8ce64:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   8ce68:	e0bfef17 	ldw	r2,-68(fp)
   8ce6c:	10000e26 	beq	r2,zero,8cea8 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   8ce70:	e0bfef17 	ldw	r2,-68(fp)
   8ce74:	10800017 	ldw	r2,0(r2)
   8ce78:	10800817 	ldw	r2,32(r2)
   8ce7c:	1000021e 	bne	r2,zero,8ce88 <isatty+0x5c>
    {
      return 1;
   8ce80:	00800044 	movi	r2,1
   8ce84:	00000d06 	br	8cebc <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   8ce88:	e0bff004 	addi	r2,fp,-64
   8ce8c:	100b883a 	mov	r5,r2
   8ce90:	e13fff17 	ldw	r4,-4(fp)
   8ce94:	008cd2c0 	call	8cd2c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   8ce98:	e0bff117 	ldw	r2,-60(fp)
   8ce9c:	10880020 	cmpeqi	r2,r2,8192
   8cea0:	10803fcc 	andi	r2,r2,255
   8cea4:	00000506 	br	8cebc <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   8cea8:	008cddc0 	call	8cddc <alt_get_errno>
   8ceac:	1007883a 	mov	r3,r2
   8ceb0:	00801444 	movi	r2,81
   8ceb4:	18800015 	stw	r2,0(r3)
    return 0;
   8ceb8:	0005883a 	mov	r2,zero
  }
}
   8cebc:	e037883a 	mov	sp,fp
   8cec0:	dfc00117 	ldw	ra,4(sp)
   8cec4:	df000017 	ldw	fp,0(sp)
   8cec8:	dec00204 	addi	sp,sp,8
   8cecc:	f800283a 	ret

0008ced0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   8ced0:	defffc04 	addi	sp,sp,-16
   8ced4:	df000315 	stw	fp,12(sp)
   8ced8:	df000304 	addi	fp,sp,12
   8cedc:	e13ffd15 	stw	r4,-12(fp)
   8cee0:	e17ffe15 	stw	r5,-8(fp)
   8cee4:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   8cee8:	e0fffe17 	ldw	r3,-8(fp)
   8ceec:	e0bffd17 	ldw	r2,-12(fp)
   8cef0:	18800c26 	beq	r3,r2,8cf24 <alt_load_section+0x54>
  {
    while( to != end )
   8cef4:	00000806 	br	8cf18 <alt_load_section+0x48>
    {
      *to++ = *from++;
   8cef8:	e0bffe17 	ldw	r2,-8(fp)
   8cefc:	10c00104 	addi	r3,r2,4
   8cf00:	e0fffe15 	stw	r3,-8(fp)
   8cf04:	e0fffd17 	ldw	r3,-12(fp)
   8cf08:	19000104 	addi	r4,r3,4
   8cf0c:	e13ffd15 	stw	r4,-12(fp)
   8cf10:	18c00017 	ldw	r3,0(r3)
   8cf14:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   8cf18:	e0fffe17 	ldw	r3,-8(fp)
   8cf1c:	e0bfff17 	ldw	r2,-4(fp)
   8cf20:	18bff51e 	bne	r3,r2,8cef8 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
   8cf24:	0001883a 	nop
   8cf28:	e037883a 	mov	sp,fp
   8cf2c:	df000017 	ldw	fp,0(sp)
   8cf30:	dec00104 	addi	sp,sp,4
   8cf34:	f800283a 	ret

0008cf38 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   8cf38:	defffe04 	addi	sp,sp,-8
   8cf3c:	dfc00115 	stw	ra,4(sp)
   8cf40:	df000015 	stw	fp,0(sp)
   8cf44:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   8cf48:	01800274 	movhi	r6,9
   8cf4c:	3185c504 	addi	r6,r6,5908
   8cf50:	01400274 	movhi	r5,9
   8cf54:	297f0a04 	addi	r5,r5,-984
   8cf58:	01000274 	movhi	r4,9
   8cf5c:	2105c504 	addi	r4,r4,5908
   8cf60:	008ced00 	call	8ced0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   8cf64:	01800234 	movhi	r6,8
   8cf68:	31809104 	addi	r6,r6,580
   8cf6c:	01400234 	movhi	r5,8
   8cf70:	29400804 	addi	r5,r5,32
   8cf74:	01000234 	movhi	r4,8
   8cf78:	21000804 	addi	r4,r4,32
   8cf7c:	008ced00 	call	8ced0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   8cf80:	01800274 	movhi	r6,9
   8cf84:	31bf0a04 	addi	r6,r6,-984
   8cf88:	01400274 	movhi	r5,9
   8cf8c:	297e4004 	addi	r5,r5,-1792
   8cf90:	01000274 	movhi	r4,9
   8cf94:	213e4004 	addi	r4,r4,-1792
   8cf98:	008ced00 	call	8ced0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   8cf9c:	008e62c0 	call	8e62c <alt_dcache_flush_all>
  alt_icache_flush_all();
   8cfa0:	008e8000 	call	8e800 <alt_icache_flush_all>
}
   8cfa4:	0001883a 	nop
   8cfa8:	e037883a 	mov	sp,fp
   8cfac:	dfc00117 	ldw	ra,4(sp)
   8cfb0:	df000017 	ldw	fp,0(sp)
   8cfb4:	dec00204 	addi	sp,sp,8
   8cfb8:	f800283a 	ret

0008cfbc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8cfbc:	defffe04 	addi	sp,sp,-8
   8cfc0:	dfc00115 	stw	ra,4(sp)
   8cfc4:	df000015 	stw	fp,0(sp)
   8cfc8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8cfcc:	00800274 	movhi	r2,9
   8cfd0:	1085c004 	addi	r2,r2,5888
   8cfd4:	10800017 	ldw	r2,0(r2)
   8cfd8:	10000526 	beq	r2,zero,8cff0 <alt_get_errno+0x34>
   8cfdc:	00800274 	movhi	r2,9
   8cfe0:	1085c004 	addi	r2,r2,5888
   8cfe4:	10800017 	ldw	r2,0(r2)
   8cfe8:	103ee83a 	callr	r2
   8cfec:	00000206 	br	8cff8 <alt_get_errno+0x3c>
   8cff0:	00800274 	movhi	r2,9
   8cff4:	108c8604 	addi	r2,r2,12824
}
   8cff8:	e037883a 	mov	sp,fp
   8cffc:	dfc00117 	ldw	ra,4(sp)
   8d000:	df000017 	ldw	fp,0(sp)
   8d004:	dec00204 	addi	sp,sp,8
   8d008:	f800283a 	ret

0008d00c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   8d00c:	defff904 	addi	sp,sp,-28
   8d010:	dfc00615 	stw	ra,24(sp)
   8d014:	df000515 	stw	fp,20(sp)
   8d018:	df000504 	addi	fp,sp,20
   8d01c:	e13ffd15 	stw	r4,-12(fp)
   8d020:	e17ffe15 	stw	r5,-8(fp)
   8d024:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   8d028:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8d02c:	e0bffd17 	ldw	r2,-12(fp)
   8d030:	10000616 	blt	r2,zero,8d04c <lseek+0x40>
   8d034:	e0bffd17 	ldw	r2,-12(fp)
   8d038:	10c00324 	muli	r3,r2,12
   8d03c:	00800274 	movhi	r2,9
   8d040:	10813d04 	addi	r2,r2,1268
   8d044:	1885883a 	add	r2,r3,r2
   8d048:	00000106 	br	8d050 <lseek+0x44>
   8d04c:	0005883a 	mov	r2,zero
   8d050:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   8d054:	e0bffc17 	ldw	r2,-16(fp)
   8d058:	10001026 	beq	r2,zero,8d09c <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   8d05c:	e0bffc17 	ldw	r2,-16(fp)
   8d060:	10800017 	ldw	r2,0(r2)
   8d064:	10800717 	ldw	r2,28(r2)
   8d068:	10000926 	beq	r2,zero,8d090 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   8d06c:	e0bffc17 	ldw	r2,-16(fp)
   8d070:	10800017 	ldw	r2,0(r2)
   8d074:	10800717 	ldw	r2,28(r2)
   8d078:	e1bfff17 	ldw	r6,-4(fp)
   8d07c:	e17ffe17 	ldw	r5,-8(fp)
   8d080:	e13ffc17 	ldw	r4,-16(fp)
   8d084:	103ee83a 	callr	r2
   8d088:	e0bffb15 	stw	r2,-20(fp)
   8d08c:	00000506 	br	8d0a4 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   8d090:	00bfde84 	movi	r2,-134
   8d094:	e0bffb15 	stw	r2,-20(fp)
   8d098:	00000206 	br	8d0a4 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   8d09c:	00bfebc4 	movi	r2,-81
   8d0a0:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   8d0a4:	e0bffb17 	ldw	r2,-20(fp)
   8d0a8:	1000070e 	bge	r2,zero,8d0c8 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   8d0ac:	008cfbc0 	call	8cfbc <alt_get_errno>
   8d0b0:	1007883a 	mov	r3,r2
   8d0b4:	e0bffb17 	ldw	r2,-20(fp)
   8d0b8:	0085c83a 	sub	r2,zero,r2
   8d0bc:	18800015 	stw	r2,0(r3)
    rc = -1;
   8d0c0:	00bfffc4 	movi	r2,-1
   8d0c4:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   8d0c8:	e0bffb17 	ldw	r2,-20(fp)
}
   8d0cc:	e037883a 	mov	sp,fp
   8d0d0:	dfc00117 	ldw	ra,4(sp)
   8d0d4:	df000017 	ldw	fp,0(sp)
   8d0d8:	dec00204 	addi	sp,sp,8
   8d0dc:	f800283a 	ret

0008d0e0 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   8d0e0:	defffd04 	addi	sp,sp,-12
   8d0e4:	dfc00215 	stw	ra,8(sp)
   8d0e8:	df000115 	stw	fp,4(sp)
   8d0ec:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   8d0f0:	0009883a 	mov	r4,zero
   8d0f4:	008d7f40 	call	8d7f4 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   8d0f8:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   8d0fc:	008d82c0 	call	8d82c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   8d100:	01800274 	movhi	r6,9
   8d104:	31bf0204 	addi	r6,r6,-1016
   8d108:	01400274 	movhi	r5,9
   8d10c:	297f0204 	addi	r5,r5,-1016
   8d110:	01000274 	movhi	r4,9
   8d114:	213f0204 	addi	r4,r4,-1016
   8d118:	008ebc80 	call	8ebc8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   8d11c:	008e7400 	call	8e740 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   8d120:	01000274 	movhi	r4,9
   8d124:	2139e804 	addi	r4,r4,-6240
   8d128:	008f4040 	call	8f404 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   8d12c:	d0a6d217 	ldw	r2,-25784(gp)
   8d130:	d0e6d317 	ldw	r3,-25780(gp)
   8d134:	d126d417 	ldw	r4,-25776(gp)
   8d138:	200d883a 	mov	r6,r4
   8d13c:	180b883a 	mov	r5,r3
   8d140:	1009883a 	mov	r4,r2
   8d144:	00802800 	call	80280 <main>
   8d148:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   8d14c:	01000044 	movi	r4,1
   8d150:	008cbe00 	call	8cbe0 <close>
  exit (result);
   8d154:	e13fff17 	ldw	r4,-4(fp)
   8d158:	008f4180 	call	8f418 <exit>

0008d15c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   8d15c:	defffe04 	addi	sp,sp,-8
   8d160:	df000115 	stw	fp,4(sp)
   8d164:	df000104 	addi	fp,sp,4
   8d168:	e13fff15 	stw	r4,-4(fp)
}
   8d16c:	0001883a 	nop
   8d170:	e037883a 	mov	sp,fp
   8d174:	df000017 	ldw	fp,0(sp)
   8d178:	dec00104 	addi	sp,sp,4
   8d17c:	f800283a 	ret

0008d180 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   8d180:	defffe04 	addi	sp,sp,-8
   8d184:	df000115 	stw	fp,4(sp)
   8d188:	df000104 	addi	fp,sp,4
   8d18c:	e13fff15 	stw	r4,-4(fp)
}
   8d190:	0001883a 	nop
   8d194:	e037883a 	mov	sp,fp
   8d198:	df000017 	ldw	fp,0(sp)
   8d19c:	dec00104 	addi	sp,sp,4
   8d1a0:	f800283a 	ret

0008d1a4 <alt_printf>:
/* 
 * ALT printf function 
 */
void 
alt_printf(const char* fmt, ... )
{
   8d1a4:	defff204 	addi	sp,sp,-56
   8d1a8:	dfc00a15 	stw	ra,40(sp)
   8d1ac:	df000915 	stw	fp,36(sp)
   8d1b0:	df000904 	addi	fp,sp,36
   8d1b4:	e13fff15 	stw	r4,-4(fp)
   8d1b8:	e1400215 	stw	r5,8(fp)
   8d1bc:	e1800315 	stw	r6,12(fp)
   8d1c0:	e1c00415 	stw	r7,16(fp)
	va_list args;
	va_start(args, fmt);
   8d1c4:	e0800204 	addi	r2,fp,8
   8d1c8:	e0bffe15 	stw	r2,-8(fp)
    const char *w;
    char c;

    /* Process format string. */
    w = fmt;
   8d1cc:	e0bfff17 	ldw	r2,-4(fp)
   8d1d0:	e0bff715 	stw	r2,-36(fp)
    while ((c = *w++) != 0)
   8d1d4:	00006f06 	br	8d394 <alt_printf+0x1f0>
    {
        /* If not a format escape character, just print  */
        /* character.  Otherwise, process format string. */
        if (c != '%')
   8d1d8:	e0bff807 	ldb	r2,-32(fp)
   8d1dc:	10800960 	cmpeqi	r2,r2,37
   8d1e0:	1000041e 	bne	r2,zero,8d1f4 <alt_printf+0x50>
        {
            alt_putchar(c);
   8d1e4:	e0bff807 	ldb	r2,-32(fp)
   8d1e8:	1009883a 	mov	r4,r2
   8d1ec:	008d3d00 	call	8d3d0 <alt_putchar>
   8d1f0:	00006806 	br	8d394 <alt_printf+0x1f0>
        }
        else
        {
            /* Get format character.  If none     */
            /* available, processing is complete. */
            if ((c = *w++) != 0)
   8d1f4:	e0bff717 	ldw	r2,-36(fp)
   8d1f8:	10c00044 	addi	r3,r2,1
   8d1fc:	e0fff715 	stw	r3,-36(fp)
   8d200:	10800003 	ldbu	r2,0(r2)
   8d204:	e0bff805 	stb	r2,-32(fp)
   8d208:	e0bff807 	ldb	r2,-32(fp)
   8d20c:	10006926 	beq	r2,zero,8d3b4 <alt_printf+0x210>
            {
                if (c == '%')
   8d210:	e0bff807 	ldb	r2,-32(fp)
   8d214:	10800958 	cmpnei	r2,r2,37
   8d218:	1000041e 	bne	r2,zero,8d22c <alt_printf+0x88>
                {
                    /* Process "%" escape sequence. */
                    alt_putchar(c);
   8d21c:	e0bff807 	ldb	r2,-32(fp)
   8d220:	1009883a 	mov	r4,r2
   8d224:	008d3d00 	call	8d3d0 <alt_putchar>
   8d228:	00005a06 	br	8d394 <alt_printf+0x1f0>
                } 
                else if (c == 'c')
   8d22c:	e0bff807 	ldb	r2,-32(fp)
   8d230:	108018d8 	cmpnei	r2,r2,99
   8d234:	1000081e 	bne	r2,zero,8d258 <alt_printf+0xb4>
                {
                    int v = va_arg(args, int);
   8d238:	e0bffe17 	ldw	r2,-8(fp)
   8d23c:	10c00104 	addi	r3,r2,4
   8d240:	e0fffe15 	stw	r3,-8(fp)
   8d244:	10800017 	ldw	r2,0(r2)
   8d248:	e0bffd15 	stw	r2,-12(fp)
                    alt_putchar(v);
   8d24c:	e13ffd17 	ldw	r4,-12(fp)
   8d250:	008d3d00 	call	8d3d0 <alt_putchar>
   8d254:	00004f06 	br	8d394 <alt_printf+0x1f0>
                }
                else if (c == 'x')
   8d258:	e0bff807 	ldb	r2,-32(fp)
   8d25c:	10801e18 	cmpnei	r2,r2,120
   8d260:	1000341e 	bne	r2,zero,8d334 <alt_printf+0x190>
                {
                    /* Process hexadecimal number format. */
                    unsigned long v = va_arg(args, unsigned long);
   8d264:	e0bffe17 	ldw	r2,-8(fp)
   8d268:	10c00104 	addi	r3,r2,4
   8d26c:	e0fffe15 	stw	r3,-8(fp)
   8d270:	10800017 	ldw	r2,0(r2)
   8d274:	e0bffb15 	stw	r2,-20(fp)
                    unsigned long digit;
                    int digit_shift;

                    /* If the number value is zero, just print and continue. */
                    if (v == 0)
   8d278:	e0bffb17 	ldw	r2,-20(fp)
   8d27c:	1000031e 	bne	r2,zero,8d28c <alt_printf+0xe8>
                    {
                        alt_putchar('0');
   8d280:	01000c04 	movi	r4,48
   8d284:	008d3d00 	call	8d3d0 <alt_putchar>
                        continue;
   8d288:	00004206 	br	8d394 <alt_printf+0x1f0>
                    }

                    /* Find first non-zero digit. */
                    digit_shift = 28;
   8d28c:	00800704 	movi	r2,28
   8d290:	e0bff915 	stw	r2,-28(fp)
                    while (!(v & (0xF << digit_shift)))
   8d294:	00000306 	br	8d2a4 <alt_printf+0x100>
                        digit_shift -= 4;
   8d298:	e0bff917 	ldw	r2,-28(fp)
   8d29c:	10bfff04 	addi	r2,r2,-4
   8d2a0:	e0bff915 	stw	r2,-28(fp)
                        continue;
                    }

                    /* Find first non-zero digit. */
                    digit_shift = 28;
                    while (!(v & (0xF << digit_shift)))
   8d2a4:	00c003c4 	movi	r3,15
   8d2a8:	e0bff917 	ldw	r2,-28(fp)
   8d2ac:	1884983a 	sll	r2,r3,r2
   8d2b0:	1007883a 	mov	r3,r2
   8d2b4:	e0bffb17 	ldw	r2,-20(fp)
   8d2b8:	1884703a 	and	r2,r3,r2
   8d2bc:	103ff626 	beq	r2,zero,8d298 <alt_printf+0xf4>
                        digit_shift -= 4;

                    /* Print digits. */
                    for (; digit_shift >= 0; digit_shift -= 4)
   8d2c0:	00001906 	br	8d328 <alt_printf+0x184>
                    {
                        digit = (v & (0xF << digit_shift)) >> digit_shift;
   8d2c4:	00c003c4 	movi	r3,15
   8d2c8:	e0bff917 	ldw	r2,-28(fp)
   8d2cc:	1884983a 	sll	r2,r3,r2
   8d2d0:	1007883a 	mov	r3,r2
   8d2d4:	e0bffb17 	ldw	r2,-20(fp)
   8d2d8:	1886703a 	and	r3,r3,r2
   8d2dc:	e0bff917 	ldw	r2,-28(fp)
   8d2e0:	1884d83a 	srl	r2,r3,r2
   8d2e4:	e0bffc15 	stw	r2,-16(fp)
                        if (digit <= 9)
   8d2e8:	e0bffc17 	ldw	r2,-16(fp)
   8d2ec:	108002a8 	cmpgeui	r2,r2,10
   8d2f0:	1000041e 	bne	r2,zero,8d304 <alt_printf+0x160>
                            c = '0' + digit;
   8d2f4:	e0bffc17 	ldw	r2,-16(fp)
   8d2f8:	10800c04 	addi	r2,r2,48
   8d2fc:	e0bff805 	stb	r2,-32(fp)
   8d300:	00000306 	br	8d310 <alt_printf+0x16c>
                        else
                            c = 'a' + digit - 10;
   8d304:	e0bffc17 	ldw	r2,-16(fp)
   8d308:	108015c4 	addi	r2,r2,87
   8d30c:	e0bff805 	stb	r2,-32(fp)
                        alt_putchar(c);
   8d310:	e0bff807 	ldb	r2,-32(fp)
   8d314:	1009883a 	mov	r4,r2
   8d318:	008d3d00 	call	8d3d0 <alt_putchar>
                    digit_shift = 28;
                    while (!(v & (0xF << digit_shift)))
                        digit_shift -= 4;

                    /* Print digits. */
                    for (; digit_shift >= 0; digit_shift -= 4)
   8d31c:	e0bff917 	ldw	r2,-28(fp)
   8d320:	10bfff04 	addi	r2,r2,-4
   8d324:	e0bff915 	stw	r2,-28(fp)
   8d328:	e0bff917 	ldw	r2,-28(fp)
   8d32c:	103fe50e 	bge	r2,zero,8d2c4 <alt_printf+0x120>
   8d330:	00001806 	br	8d394 <alt_printf+0x1f0>
                        else
                            c = 'a' + digit - 10;
                        alt_putchar(c);
                    }
                }
                else if (c == 's')
   8d334:	e0bff807 	ldb	r2,-32(fp)
   8d338:	10801cd8 	cmpnei	r2,r2,115
   8d33c:	1000151e 	bne	r2,zero,8d394 <alt_printf+0x1f0>
                {
                    /* Process string format. */
                    char *s = va_arg(args, char *);
   8d340:	e0bffe17 	ldw	r2,-8(fp)
   8d344:	10c00104 	addi	r3,r2,4
   8d348:	e0fffe15 	stw	r3,-8(fp)
   8d34c:	10800017 	ldw	r2,0(r2)
   8d350:	e0bffa15 	stw	r2,-24(fp)

                    while(*s)
   8d354:	00000906 	br	8d37c <alt_printf+0x1d8>
                      alt_putchar(*s++);
   8d358:	e0bffa17 	ldw	r2,-24(fp)
   8d35c:	10c00044 	addi	r3,r2,1
   8d360:	e0fffa15 	stw	r3,-24(fp)
   8d364:	10800003 	ldbu	r2,0(r2)
   8d368:	10803fcc 	andi	r2,r2,255
   8d36c:	1080201c 	xori	r2,r2,128
   8d370:	10bfe004 	addi	r2,r2,-128
   8d374:	1009883a 	mov	r4,r2
   8d378:	008d3d00 	call	8d3d0 <alt_putchar>
                else if (c == 's')
                {
                    /* Process string format. */
                    char *s = va_arg(args, char *);

                    while(*s)
   8d37c:	e0bffa17 	ldw	r2,-24(fp)
   8d380:	10800003 	ldbu	r2,0(r2)
   8d384:	10803fcc 	andi	r2,r2,255
   8d388:	1080201c 	xori	r2,r2,128
   8d38c:	10bfe004 	addi	r2,r2,-128
   8d390:	103ff11e 	bne	r2,zero,8d358 <alt_printf+0x1b4>
    const char *w;
    char c;

    /* Process format string. */
    w = fmt;
    while ((c = *w++) != 0)
   8d394:	e0bff717 	ldw	r2,-36(fp)
   8d398:	10c00044 	addi	r3,r2,1
   8d39c:	e0fff715 	stw	r3,-36(fp)
   8d3a0:	10800003 	ldbu	r2,0(r2)
   8d3a4:	e0bff805 	stb	r2,-32(fp)
   8d3a8:	e0bff807 	ldb	r2,-32(fp)
   8d3ac:	103f8a1e 	bne	r2,zero,8d1d8 <alt_printf+0x34>
        }
    }
#ifdef ALT_SEMIHOSTING
    alt_putbufflush();
#endif
}
   8d3b0:	00000106 	br	8d3b8 <alt_printf+0x214>
                      alt_putchar(*s++);
                }
            }
            else
            {
                break;
   8d3b4:	0001883a 	nop
        }
    }
#ifdef ALT_SEMIHOSTING
    alt_putbufflush();
#endif
}
   8d3b8:	0001883a 	nop
   8d3bc:	e037883a 	mov	sp,fp
   8d3c0:	dfc00117 	ldw	ra,4(sp)
   8d3c4:	df000017 	ldw	fp,0(sp)
   8d3c8:	dec00504 	addi	sp,sp,20
   8d3cc:	f800283a 	ret

0008d3d0 <alt_putchar>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided putchar() routine.
 */
int 
alt_putchar(int c)
{
   8d3d0:	defffd04 	addi	sp,sp,-12
   8d3d4:	dfc00215 	stw	ra,8(sp)
   8d3d8:	df000115 	stw	fp,4(sp)
   8d3dc:	df000104 	addi	fp,sp,4
   8d3e0:	e13fff15 	stw	r4,-4(fp)
    if (ALT_DRIVER_WRITE(ALT_STDOUT_DEV, &c1, 1, 0) == -1) {
        return -1;
    }
    return c;
#else
    return putchar(c);
   8d3e4:	00800274 	movhi	r2,9
   8d3e8:	1085b604 	addi	r2,r2,5848
   8d3ec:	10800017 	ldw	r2,0(r2)
   8d3f0:	10800217 	ldw	r2,8(r2)
   8d3f4:	100b883a 	mov	r5,r2
   8d3f8:	e13fff17 	ldw	r4,-4(fp)
   8d3fc:	008f56c0 	call	8f56c <putc>
#endif
#endif
}
   8d400:	e037883a 	mov	sp,fp
   8d404:	dfc00117 	ldw	ra,4(sp)
   8d408:	df000017 	ldw	fp,0(sp)
   8d40c:	dec00204 	addi	sp,sp,8
   8d410:	f800283a 	ret

0008d414 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8d414:	defffe04 	addi	sp,sp,-8
   8d418:	dfc00115 	stw	ra,4(sp)
   8d41c:	df000015 	stw	fp,0(sp)
   8d420:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8d424:	00800274 	movhi	r2,9
   8d428:	1085c004 	addi	r2,r2,5888
   8d42c:	10800017 	ldw	r2,0(r2)
   8d430:	10000526 	beq	r2,zero,8d448 <alt_get_errno+0x34>
   8d434:	00800274 	movhi	r2,9
   8d438:	1085c004 	addi	r2,r2,5888
   8d43c:	10800017 	ldw	r2,0(r2)
   8d440:	103ee83a 	callr	r2
   8d444:	00000206 	br	8d450 <alt_get_errno+0x3c>
   8d448:	00800274 	movhi	r2,9
   8d44c:	108c8604 	addi	r2,r2,12824
}
   8d450:	e037883a 	mov	sp,fp
   8d454:	dfc00117 	ldw	ra,4(sp)
   8d458:	df000017 	ldw	fp,0(sp)
   8d45c:	dec00204 	addi	sp,sp,8
   8d460:	f800283a 	ret

0008d464 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   8d464:	defff904 	addi	sp,sp,-28
   8d468:	dfc00615 	stw	ra,24(sp)
   8d46c:	df000515 	stw	fp,20(sp)
   8d470:	df000504 	addi	fp,sp,20
   8d474:	e13ffd15 	stw	r4,-12(fp)
   8d478:	e17ffe15 	stw	r5,-8(fp)
   8d47c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8d480:	e0bffd17 	ldw	r2,-12(fp)
   8d484:	10000616 	blt	r2,zero,8d4a0 <read+0x3c>
   8d488:	e0bffd17 	ldw	r2,-12(fp)
   8d48c:	10c00324 	muli	r3,r2,12
   8d490:	00800274 	movhi	r2,9
   8d494:	10813d04 	addi	r2,r2,1268
   8d498:	1885883a 	add	r2,r3,r2
   8d49c:	00000106 	br	8d4a4 <read+0x40>
   8d4a0:	0005883a 	mov	r2,zero
   8d4a4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   8d4a8:	e0bffb17 	ldw	r2,-20(fp)
   8d4ac:	10002226 	beq	r2,zero,8d538 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   8d4b0:	e0bffb17 	ldw	r2,-20(fp)
   8d4b4:	10800217 	ldw	r2,8(r2)
   8d4b8:	108000cc 	andi	r2,r2,3
   8d4bc:	10800060 	cmpeqi	r2,r2,1
   8d4c0:	1000181e 	bne	r2,zero,8d524 <read+0xc0>
        (fd->dev->read))
   8d4c4:	e0bffb17 	ldw	r2,-20(fp)
   8d4c8:	10800017 	ldw	r2,0(r2)
   8d4cc:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   8d4d0:	10001426 	beq	r2,zero,8d524 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   8d4d4:	e0bffb17 	ldw	r2,-20(fp)
   8d4d8:	10800017 	ldw	r2,0(r2)
   8d4dc:	10800517 	ldw	r2,20(r2)
   8d4e0:	e0ffff17 	ldw	r3,-4(fp)
   8d4e4:	180d883a 	mov	r6,r3
   8d4e8:	e17ffe17 	ldw	r5,-8(fp)
   8d4ec:	e13ffb17 	ldw	r4,-20(fp)
   8d4f0:	103ee83a 	callr	r2
   8d4f4:	e0bffc15 	stw	r2,-16(fp)
   8d4f8:	e0bffc17 	ldw	r2,-16(fp)
   8d4fc:	1000070e 	bge	r2,zero,8d51c <read+0xb8>
        {
          ALT_ERRNO = -rval;
   8d500:	008d4140 	call	8d414 <alt_get_errno>
   8d504:	1007883a 	mov	r3,r2
   8d508:	e0bffc17 	ldw	r2,-16(fp)
   8d50c:	0085c83a 	sub	r2,zero,r2
   8d510:	18800015 	stw	r2,0(r3)
          return -1;
   8d514:	00bfffc4 	movi	r2,-1
   8d518:	00000c06 	br	8d54c <read+0xe8>
        }
        return rval;
   8d51c:	e0bffc17 	ldw	r2,-16(fp)
   8d520:	00000a06 	br	8d54c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   8d524:	008d4140 	call	8d414 <alt_get_errno>
   8d528:	1007883a 	mov	r3,r2
   8d52c:	00800344 	movi	r2,13
   8d530:	18800015 	stw	r2,0(r3)
   8d534:	00000406 	br	8d548 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   8d538:	008d4140 	call	8d414 <alt_get_errno>
   8d53c:	1007883a 	mov	r3,r2
   8d540:	00801444 	movi	r2,81
   8d544:	18800015 	stw	r2,0(r3)
  }
  return -1;
   8d548:	00bfffc4 	movi	r2,-1
}
   8d54c:	e037883a 	mov	sp,fp
   8d550:	dfc00117 	ldw	ra,4(sp)
   8d554:	df000017 	ldw	fp,0(sp)
   8d558:	dec00204 	addi	sp,sp,8
   8d55c:	f800283a 	ret

0008d560 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   8d560:	defffe04 	addi	sp,sp,-8
   8d564:	df000115 	stw	fp,4(sp)
   8d568:	df000104 	addi	fp,sp,4
   8d56c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   8d570:	e0bfff17 	ldw	r2,-4(fp)
   8d574:	108000d0 	cmplti	r2,r2,3
   8d578:	10000d1e 	bne	r2,zero,8d5b0 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   8d57c:	00800274 	movhi	r2,9
   8d580:	10813d04 	addi	r2,r2,1268
   8d584:	e0ffff17 	ldw	r3,-4(fp)
   8d588:	18c00324 	muli	r3,r3,12
   8d58c:	10c5883a 	add	r2,r2,r3
   8d590:	10800204 	addi	r2,r2,8
   8d594:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   8d598:	00800274 	movhi	r2,9
   8d59c:	10813d04 	addi	r2,r2,1268
   8d5a0:	e0ffff17 	ldw	r3,-4(fp)
   8d5a4:	18c00324 	muli	r3,r3,12
   8d5a8:	10c5883a 	add	r2,r2,r3
   8d5ac:	10000015 	stw	zero,0(r2)
  }
}
   8d5b0:	0001883a 	nop
   8d5b4:	e037883a 	mov	sp,fp
   8d5b8:	df000017 	ldw	fp,0(sp)
   8d5bc:	dec00104 	addi	sp,sp,4
   8d5c0:	f800283a 	ret

0008d5c4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   8d5c4:	defff904 	addi	sp,sp,-28
   8d5c8:	df000615 	stw	fp,24(sp)
   8d5cc:	df000604 	addi	fp,sp,24
   8d5d0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8d5d4:	0005303a 	rdctl	r2,status
   8d5d8:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8d5dc:	e0fffe17 	ldw	r3,-8(fp)
   8d5e0:	00bfff84 	movi	r2,-2
   8d5e4:	1884703a 	and	r2,r3,r2
   8d5e8:	1001703a 	wrctl	status,r2
  
  return context;
   8d5ec:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   8d5f0:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   8d5f4:	d0a00c17 	ldw	r2,-32720(gp)
   8d5f8:	10c000c4 	addi	r3,r2,3
   8d5fc:	00bfff04 	movi	r2,-4
   8d600:	1884703a 	and	r2,r3,r2
   8d604:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   8d608:	d0e00c17 	ldw	r3,-32720(gp)
   8d60c:	e0bfff17 	ldw	r2,-4(fp)
   8d610:	1887883a 	add	r3,r3,r2
   8d614:	00800374 	movhi	r2,13
   8d618:	10ac0004 	addi	r2,r2,-20480
   8d61c:	10c0062e 	bgeu	r2,r3,8d638 <sbrk+0x74>
   8d620:	e0bffb17 	ldw	r2,-20(fp)
   8d624:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8d628:	e0bffa17 	ldw	r2,-24(fp)
   8d62c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   8d630:	00bfffc4 	movi	r2,-1
   8d634:	00000b06 	br	8d664 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   8d638:	d0a00c17 	ldw	r2,-32720(gp)
   8d63c:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   8d640:	d0e00c17 	ldw	r3,-32720(gp)
   8d644:	e0bfff17 	ldw	r2,-4(fp)
   8d648:	1885883a 	add	r2,r3,r2
   8d64c:	d0a00c15 	stw	r2,-32720(gp)
   8d650:	e0bffb17 	ldw	r2,-20(fp)
   8d654:	e0bffc15 	stw	r2,-16(fp)
   8d658:	e0bffc17 	ldw	r2,-16(fp)
   8d65c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   8d660:	e0bffd17 	ldw	r2,-12(fp)
} 
   8d664:	e037883a 	mov	sp,fp
   8d668:	df000017 	ldw	fp,0(sp)
   8d66c:	dec00104 	addi	sp,sp,4
   8d670:	f800283a 	ret

0008d674 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8d674:	defffe04 	addi	sp,sp,-8
   8d678:	dfc00115 	stw	ra,4(sp)
   8d67c:	df000015 	stw	fp,0(sp)
   8d680:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8d684:	00800274 	movhi	r2,9
   8d688:	1085c004 	addi	r2,r2,5888
   8d68c:	10800017 	ldw	r2,0(r2)
   8d690:	10000526 	beq	r2,zero,8d6a8 <alt_get_errno+0x34>
   8d694:	00800274 	movhi	r2,9
   8d698:	1085c004 	addi	r2,r2,5888
   8d69c:	10800017 	ldw	r2,0(r2)
   8d6a0:	103ee83a 	callr	r2
   8d6a4:	00000206 	br	8d6b0 <alt_get_errno+0x3c>
   8d6a8:	00800274 	movhi	r2,9
   8d6ac:	108c8604 	addi	r2,r2,12824
}
   8d6b0:	e037883a 	mov	sp,fp
   8d6b4:	dfc00117 	ldw	ra,4(sp)
   8d6b8:	df000017 	ldw	fp,0(sp)
   8d6bc:	dec00204 	addi	sp,sp,8
   8d6c0:	f800283a 	ret

0008d6c4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   8d6c4:	defff904 	addi	sp,sp,-28
   8d6c8:	dfc00615 	stw	ra,24(sp)
   8d6cc:	df000515 	stw	fp,20(sp)
   8d6d0:	df000504 	addi	fp,sp,20
   8d6d4:	e13ffd15 	stw	r4,-12(fp)
   8d6d8:	e17ffe15 	stw	r5,-8(fp)
   8d6dc:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   8d6e0:	e0bffd17 	ldw	r2,-12(fp)
   8d6e4:	10000616 	blt	r2,zero,8d700 <write+0x3c>
   8d6e8:	e0bffd17 	ldw	r2,-12(fp)
   8d6ec:	10c00324 	muli	r3,r2,12
   8d6f0:	00800274 	movhi	r2,9
   8d6f4:	10813d04 	addi	r2,r2,1268
   8d6f8:	1885883a 	add	r2,r3,r2
   8d6fc:	00000106 	br	8d704 <write+0x40>
   8d700:	0005883a 	mov	r2,zero
   8d704:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   8d708:	e0bffb17 	ldw	r2,-20(fp)
   8d70c:	10002126 	beq	r2,zero,8d794 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   8d710:	e0bffb17 	ldw	r2,-20(fp)
   8d714:	10800217 	ldw	r2,8(r2)
   8d718:	108000cc 	andi	r2,r2,3
   8d71c:	10001826 	beq	r2,zero,8d780 <write+0xbc>
   8d720:	e0bffb17 	ldw	r2,-20(fp)
   8d724:	10800017 	ldw	r2,0(r2)
   8d728:	10800617 	ldw	r2,24(r2)
   8d72c:	10001426 	beq	r2,zero,8d780 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   8d730:	e0bffb17 	ldw	r2,-20(fp)
   8d734:	10800017 	ldw	r2,0(r2)
   8d738:	10800617 	ldw	r2,24(r2)
   8d73c:	e0ffff17 	ldw	r3,-4(fp)
   8d740:	180d883a 	mov	r6,r3
   8d744:	e17ffe17 	ldw	r5,-8(fp)
   8d748:	e13ffb17 	ldw	r4,-20(fp)
   8d74c:	103ee83a 	callr	r2
   8d750:	e0bffc15 	stw	r2,-16(fp)
   8d754:	e0bffc17 	ldw	r2,-16(fp)
   8d758:	1000070e 	bge	r2,zero,8d778 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   8d75c:	008d6740 	call	8d674 <alt_get_errno>
   8d760:	1007883a 	mov	r3,r2
   8d764:	e0bffc17 	ldw	r2,-16(fp)
   8d768:	0085c83a 	sub	r2,zero,r2
   8d76c:	18800015 	stw	r2,0(r3)
        return -1;
   8d770:	00bfffc4 	movi	r2,-1
   8d774:	00000c06 	br	8d7a8 <write+0xe4>
      }
      return rval;
   8d778:	e0bffc17 	ldw	r2,-16(fp)
   8d77c:	00000a06 	br	8d7a8 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   8d780:	008d6740 	call	8d674 <alt_get_errno>
   8d784:	1007883a 	mov	r3,r2
   8d788:	00800344 	movi	r2,13
   8d78c:	18800015 	stw	r2,0(r3)
   8d790:	00000406 	br	8d7a4 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   8d794:	008d6740 	call	8d674 <alt_get_errno>
   8d798:	1007883a 	mov	r3,r2
   8d79c:	00801444 	movi	r2,81
   8d7a0:	18800015 	stw	r2,0(r3)
  }
  return -1;
   8d7a4:	00bfffc4 	movi	r2,-1
}
   8d7a8:	e037883a 	mov	sp,fp
   8d7ac:	dfc00117 	ldw	ra,4(sp)
   8d7b0:	df000017 	ldw	fp,0(sp)
   8d7b4:	dec00204 	addi	sp,sp,8
   8d7b8:	f800283a 	ret

0008d7bc <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   8d7bc:	defffd04 	addi	sp,sp,-12
   8d7c0:	dfc00215 	stw	ra,8(sp)
   8d7c4:	df000115 	stw	fp,4(sp)
   8d7c8:	df000104 	addi	fp,sp,4
   8d7cc:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   8d7d0:	01400274 	movhi	r5,9
   8d7d4:	2945bd04 	addi	r5,r5,5876
   8d7d8:	e13fff17 	ldw	r4,-4(fp)
   8d7dc:	008e69c0 	call	8e69c <alt_dev_llist_insert>
}
   8d7e0:	e037883a 	mov	sp,fp
   8d7e4:	dfc00117 	ldw	ra,4(sp)
   8d7e8:	df000017 	ldw	fp,0(sp)
   8d7ec:	dec00204 	addi	sp,sp,8
   8d7f0:	f800283a 	ret

0008d7f4 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   8d7f4:	defffd04 	addi	sp,sp,-12
   8d7f8:	dfc00215 	stw	ra,8(sp)
   8d7fc:	df000115 	stw	fp,4(sp)
   8d800:	df000104 	addi	fp,sp,4
   8d804:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2FAST, nios2fast);
   8d808:	008f05c0 	call	8f05c <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   8d80c:	00800044 	movi	r2,1
   8d810:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   8d814:	0001883a 	nop
   8d818:	e037883a 	mov	sp,fp
   8d81c:	dfc00117 	ldw	ra,4(sp)
   8d820:	df000017 	ldw	fp,0(sp)
   8d824:	dec00204 	addi	sp,sp,8
   8d828:	f800283a 	ret

0008d82c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   8d82c:	defffe04 	addi	sp,sp,-8
   8d830:	dfc00115 	stw	ra,4(sp)
   8d834:	df000015 	stw	fp,0(sp)
   8d838:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
   8d83c:	000d883a 	mov	r6,zero
   8d840:	000b883a 	mov	r5,zero
   8d844:	01000274 	movhi	r4,9
   8d848:	2101a704 	addi	r4,r4,1692
   8d84c:	008d9dc0 	call	8d9dc <altera_avalon_jtag_uart_init>
   8d850:	01000274 	movhi	r4,9
   8d854:	21019d04 	addi	r4,r4,1652
   8d858:	008d7bc0 	call	8d7bc <alt_dev_reg>
    ALTERA_AVALON_SPI_INIT ( SPI, spi);
   8d85c:	0001883a 	nop
}
   8d860:	0001883a 	nop
   8d864:	e037883a 	mov	sp,fp
   8d868:	dfc00117 	ldw	ra,4(sp)
   8d86c:	df000017 	ldw	fp,0(sp)
   8d870:	dec00204 	addi	sp,sp,8
   8d874:	f800283a 	ret

0008d878 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   8d878:	defffa04 	addi	sp,sp,-24
   8d87c:	dfc00515 	stw	ra,20(sp)
   8d880:	df000415 	stw	fp,16(sp)
   8d884:	df000404 	addi	fp,sp,16
   8d888:	e13ffd15 	stw	r4,-12(fp)
   8d88c:	e17ffe15 	stw	r5,-8(fp)
   8d890:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   8d894:	e0bffd17 	ldw	r2,-12(fp)
   8d898:	10800017 	ldw	r2,0(r2)
   8d89c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   8d8a0:	e0bffc17 	ldw	r2,-16(fp)
   8d8a4:	10c00a04 	addi	r3,r2,40
   8d8a8:	e0bffd17 	ldw	r2,-12(fp)
   8d8ac:	10800217 	ldw	r2,8(r2)
   8d8b0:	100f883a 	mov	r7,r2
   8d8b4:	e1bfff17 	ldw	r6,-4(fp)
   8d8b8:	e17ffe17 	ldw	r5,-8(fp)
   8d8bc:	1809883a 	mov	r4,r3
   8d8c0:	008deb00 	call	8deb0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   8d8c4:	e037883a 	mov	sp,fp
   8d8c8:	dfc00117 	ldw	ra,4(sp)
   8d8cc:	df000017 	ldw	fp,0(sp)
   8d8d0:	dec00204 	addi	sp,sp,8
   8d8d4:	f800283a 	ret

0008d8d8 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   8d8d8:	defffa04 	addi	sp,sp,-24
   8d8dc:	dfc00515 	stw	ra,20(sp)
   8d8e0:	df000415 	stw	fp,16(sp)
   8d8e4:	df000404 	addi	fp,sp,16
   8d8e8:	e13ffd15 	stw	r4,-12(fp)
   8d8ec:	e17ffe15 	stw	r5,-8(fp)
   8d8f0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   8d8f4:	e0bffd17 	ldw	r2,-12(fp)
   8d8f8:	10800017 	ldw	r2,0(r2)
   8d8fc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   8d900:	e0bffc17 	ldw	r2,-16(fp)
   8d904:	10c00a04 	addi	r3,r2,40
   8d908:	e0bffd17 	ldw	r2,-12(fp)
   8d90c:	10800217 	ldw	r2,8(r2)
   8d910:	100f883a 	mov	r7,r2
   8d914:	e1bfff17 	ldw	r6,-4(fp)
   8d918:	e17ffe17 	ldw	r5,-8(fp)
   8d91c:	1809883a 	mov	r4,r3
   8d920:	008e0cc0 	call	8e0cc <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   8d924:	e037883a 	mov	sp,fp
   8d928:	dfc00117 	ldw	ra,4(sp)
   8d92c:	df000017 	ldw	fp,0(sp)
   8d930:	dec00204 	addi	sp,sp,8
   8d934:	f800283a 	ret

0008d938 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   8d938:	defffc04 	addi	sp,sp,-16
   8d93c:	dfc00315 	stw	ra,12(sp)
   8d940:	df000215 	stw	fp,8(sp)
   8d944:	df000204 	addi	fp,sp,8
   8d948:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   8d94c:	e0bfff17 	ldw	r2,-4(fp)
   8d950:	10800017 	ldw	r2,0(r2)
   8d954:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   8d958:	e0bffe17 	ldw	r2,-8(fp)
   8d95c:	10c00a04 	addi	r3,r2,40
   8d960:	e0bfff17 	ldw	r2,-4(fp)
   8d964:	10800217 	ldw	r2,8(r2)
   8d968:	100b883a 	mov	r5,r2
   8d96c:	1809883a 	mov	r4,r3
   8d970:	008dd580 	call	8dd58 <altera_avalon_jtag_uart_close>
}
   8d974:	e037883a 	mov	sp,fp
   8d978:	dfc00117 	ldw	ra,4(sp)
   8d97c:	df000017 	ldw	fp,0(sp)
   8d980:	dec00204 	addi	sp,sp,8
   8d984:	f800283a 	ret

0008d988 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   8d988:	defffa04 	addi	sp,sp,-24
   8d98c:	dfc00515 	stw	ra,20(sp)
   8d990:	df000415 	stw	fp,16(sp)
   8d994:	df000404 	addi	fp,sp,16
   8d998:	e13ffd15 	stw	r4,-12(fp)
   8d99c:	e17ffe15 	stw	r5,-8(fp)
   8d9a0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   8d9a4:	e0bffd17 	ldw	r2,-12(fp)
   8d9a8:	10800017 	ldw	r2,0(r2)
   8d9ac:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   8d9b0:	e0bffc17 	ldw	r2,-16(fp)
   8d9b4:	10800a04 	addi	r2,r2,40
   8d9b8:	e1bfff17 	ldw	r6,-4(fp)
   8d9bc:	e17ffe17 	ldw	r5,-8(fp)
   8d9c0:	1009883a 	mov	r4,r2
   8d9c4:	008ddc00 	call	8ddc0 <altera_avalon_jtag_uart_ioctl>
}
   8d9c8:	e037883a 	mov	sp,fp
   8d9cc:	dfc00117 	ldw	ra,4(sp)
   8d9d0:	df000017 	ldw	fp,0(sp)
   8d9d4:	dec00204 	addi	sp,sp,8
   8d9d8:	f800283a 	ret

0008d9dc <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   8d9dc:	defffa04 	addi	sp,sp,-24
   8d9e0:	dfc00515 	stw	ra,20(sp)
   8d9e4:	df000415 	stw	fp,16(sp)
   8d9e8:	df000404 	addi	fp,sp,16
   8d9ec:	e13ffd15 	stw	r4,-12(fp)
   8d9f0:	e17ffe15 	stw	r5,-8(fp)
   8d9f4:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   8d9f8:	e0bffd17 	ldw	r2,-12(fp)
   8d9fc:	00c00044 	movi	r3,1
   8da00:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   8da04:	e0bffd17 	ldw	r2,-12(fp)
   8da08:	10800017 	ldw	r2,0(r2)
   8da0c:	10800104 	addi	r2,r2,4
   8da10:	1007883a 	mov	r3,r2
   8da14:	e0bffd17 	ldw	r2,-12(fp)
   8da18:	10800817 	ldw	r2,32(r2)
   8da1c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   8da20:	e0bffe17 	ldw	r2,-8(fp)
   8da24:	e0ffff17 	ldw	r3,-4(fp)
   8da28:	d8000015 	stw	zero,0(sp)
   8da2c:	e1fffd17 	ldw	r7,-12(fp)
   8da30:	01800274 	movhi	r6,9
   8da34:	31b6a904 	addi	r6,r6,-9564
   8da38:	180b883a 	mov	r5,r3
   8da3c:	1009883a 	mov	r4,r2
   8da40:	008e8340 	call	8e834 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   8da44:	e0bffd17 	ldw	r2,-12(fp)
   8da48:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   8da4c:	e0bffd17 	ldw	r2,-12(fp)
   8da50:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   8da54:	00800274 	movhi	r2,9
   8da58:	108c8b04 	addi	r2,r2,12844
   8da5c:	10800017 	ldw	r2,0(r2)
   8da60:	e1fffd17 	ldw	r7,-12(fp)
   8da64:	01800274 	movhi	r6,9
   8da68:	31b72c04 	addi	r6,r6,-9040
   8da6c:	100b883a 	mov	r5,r2
   8da70:	1809883a 	mov	r4,r3
   8da74:	008e4ec0 	call	8e4ec <alt_alarm_start>
   8da78:	1000040e 	bge	r2,zero,8da8c <altera_avalon_jtag_uart_init+0xb0>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   8da7c:	e0fffd17 	ldw	r3,-12(fp)
   8da80:	00a00034 	movhi	r2,32768
   8da84:	10bfffc4 	addi	r2,r2,-1
   8da88:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   8da8c:	0001883a 	nop
   8da90:	e037883a 	mov	sp,fp
   8da94:	dfc00117 	ldw	ra,4(sp)
   8da98:	df000017 	ldw	fp,0(sp)
   8da9c:	dec00204 	addi	sp,sp,8
   8daa0:	f800283a 	ret

0008daa4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   8daa4:	defff804 	addi	sp,sp,-32
   8daa8:	df000715 	stw	fp,28(sp)
   8daac:	df000704 	addi	fp,sp,28
   8dab0:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   8dab4:	e0bfff17 	ldw	r2,-4(fp)
   8dab8:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   8dabc:	e0bffb17 	ldw	r2,-20(fp)
   8dac0:	10800017 	ldw	r2,0(r2)
   8dac4:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   8dac8:	e0bffc17 	ldw	r2,-16(fp)
   8dacc:	10800104 	addi	r2,r2,4
   8dad0:	10800037 	ldwio	r2,0(r2)
   8dad4:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   8dad8:	e0bffd17 	ldw	r2,-12(fp)
   8dadc:	1080c00c 	andi	r2,r2,768
   8dae0:	10006d26 	beq	r2,zero,8dc98 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   8dae4:	e0bffd17 	ldw	r2,-12(fp)
   8dae8:	1080400c 	andi	r2,r2,256
   8daec:	10003526 	beq	r2,zero,8dbc4 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   8daf0:	00800074 	movhi	r2,1
   8daf4:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8daf8:	e0bffb17 	ldw	r2,-20(fp)
   8dafc:	10800a17 	ldw	r2,40(r2)
   8db00:	10800044 	addi	r2,r2,1
   8db04:	1081ffcc 	andi	r2,r2,2047
   8db08:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   8db0c:	e0bffb17 	ldw	r2,-20(fp)
   8db10:	10c00b17 	ldw	r3,44(r2)
   8db14:	e0bffe17 	ldw	r2,-8(fp)
   8db18:	18801526 	beq	r3,r2,8db70 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   8db1c:	e0bffc17 	ldw	r2,-16(fp)
   8db20:	10800037 	ldwio	r2,0(r2)
   8db24:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   8db28:	e0bff917 	ldw	r2,-28(fp)
   8db2c:	10a0000c 	andi	r2,r2,32768
   8db30:	10001126 	beq	r2,zero,8db78 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   8db34:	e0bffb17 	ldw	r2,-20(fp)
   8db38:	10800a17 	ldw	r2,40(r2)
   8db3c:	e0fff917 	ldw	r3,-28(fp)
   8db40:	1809883a 	mov	r4,r3
   8db44:	e0fffb17 	ldw	r3,-20(fp)
   8db48:	1885883a 	add	r2,r3,r2
   8db4c:	10800e04 	addi	r2,r2,56
   8db50:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8db54:	e0bffb17 	ldw	r2,-20(fp)
   8db58:	10800a17 	ldw	r2,40(r2)
   8db5c:	10800044 	addi	r2,r2,1
   8db60:	10c1ffcc 	andi	r3,r2,2047
   8db64:	e0bffb17 	ldw	r2,-20(fp)
   8db68:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   8db6c:	003fe206 	br	8daf8 <altera_avalon_jtag_uart_irq+0x54>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   8db70:	0001883a 	nop
   8db74:	00000106 	br	8db7c <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   8db78:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   8db7c:	e0bff917 	ldw	r2,-28(fp)
   8db80:	10bfffec 	andhi	r2,r2,65535
   8db84:	10000f26 	beq	r2,zero,8dbc4 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   8db88:	e0bffb17 	ldw	r2,-20(fp)
   8db8c:	10c00817 	ldw	r3,32(r2)
   8db90:	00bfff84 	movi	r2,-2
   8db94:	1886703a 	and	r3,r3,r2
   8db98:	e0bffb17 	ldw	r2,-20(fp)
   8db9c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   8dba0:	e0bffc17 	ldw	r2,-16(fp)
   8dba4:	10800104 	addi	r2,r2,4
   8dba8:	1007883a 	mov	r3,r2
   8dbac:	e0bffb17 	ldw	r2,-20(fp)
   8dbb0:	10800817 	ldw	r2,32(r2)
   8dbb4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   8dbb8:	e0bffc17 	ldw	r2,-16(fp)
   8dbbc:	10800104 	addi	r2,r2,4
   8dbc0:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   8dbc4:	e0bffd17 	ldw	r2,-12(fp)
   8dbc8:	1080800c 	andi	r2,r2,512
   8dbcc:	103fbe26 	beq	r2,zero,8dac8 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   8dbd0:	e0bffd17 	ldw	r2,-12(fp)
   8dbd4:	1004d43a 	srli	r2,r2,16
   8dbd8:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   8dbdc:	00001406 	br	8dc30 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   8dbe0:	e0bffc17 	ldw	r2,-16(fp)
   8dbe4:	e0fffb17 	ldw	r3,-20(fp)
   8dbe8:	18c00d17 	ldw	r3,52(r3)
   8dbec:	e13ffb17 	ldw	r4,-20(fp)
   8dbf0:	20c7883a 	add	r3,r4,r3
   8dbf4:	18c20e04 	addi	r3,r3,2104
   8dbf8:	18c00003 	ldbu	r3,0(r3)
   8dbfc:	18c03fcc 	andi	r3,r3,255
   8dc00:	18c0201c 	xori	r3,r3,128
   8dc04:	18ffe004 	addi	r3,r3,-128
   8dc08:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8dc0c:	e0bffb17 	ldw	r2,-20(fp)
   8dc10:	10800d17 	ldw	r2,52(r2)
   8dc14:	10800044 	addi	r2,r2,1
   8dc18:	10c1ffcc 	andi	r3,r2,2047
   8dc1c:	e0bffb17 	ldw	r2,-20(fp)
   8dc20:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   8dc24:	e0bffa17 	ldw	r2,-24(fp)
   8dc28:	10bfffc4 	addi	r2,r2,-1
   8dc2c:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   8dc30:	e0bffa17 	ldw	r2,-24(fp)
   8dc34:	10000526 	beq	r2,zero,8dc4c <altera_avalon_jtag_uart_irq+0x1a8>
   8dc38:	e0bffb17 	ldw	r2,-20(fp)
   8dc3c:	10c00d17 	ldw	r3,52(r2)
   8dc40:	e0bffb17 	ldw	r2,-20(fp)
   8dc44:	10800c17 	ldw	r2,48(r2)
   8dc48:	18bfe51e 	bne	r3,r2,8dbe0 <altera_avalon_jtag_uart_irq+0x13c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   8dc4c:	e0bffa17 	ldw	r2,-24(fp)
   8dc50:	103f9d26 	beq	r2,zero,8dac8 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   8dc54:	e0bffb17 	ldw	r2,-20(fp)
   8dc58:	10c00817 	ldw	r3,32(r2)
   8dc5c:	00bfff44 	movi	r2,-3
   8dc60:	1886703a 	and	r3,r3,r2
   8dc64:	e0bffb17 	ldw	r2,-20(fp)
   8dc68:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   8dc6c:	e0bffb17 	ldw	r2,-20(fp)
   8dc70:	10800017 	ldw	r2,0(r2)
   8dc74:	10800104 	addi	r2,r2,4
   8dc78:	1007883a 	mov	r3,r2
   8dc7c:	e0bffb17 	ldw	r2,-20(fp)
   8dc80:	10800817 	ldw	r2,32(r2)
   8dc84:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   8dc88:	e0bffc17 	ldw	r2,-16(fp)
   8dc8c:	10800104 	addi	r2,r2,4
   8dc90:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   8dc94:	003f8c06 	br	8dac8 <altera_avalon_jtag_uart_irq+0x24>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   8dc98:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   8dc9c:	0001883a 	nop
   8dca0:	e037883a 	mov	sp,fp
   8dca4:	df000017 	ldw	fp,0(sp)
   8dca8:	dec00104 	addi	sp,sp,4
   8dcac:	f800283a 	ret

0008dcb0 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   8dcb0:	defff804 	addi	sp,sp,-32
   8dcb4:	df000715 	stw	fp,28(sp)
   8dcb8:	df000704 	addi	fp,sp,28
   8dcbc:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   8dcc0:	e0bffb17 	ldw	r2,-20(fp)
   8dcc4:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   8dcc8:	e0bff917 	ldw	r2,-28(fp)
   8dccc:	10800017 	ldw	r2,0(r2)
   8dcd0:	10800104 	addi	r2,r2,4
   8dcd4:	10800037 	ldwio	r2,0(r2)
   8dcd8:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   8dcdc:	e0bffa17 	ldw	r2,-24(fp)
   8dce0:	1081000c 	andi	r2,r2,1024
   8dce4:	10000b26 	beq	r2,zero,8dd14 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   8dce8:	e0bff917 	ldw	r2,-28(fp)
   8dcec:	10800017 	ldw	r2,0(r2)
   8dcf0:	10800104 	addi	r2,r2,4
   8dcf4:	1007883a 	mov	r3,r2
   8dcf8:	e0bff917 	ldw	r2,-28(fp)
   8dcfc:	10800817 	ldw	r2,32(r2)
   8dd00:	10810014 	ori	r2,r2,1024
   8dd04:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   8dd08:	e0bff917 	ldw	r2,-28(fp)
   8dd0c:	10000915 	stw	zero,36(r2)
   8dd10:	00000a06 	br	8dd3c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   8dd14:	e0bff917 	ldw	r2,-28(fp)
   8dd18:	10c00917 	ldw	r3,36(r2)
   8dd1c:	00a00034 	movhi	r2,32768
   8dd20:	10bfff04 	addi	r2,r2,-4
   8dd24:	10c00536 	bltu	r2,r3,8dd3c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   8dd28:	e0bff917 	ldw	r2,-28(fp)
   8dd2c:	10800917 	ldw	r2,36(r2)
   8dd30:	10c00044 	addi	r3,r2,1
   8dd34:	e0bff917 	ldw	r2,-28(fp)
   8dd38:	10c00915 	stw	r3,36(r2)
   8dd3c:	00800274 	movhi	r2,9
   8dd40:	108c8b04 	addi	r2,r2,12844
   8dd44:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   8dd48:	e037883a 	mov	sp,fp
   8dd4c:	df000017 	ldw	fp,0(sp)
   8dd50:	dec00104 	addi	sp,sp,4
   8dd54:	f800283a 	ret

0008dd58 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   8dd58:	defffd04 	addi	sp,sp,-12
   8dd5c:	df000215 	stw	fp,8(sp)
   8dd60:	df000204 	addi	fp,sp,8
   8dd64:	e13ffe15 	stw	r4,-8(fp)
   8dd68:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   8dd6c:	00000506 	br	8dd84 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   8dd70:	e0bfff17 	ldw	r2,-4(fp)
   8dd74:	1090000c 	andi	r2,r2,16384
   8dd78:	10000226 	beq	r2,zero,8dd84 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   8dd7c:	00bffd44 	movi	r2,-11
   8dd80:	00000b06 	br	8ddb0 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   8dd84:	e0bffe17 	ldw	r2,-8(fp)
   8dd88:	10c00d17 	ldw	r3,52(r2)
   8dd8c:	e0bffe17 	ldw	r2,-8(fp)
   8dd90:	10800c17 	ldw	r2,48(r2)
   8dd94:	18800526 	beq	r3,r2,8ddac <altera_avalon_jtag_uart_close+0x54>
   8dd98:	e0bffe17 	ldw	r2,-8(fp)
   8dd9c:	10c00917 	ldw	r3,36(r2)
   8dda0:	e0bffe17 	ldw	r2,-8(fp)
   8dda4:	10800117 	ldw	r2,4(r2)
   8dda8:	18bff136 	bltu	r3,r2,8dd70 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   8ddac:	0005883a 	mov	r2,zero
}
   8ddb0:	e037883a 	mov	sp,fp
   8ddb4:	df000017 	ldw	fp,0(sp)
   8ddb8:	dec00104 	addi	sp,sp,4
   8ddbc:	f800283a 	ret

0008ddc0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   8ddc0:	defffa04 	addi	sp,sp,-24
   8ddc4:	df000515 	stw	fp,20(sp)
   8ddc8:	df000504 	addi	fp,sp,20
   8ddcc:	e13ffd15 	stw	r4,-12(fp)
   8ddd0:	e17ffe15 	stw	r5,-8(fp)
   8ddd4:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   8ddd8:	00bff9c4 	movi	r2,-25
   8dddc:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   8dde0:	e0bffe17 	ldw	r2,-8(fp)
   8dde4:	10da8060 	cmpeqi	r3,r2,27137
   8dde8:	1800031e 	bne	r3,zero,8ddf8 <altera_avalon_jtag_uart_ioctl+0x38>
   8ddec:	109a80a0 	cmpeqi	r2,r2,27138
   8ddf0:	1000181e 	bne	r2,zero,8de54 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   8ddf4:	00002906 	br	8de9c <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   8ddf8:	e0bffd17 	ldw	r2,-12(fp)
   8ddfc:	10c00117 	ldw	r3,4(r2)
   8de00:	00a00034 	movhi	r2,32768
   8de04:	10bfffc4 	addi	r2,r2,-1
   8de08:	18802126 	beq	r3,r2,8de90 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   8de0c:	e0bfff17 	ldw	r2,-4(fp)
   8de10:	10800017 	ldw	r2,0(r2)
   8de14:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   8de18:	e0bffc17 	ldw	r2,-16(fp)
   8de1c:	10800090 	cmplti	r2,r2,2
   8de20:	1000061e 	bne	r2,zero,8de3c <altera_avalon_jtag_uart_ioctl+0x7c>
   8de24:	e0fffc17 	ldw	r3,-16(fp)
   8de28:	00a00034 	movhi	r2,32768
   8de2c:	10bfffc4 	addi	r2,r2,-1
   8de30:	18800226 	beq	r3,r2,8de3c <altera_avalon_jtag_uart_ioctl+0x7c>
   8de34:	e0bffc17 	ldw	r2,-16(fp)
   8de38:	00000206 	br	8de44 <altera_avalon_jtag_uart_ioctl+0x84>
   8de3c:	00a00034 	movhi	r2,32768
   8de40:	10bfff84 	addi	r2,r2,-2
   8de44:	e0fffd17 	ldw	r3,-12(fp)
   8de48:	18800115 	stw	r2,4(r3)
      rc = 0;
   8de4c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   8de50:	00000f06 	br	8de90 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   8de54:	e0bffd17 	ldw	r2,-12(fp)
   8de58:	10c00117 	ldw	r3,4(r2)
   8de5c:	00a00034 	movhi	r2,32768
   8de60:	10bfffc4 	addi	r2,r2,-1
   8de64:	18800c26 	beq	r3,r2,8de98 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   8de68:	e0bffd17 	ldw	r2,-12(fp)
   8de6c:	10c00917 	ldw	r3,36(r2)
   8de70:	e0bffd17 	ldw	r2,-12(fp)
   8de74:	10800117 	ldw	r2,4(r2)
   8de78:	1885803a 	cmpltu	r2,r3,r2
   8de7c:	10c03fcc 	andi	r3,r2,255
   8de80:	e0bfff17 	ldw	r2,-4(fp)
   8de84:	10c00015 	stw	r3,0(r2)
      rc = 0;
   8de88:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   8de8c:	00000206 	br	8de98 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   8de90:	0001883a 	nop
   8de94:	00000106 	br	8de9c <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   8de98:	0001883a 	nop

  default:
    break;
  }

  return rc;
   8de9c:	e0bffb17 	ldw	r2,-20(fp)
}
   8dea0:	e037883a 	mov	sp,fp
   8dea4:	df000017 	ldw	fp,0(sp)
   8dea8:	dec00104 	addi	sp,sp,4
   8deac:	f800283a 	ret

0008deb0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   8deb0:	defff304 	addi	sp,sp,-52
   8deb4:	dfc00c15 	stw	ra,48(sp)
   8deb8:	df000b15 	stw	fp,44(sp)
   8debc:	df000b04 	addi	fp,sp,44
   8dec0:	e13ffc15 	stw	r4,-16(fp)
   8dec4:	e17ffd15 	stw	r5,-12(fp)
   8dec8:	e1bffe15 	stw	r6,-8(fp)
   8decc:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   8ded0:	e0bffd17 	ldw	r2,-12(fp)
   8ded4:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   8ded8:	00004706 	br	8dff8 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   8dedc:	e0bffc17 	ldw	r2,-16(fp)
   8dee0:	10800a17 	ldw	r2,40(r2)
   8dee4:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   8dee8:	e0bffc17 	ldw	r2,-16(fp)
   8deec:	10800b17 	ldw	r2,44(r2)
   8def0:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   8def4:	e0fff717 	ldw	r3,-36(fp)
   8def8:	e0bff817 	ldw	r2,-32(fp)
   8defc:	18800536 	bltu	r3,r2,8df14 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   8df00:	e0fff717 	ldw	r3,-36(fp)
   8df04:	e0bff817 	ldw	r2,-32(fp)
   8df08:	1885c83a 	sub	r2,r3,r2
   8df0c:	e0bff615 	stw	r2,-40(fp)
   8df10:	00000406 	br	8df24 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   8df14:	00c20004 	movi	r3,2048
   8df18:	e0bff817 	ldw	r2,-32(fp)
   8df1c:	1885c83a 	sub	r2,r3,r2
   8df20:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   8df24:	e0bff617 	ldw	r2,-40(fp)
   8df28:	10001e26 	beq	r2,zero,8dfa4 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   8df2c:	e0fffe17 	ldw	r3,-8(fp)
   8df30:	e0bff617 	ldw	r2,-40(fp)
   8df34:	1880022e 	bgeu	r3,r2,8df40 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   8df38:	e0bffe17 	ldw	r2,-8(fp)
   8df3c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   8df40:	e0bffc17 	ldw	r2,-16(fp)
   8df44:	10c00e04 	addi	r3,r2,56
   8df48:	e0bff817 	ldw	r2,-32(fp)
   8df4c:	1885883a 	add	r2,r3,r2
   8df50:	e1bff617 	ldw	r6,-40(fp)
   8df54:	100b883a 	mov	r5,r2
   8df58:	e13ff517 	ldw	r4,-44(fp)
   8df5c:	00857e80 	call	857e8 <memcpy>
      ptr   += n;
   8df60:	e0fff517 	ldw	r3,-44(fp)
   8df64:	e0bff617 	ldw	r2,-40(fp)
   8df68:	1885883a 	add	r2,r3,r2
   8df6c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   8df70:	e0fffe17 	ldw	r3,-8(fp)
   8df74:	e0bff617 	ldw	r2,-40(fp)
   8df78:	1885c83a 	sub	r2,r3,r2
   8df7c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8df80:	e0fff817 	ldw	r3,-32(fp)
   8df84:	e0bff617 	ldw	r2,-40(fp)
   8df88:	1885883a 	add	r2,r3,r2
   8df8c:	10c1ffcc 	andi	r3,r2,2047
   8df90:	e0bffc17 	ldw	r2,-16(fp)
   8df94:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   8df98:	e0bffe17 	ldw	r2,-8(fp)
   8df9c:	00bfcf16 	blt	zero,r2,8dedc <altera_avalon_jtag_uart_read+0x2c>
   8dfa0:	00000106 	br	8dfa8 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   8dfa4:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   8dfa8:	e0fff517 	ldw	r3,-44(fp)
   8dfac:	e0bffd17 	ldw	r2,-12(fp)
   8dfb0:	1880141e 	bne	r3,r2,8e004 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   8dfb4:	e0bfff17 	ldw	r2,-4(fp)
   8dfb8:	1090000c 	andi	r2,r2,16384
   8dfbc:	1000131e 	bne	r2,zero,8e00c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   8dfc0:	0001883a 	nop
   8dfc4:	e0bffc17 	ldw	r2,-16(fp)
   8dfc8:	10c00a17 	ldw	r3,40(r2)
   8dfcc:	e0bff717 	ldw	r2,-36(fp)
   8dfd0:	1880051e 	bne	r3,r2,8dfe8 <altera_avalon_jtag_uart_read+0x138>
   8dfd4:	e0bffc17 	ldw	r2,-16(fp)
   8dfd8:	10c00917 	ldw	r3,36(r2)
   8dfdc:	e0bffc17 	ldw	r2,-16(fp)
   8dfe0:	10800117 	ldw	r2,4(r2)
   8dfe4:	18bff736 	bltu	r3,r2,8dfc4 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   8dfe8:	e0bffc17 	ldw	r2,-16(fp)
   8dfec:	10c00a17 	ldw	r3,40(r2)
   8dff0:	e0bff717 	ldw	r2,-36(fp)
   8dff4:	18800726 	beq	r3,r2,8e014 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   8dff8:	e0bffe17 	ldw	r2,-8(fp)
   8dffc:	00bfb716 	blt	zero,r2,8dedc <altera_avalon_jtag_uart_read+0x2c>
   8e000:	00000506 	br	8e018 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   8e004:	0001883a 	nop
   8e008:	00000306 	br	8e018 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   8e00c:	0001883a 	nop
   8e010:	00000106 	br	8e018 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   8e014:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   8e018:	e0fff517 	ldw	r3,-44(fp)
   8e01c:	e0bffd17 	ldw	r2,-12(fp)
   8e020:	18801826 	beq	r3,r2,8e084 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e024:	0005303a 	rdctl	r2,status
   8e028:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e02c:	e0fffb17 	ldw	r3,-20(fp)
   8e030:	00bfff84 	movi	r2,-2
   8e034:	1884703a 	and	r2,r3,r2
   8e038:	1001703a 	wrctl	status,r2
  
  return context;
   8e03c:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   8e040:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   8e044:	e0bffc17 	ldw	r2,-16(fp)
   8e048:	10800817 	ldw	r2,32(r2)
   8e04c:	10c00054 	ori	r3,r2,1
   8e050:	e0bffc17 	ldw	r2,-16(fp)
   8e054:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   8e058:	e0bffc17 	ldw	r2,-16(fp)
   8e05c:	10800017 	ldw	r2,0(r2)
   8e060:	10800104 	addi	r2,r2,4
   8e064:	1007883a 	mov	r3,r2
   8e068:	e0bffc17 	ldw	r2,-16(fp)
   8e06c:	10800817 	ldw	r2,32(r2)
   8e070:	18800035 	stwio	r2,0(r3)
   8e074:	e0bffa17 	ldw	r2,-24(fp)
   8e078:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8e07c:	e0bff917 	ldw	r2,-28(fp)
   8e080:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   8e084:	e0fff517 	ldw	r3,-44(fp)
   8e088:	e0bffd17 	ldw	r2,-12(fp)
   8e08c:	18800426 	beq	r3,r2,8e0a0 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   8e090:	e0fff517 	ldw	r3,-44(fp)
   8e094:	e0bffd17 	ldw	r2,-12(fp)
   8e098:	1885c83a 	sub	r2,r3,r2
   8e09c:	00000606 	br	8e0b8 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   8e0a0:	e0bfff17 	ldw	r2,-4(fp)
   8e0a4:	1090000c 	andi	r2,r2,16384
   8e0a8:	10000226 	beq	r2,zero,8e0b4 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   8e0ac:	00bffd44 	movi	r2,-11
   8e0b0:	00000106 	br	8e0b8 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   8e0b4:	00bffec4 	movi	r2,-5
}
   8e0b8:	e037883a 	mov	sp,fp
   8e0bc:	dfc00117 	ldw	ra,4(sp)
   8e0c0:	df000017 	ldw	fp,0(sp)
   8e0c4:	dec00204 	addi	sp,sp,8
   8e0c8:	f800283a 	ret

0008e0cc <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   8e0cc:	defff304 	addi	sp,sp,-52
   8e0d0:	dfc00c15 	stw	ra,48(sp)
   8e0d4:	df000b15 	stw	fp,44(sp)
   8e0d8:	df000b04 	addi	fp,sp,44
   8e0dc:	e13ffc15 	stw	r4,-16(fp)
   8e0e0:	e17ffd15 	stw	r5,-12(fp)
   8e0e4:	e1bffe15 	stw	r6,-8(fp)
   8e0e8:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   8e0ec:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   8e0f0:	e0bffd17 	ldw	r2,-12(fp)
   8e0f4:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   8e0f8:	00003706 	br	8e1d8 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   8e0fc:	e0bffc17 	ldw	r2,-16(fp)
   8e100:	10800c17 	ldw	r2,48(r2)
   8e104:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   8e108:	e0bffc17 	ldw	r2,-16(fp)
   8e10c:	10800d17 	ldw	r2,52(r2)
   8e110:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   8e114:	e0fff917 	ldw	r3,-28(fp)
   8e118:	e0bff517 	ldw	r2,-44(fp)
   8e11c:	1880062e 	bgeu	r3,r2,8e138 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   8e120:	e0fff517 	ldw	r3,-44(fp)
   8e124:	e0bff917 	ldw	r2,-28(fp)
   8e128:	1885c83a 	sub	r2,r3,r2
   8e12c:	10bfffc4 	addi	r2,r2,-1
   8e130:	e0bff615 	stw	r2,-40(fp)
   8e134:	00000b06 	br	8e164 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   8e138:	e0bff517 	ldw	r2,-44(fp)
   8e13c:	10000526 	beq	r2,zero,8e154 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   8e140:	00c20004 	movi	r3,2048
   8e144:	e0bff917 	ldw	r2,-28(fp)
   8e148:	1885c83a 	sub	r2,r3,r2
   8e14c:	e0bff615 	stw	r2,-40(fp)
   8e150:	00000406 	br	8e164 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   8e154:	00c1ffc4 	movi	r3,2047
   8e158:	e0bff917 	ldw	r2,-28(fp)
   8e15c:	1885c83a 	sub	r2,r3,r2
   8e160:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   8e164:	e0bff617 	ldw	r2,-40(fp)
   8e168:	10001e26 	beq	r2,zero,8e1e4 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   8e16c:	e0fffe17 	ldw	r3,-8(fp)
   8e170:	e0bff617 	ldw	r2,-40(fp)
   8e174:	1880022e 	bgeu	r3,r2,8e180 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   8e178:	e0bffe17 	ldw	r2,-8(fp)
   8e17c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   8e180:	e0bffc17 	ldw	r2,-16(fp)
   8e184:	10c20e04 	addi	r3,r2,2104
   8e188:	e0bff917 	ldw	r2,-28(fp)
   8e18c:	1885883a 	add	r2,r3,r2
   8e190:	e1bff617 	ldw	r6,-40(fp)
   8e194:	e17ffd17 	ldw	r5,-12(fp)
   8e198:	1009883a 	mov	r4,r2
   8e19c:	00857e80 	call	857e8 <memcpy>
      ptr   += n;
   8e1a0:	e0fffd17 	ldw	r3,-12(fp)
   8e1a4:	e0bff617 	ldw	r2,-40(fp)
   8e1a8:	1885883a 	add	r2,r3,r2
   8e1ac:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   8e1b0:	e0fffe17 	ldw	r3,-8(fp)
   8e1b4:	e0bff617 	ldw	r2,-40(fp)
   8e1b8:	1885c83a 	sub	r2,r3,r2
   8e1bc:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   8e1c0:	e0fff917 	ldw	r3,-28(fp)
   8e1c4:	e0bff617 	ldw	r2,-40(fp)
   8e1c8:	1885883a 	add	r2,r3,r2
   8e1cc:	10c1ffcc 	andi	r3,r2,2047
   8e1d0:	e0bffc17 	ldw	r2,-16(fp)
   8e1d4:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   8e1d8:	e0bffe17 	ldw	r2,-8(fp)
   8e1dc:	00bfc716 	blt	zero,r2,8e0fc <altera_avalon_jtag_uart_write+0x30>
   8e1e0:	00000106 	br	8e1e8 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   8e1e4:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e1e8:	0005303a 	rdctl	r2,status
   8e1ec:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e1f0:	e0fffb17 	ldw	r3,-20(fp)
   8e1f4:	00bfff84 	movi	r2,-2
   8e1f8:	1884703a 	and	r2,r3,r2
   8e1fc:	1001703a 	wrctl	status,r2
  
  return context;
   8e200:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   8e204:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   8e208:	e0bffc17 	ldw	r2,-16(fp)
   8e20c:	10800817 	ldw	r2,32(r2)
   8e210:	10c00094 	ori	r3,r2,2
   8e214:	e0bffc17 	ldw	r2,-16(fp)
   8e218:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   8e21c:	e0bffc17 	ldw	r2,-16(fp)
   8e220:	10800017 	ldw	r2,0(r2)
   8e224:	10800104 	addi	r2,r2,4
   8e228:	1007883a 	mov	r3,r2
   8e22c:	e0bffc17 	ldw	r2,-16(fp)
   8e230:	10800817 	ldw	r2,32(r2)
   8e234:	18800035 	stwio	r2,0(r3)
   8e238:	e0bffa17 	ldw	r2,-24(fp)
   8e23c:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8e240:	e0bff817 	ldw	r2,-32(fp)
   8e244:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   8e248:	e0bffe17 	ldw	r2,-8(fp)
   8e24c:	0080100e 	bge	zero,r2,8e290 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   8e250:	e0bfff17 	ldw	r2,-4(fp)
   8e254:	1090000c 	andi	r2,r2,16384
   8e258:	1000101e 	bne	r2,zero,8e29c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   8e25c:	0001883a 	nop
   8e260:	e0bffc17 	ldw	r2,-16(fp)
   8e264:	10c00d17 	ldw	r3,52(r2)
   8e268:	e0bff517 	ldw	r2,-44(fp)
   8e26c:	1880051e 	bne	r3,r2,8e284 <altera_avalon_jtag_uart_write+0x1b8>
   8e270:	e0bffc17 	ldw	r2,-16(fp)
   8e274:	10c00917 	ldw	r3,36(r2)
   8e278:	e0bffc17 	ldw	r2,-16(fp)
   8e27c:	10800117 	ldw	r2,4(r2)
   8e280:	18bff736 	bltu	r3,r2,8e260 <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   8e284:	e0bffc17 	ldw	r2,-16(fp)
   8e288:	10800917 	ldw	r2,36(r2)
   8e28c:	1000051e 	bne	r2,zero,8e2a4 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   8e290:	e0bffe17 	ldw	r2,-8(fp)
   8e294:	00bfd016 	blt	zero,r2,8e1d8 <altera_avalon_jtag_uart_write+0x10c>
   8e298:	00000306 	br	8e2a8 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   8e29c:	0001883a 	nop
   8e2a0:	00000106 	br	8e2a8 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   8e2a4:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   8e2a8:	e0fffd17 	ldw	r3,-12(fp)
   8e2ac:	e0bff717 	ldw	r2,-36(fp)
   8e2b0:	18800426 	beq	r3,r2,8e2c4 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   8e2b4:	e0fffd17 	ldw	r3,-12(fp)
   8e2b8:	e0bff717 	ldw	r2,-36(fp)
   8e2bc:	1885c83a 	sub	r2,r3,r2
   8e2c0:	00000606 	br	8e2dc <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   8e2c4:	e0bfff17 	ldw	r2,-4(fp)
   8e2c8:	1090000c 	andi	r2,r2,16384
   8e2cc:	10000226 	beq	r2,zero,8e2d8 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   8e2d0:	00bffd44 	movi	r2,-11
   8e2d4:	00000106 	br	8e2dc <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   8e2d8:	00bffec4 	movi	r2,-5
}
   8e2dc:	e037883a 	mov	sp,fp
   8e2e0:	dfc00117 	ldw	ra,4(sp)
   8e2e4:	df000017 	ldw	fp,0(sp)
   8e2e8:	dec00204 	addi	sp,sp,8
   8e2ec:	f800283a 	ret

0008e2f0 <alt_avalon_spi_command>:

int alt_avalon_spi_command(alt_u32 base, alt_u32 slave,
                           alt_u32 write_length, const alt_u8 * write_data,
                           alt_u32 read_length, alt_u8 * read_data,
                           alt_u32 flags)
{
   8e2f0:	defff404 	addi	sp,sp,-48
   8e2f4:	df000b15 	stw	fp,44(sp)
   8e2f8:	df000b04 	addi	fp,sp,44
   8e2fc:	e13ffc15 	stw	r4,-16(fp)
   8e300:	e17ffd15 	stw	r5,-12(fp)
   8e304:	e1bffe15 	stw	r6,-8(fp)
   8e308:	e1ffff15 	stw	r7,-4(fp)
  const alt_u8 * write_end = write_data + write_length;
   8e30c:	e0ffff17 	ldw	r3,-4(fp)
   8e310:	e0bffe17 	ldw	r2,-8(fp)
   8e314:	1885883a 	add	r2,r3,r2
   8e318:	e0bff815 	stw	r2,-32(fp)
  alt_u8 * read_end = read_data + read_length;
   8e31c:	e0c00217 	ldw	r3,8(fp)
   8e320:	e0800117 	ldw	r2,4(fp)
   8e324:	1885883a 	add	r2,r3,r2
   8e328:	e0bff915 	stw	r2,-28(fp)

  alt_u32 write_zeros = read_length;
   8e32c:	e0800117 	ldw	r2,4(fp)
   8e330:	e0bff515 	stw	r2,-44(fp)
  alt_u32 read_ignore = write_length;
   8e334:	e0bffe17 	ldw	r2,-8(fp)
   8e338:	e0bff615 	stw	r2,-40(fp)

  /* We must not send more than two bytes to the target before it has
   * returned any as otherwise it will overflow. */
  /* Unfortunately the hardware does not seem to work with credits > 1,
   * leave it at 1 for now. */
  alt_32 credits = 1;
   8e33c:	00800044 	movi	r2,1
   8e340:	e0bff715 	stw	r2,-36(fp)
  /* Warning: this function is not currently safe if called in a multi-threaded
   * environment, something above must perform locking to make it safe if more
   * than one thread intends to use it.
   */

  IOWR_ALTERA_AVALON_SPI_SLAVE_SEL(base, 1 << slave);
   8e344:	e0bffc17 	ldw	r2,-16(fp)
   8e348:	10800504 	addi	r2,r2,20
   8e34c:	1009883a 	mov	r4,r2
   8e350:	00c00044 	movi	r3,1
   8e354:	e0bffd17 	ldw	r2,-12(fp)
   8e358:	1884983a 	sll	r2,r3,r2
   8e35c:	20800035 	stwio	r2,0(r4)
  
  /* Set the SSO bit (force chipselect) only if the toggle flag is not set */
  if ((flags & ALT_AVALON_SPI_COMMAND_TOGGLE_SS_N) == 0) {
   8e360:	e0800317 	ldw	r2,12(fp)
   8e364:	1080008c 	andi	r2,r2,2
   8e368:	1000051e 	bne	r2,zero,8e380 <alt_avalon_spi_command+0x90>
    IOWR_ALTERA_AVALON_SPI_CONTROL(base, ALTERA_AVALON_SPI_CONTROL_SSO_MSK);
   8e36c:	e0bffc17 	ldw	r2,-16(fp)
   8e370:	10800304 	addi	r2,r2,12
   8e374:	1007883a 	mov	r3,r2
   8e378:	00810004 	movi	r2,1024
   8e37c:	18800035 	stwio	r2,0(r3)
  /*
   * Discard any stale data present in the RXDATA register, in case
   * previous communication was interrupted and stale data was left
   * behind.
   */
  IORD_ALTERA_AVALON_SPI_RXDATA(base);
   8e380:	e0bffc17 	ldw	r2,-16(fp)
   8e384:	10800037 	ldwio	r2,0(r2)
  for ( ; ; )
  {
    
    do
    {
      status = IORD_ALTERA_AVALON_SPI_STATUS(base);
   8e388:	e0bffc17 	ldw	r2,-16(fp)
   8e38c:	10800204 	addi	r2,r2,8
   8e390:	10800037 	ldwio	r2,0(r2)
   8e394:	e0bffa15 	stw	r2,-24(fp)
    }
    while (((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) == 0 || credits == 0) &&
   8e398:	e0bffa17 	ldw	r2,-24(fp)
   8e39c:	1080100c 	andi	r2,r2,64
            (status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) == 0);
   8e3a0:	10000226 	beq	r2,zero,8e3ac <alt_avalon_spi_command+0xbc>
    
    do
    {
      status = IORD_ALTERA_AVALON_SPI_STATUS(base);
    }
    while (((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) == 0 || credits == 0) &&
   8e3a4:	e0bff717 	ldw	r2,-36(fp)
   8e3a8:	1000031e 	bne	r2,zero,8e3b8 <alt_avalon_spi_command+0xc8>
            (status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) == 0);
   8e3ac:	e0bffa17 	ldw	r2,-24(fp)
   8e3b0:	1080200c 	andi	r2,r2,128
    
    do
    {
      status = IORD_ALTERA_AVALON_SPI_STATUS(base);
    }
    while (((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) == 0 || credits == 0) &&
   8e3b4:	103ff426 	beq	r2,zero,8e388 <alt_avalon_spi_command+0x98>
            (status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) == 0);

    if ((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) != 0 && credits > 0)
   8e3b8:	e0bffa17 	ldw	r2,-24(fp)
   8e3bc:	1080100c 	andi	r2,r2,64
   8e3c0:	10001e26 	beq	r2,zero,8e43c <alt_avalon_spi_command+0x14c>
   8e3c4:	e0bff717 	ldw	r2,-36(fp)
   8e3c8:	00801c0e 	bge	zero,r2,8e43c <alt_avalon_spi_command+0x14c>
    {
      credits--;
   8e3cc:	e0bff717 	ldw	r2,-36(fp)
   8e3d0:	10bfffc4 	addi	r2,r2,-1
   8e3d4:	e0bff715 	stw	r2,-36(fp)

      if (write_data < write_end)
   8e3d8:	e0ffff17 	ldw	r3,-4(fp)
   8e3dc:	e0bff817 	ldw	r2,-32(fp)
   8e3e0:	18800a2e 	bgeu	r3,r2,8e40c <alt_avalon_spi_command+0x11c>
        IOWR_ALTERA_AVALON_SPI_TXDATA(base, *write_data++);
   8e3e4:	e0bffc17 	ldw	r2,-16(fp)
   8e3e8:	10800104 	addi	r2,r2,4
   8e3ec:	1009883a 	mov	r4,r2
   8e3f0:	e0bfff17 	ldw	r2,-4(fp)
   8e3f4:	10c00044 	addi	r3,r2,1
   8e3f8:	e0ffff15 	stw	r3,-4(fp)
   8e3fc:	10800003 	ldbu	r2,0(r2)
   8e400:	10803fcc 	andi	r2,r2,255
   8e404:	20800035 	stwio	r2,0(r4)
   8e408:	00000c06 	br	8e43c <alt_avalon_spi_command+0x14c>
      else if (write_zeros > 0)
   8e40c:	e0bff517 	ldw	r2,-44(fp)
   8e410:	10000826 	beq	r2,zero,8e434 <alt_avalon_spi_command+0x144>
      {
        write_zeros--;
   8e414:	e0bff517 	ldw	r2,-44(fp)
   8e418:	10bfffc4 	addi	r2,r2,-1
   8e41c:	e0bff515 	stw	r2,-44(fp)
        IOWR_ALTERA_AVALON_SPI_TXDATA(base, 0);
   8e420:	e0bffc17 	ldw	r2,-16(fp)
   8e424:	10800104 	addi	r2,r2,4
   8e428:	0007883a 	mov	r3,zero
   8e42c:	10c00035 	stwio	r3,0(r2)
   8e430:	00000206 	br	8e43c <alt_avalon_spi_command+0x14c>
      }
      else
        credits = -1024;
   8e434:	00bf0004 	movi	r2,-1024
   8e438:	e0bff715 	stw	r2,-36(fp)
    };

    if ((status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) != 0)
   8e43c:	e0bffa17 	ldw	r2,-24(fp)
   8e440:	1080200c 	andi	r2,r2,128
   8e444:	103fd026 	beq	r2,zero,8e388 <alt_avalon_spi_command+0x98>
    {
      alt_u32 rxdata = IORD_ALTERA_AVALON_SPI_RXDATA(base);
   8e448:	e0bffc17 	ldw	r2,-16(fp)
   8e44c:	10800037 	ldwio	r2,0(r2)
   8e450:	e0bffb15 	stw	r2,-20(fp)

      if (read_ignore > 0)
   8e454:	e0bff617 	ldw	r2,-40(fp)
   8e458:	10000426 	beq	r2,zero,8e46c <alt_avalon_spi_command+0x17c>
        read_ignore--;
   8e45c:	e0bff617 	ldw	r2,-40(fp)
   8e460:	10bfffc4 	addi	r2,r2,-1
   8e464:	e0bff615 	stw	r2,-40(fp)
   8e468:	00000506 	br	8e480 <alt_avalon_spi_command+0x190>
      else
        *read_data++ = (alt_u8)rxdata;
   8e46c:	e0800217 	ldw	r2,8(fp)
   8e470:	10c00044 	addi	r3,r2,1
   8e474:	e0c00215 	stw	r3,8(fp)
   8e478:	e0fffb17 	ldw	r3,-20(fp)
   8e47c:	10c00005 	stb	r3,0(r2)
      credits++;
   8e480:	e0bff717 	ldw	r2,-36(fp)
   8e484:	10800044 	addi	r2,r2,1
   8e488:	e0bff715 	stw	r2,-36(fp)

      if (read_ignore == 0 && read_data == read_end)
   8e48c:	e0bff617 	ldw	r2,-40(fp)
   8e490:	103fbd1e 	bne	r2,zero,8e388 <alt_avalon_spi_command+0x98>
   8e494:	e0c00217 	ldw	r3,8(fp)
   8e498:	e0bff917 	ldw	r2,-28(fp)
   8e49c:	18bfba1e 	bne	r3,r2,8e388 <alt_avalon_spi_command+0x98>
  }

  /* Wait until the interface has finished transmitting */
  do
  {
    status = IORD_ALTERA_AVALON_SPI_STATUS(base);
   8e4a0:	e0bffc17 	ldw	r2,-16(fp)
   8e4a4:	10800204 	addi	r2,r2,8
   8e4a8:	10800037 	ldwio	r2,0(r2)
   8e4ac:	e0bffa15 	stw	r2,-24(fp)
  }
  while ((status & ALTERA_AVALON_SPI_STATUS_TMT_MSK) == 0);
   8e4b0:	e0bffa17 	ldw	r2,-24(fp)
   8e4b4:	1080080c 	andi	r2,r2,32
   8e4b8:	103ff926 	beq	r2,zero,8e4a0 <alt_avalon_spi_command+0x1b0>

  /* Clear SSO (release chipselect) unless the caller is going to
   * keep using this chip
   */
  if ((flags & ALT_AVALON_SPI_COMMAND_MERGE) == 0)
   8e4bc:	e0800317 	ldw	r2,12(fp)
   8e4c0:	1080004c 	andi	r2,r2,1
   8e4c4:	1000041e 	bne	r2,zero,8e4d8 <alt_avalon_spi_command+0x1e8>
    IOWR_ALTERA_AVALON_SPI_CONTROL(base, 0);
   8e4c8:	e0bffc17 	ldw	r2,-16(fp)
   8e4cc:	10800304 	addi	r2,r2,12
   8e4d0:	0007883a 	mov	r3,zero
   8e4d4:	10c00035 	stwio	r3,0(r2)

  return read_length;
   8e4d8:	e0800117 	ldw	r2,4(fp)
}
   8e4dc:	e037883a 	mov	sp,fp
   8e4e0:	df000017 	ldw	fp,0(sp)
   8e4e4:	dec00104 	addi	sp,sp,4
   8e4e8:	f800283a 	ret

0008e4ec <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   8e4ec:	defff504 	addi	sp,sp,-44
   8e4f0:	df000a15 	stw	fp,40(sp)
   8e4f4:	df000a04 	addi	fp,sp,40
   8e4f8:	e13ffc15 	stw	r4,-16(fp)
   8e4fc:	e17ffd15 	stw	r5,-12(fp)
   8e500:	e1bffe15 	stw	r6,-8(fp)
   8e504:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   8e508:	e03ff615 	stw	zero,-40(fp)
   8e50c:	00800274 	movhi	r2,9
   8e510:	108c8b04 	addi	r2,r2,12844
   8e514:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
   8e518:	10003f26 	beq	r2,zero,8e618 <alt_alarm_start+0x12c>
  {
    if (alarm)
   8e51c:	e0bffc17 	ldw	r2,-16(fp)
   8e520:	10003b26 	beq	r2,zero,8e610 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
   8e524:	e0bffc17 	ldw	r2,-16(fp)
   8e528:	e0fffe17 	ldw	r3,-8(fp)
   8e52c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   8e530:	e0bffc17 	ldw	r2,-16(fp)
   8e534:	e0ffff17 	ldw	r3,-4(fp)
   8e538:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e53c:	0005303a 	rdctl	r2,status
   8e540:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e544:	e0fff917 	ldw	r3,-28(fp)
   8e548:	00bfff84 	movi	r2,-2
   8e54c:	1884703a 	and	r2,r3,r2
   8e550:	1001703a 	wrctl	status,r2
  
  return context;
   8e554:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   8e558:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   8e55c:	00800274 	movhi	r2,9
   8e560:	108c8c04 	addi	r2,r2,12848
   8e564:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
   8e568:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   8e56c:	e0fffd17 	ldw	r3,-12(fp)
   8e570:	e0bff617 	ldw	r2,-40(fp)
   8e574:	1885883a 	add	r2,r3,r2
   8e578:	10c00044 	addi	r3,r2,1
   8e57c:	e0bffc17 	ldw	r2,-16(fp)
   8e580:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   8e584:	e0bffc17 	ldw	r2,-16(fp)
   8e588:	10c00217 	ldw	r3,8(r2)
   8e58c:	e0bff617 	ldw	r2,-40(fp)
   8e590:	1880042e 	bgeu	r3,r2,8e5a4 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
   8e594:	e0bffc17 	ldw	r2,-16(fp)
   8e598:	00c00044 	movi	r3,1
   8e59c:	10c00405 	stb	r3,16(r2)
   8e5a0:	00000206 	br	8e5ac <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
   8e5a4:	e0bffc17 	ldw	r2,-16(fp)
   8e5a8:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   8e5ac:	e0fffc17 	ldw	r3,-16(fp)
   8e5b0:	00800274 	movhi	r2,9
   8e5b4:	1085c304 	addi	r2,r2,5900
   8e5b8:	e0bffa15 	stw	r2,-24(fp)
   8e5bc:	e0fffb15 	stw	r3,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   8e5c0:	e0bffb17 	ldw	r2,-20(fp)
   8e5c4:	e0fffa17 	ldw	r3,-24(fp)
   8e5c8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   8e5cc:	e0bffa17 	ldw	r2,-24(fp)
   8e5d0:	10c00017 	ldw	r3,0(r2)
   8e5d4:	e0bffb17 	ldw	r2,-20(fp)
   8e5d8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   8e5dc:	e0bffa17 	ldw	r2,-24(fp)
   8e5e0:	10800017 	ldw	r2,0(r2)
   8e5e4:	e0fffb17 	ldw	r3,-20(fp)
   8e5e8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   8e5ec:	e0bffa17 	ldw	r2,-24(fp)
   8e5f0:	e0fffb17 	ldw	r3,-20(fp)
   8e5f4:	10c00015 	stw	r3,0(r2)
   8e5f8:	e0bff817 	ldw	r2,-32(fp)
   8e5fc:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8e600:	e0bff717 	ldw	r2,-36(fp)
   8e604:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   8e608:	0005883a 	mov	r2,zero
   8e60c:	00000306 	br	8e61c <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
   8e610:	00bffa84 	movi	r2,-22
   8e614:	00000106 	br	8e61c <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
   8e618:	00bfde84 	movi	r2,-134
  }
}
   8e61c:	e037883a 	mov	sp,fp
   8e620:	df000017 	ldw	fp,0(sp)
   8e624:	dec00104 	addi	sp,sp,4
   8e628:	f800283a 	ret

0008e62c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   8e62c:	deffff04 	addi	sp,sp,-4
   8e630:	df000015 	stw	fp,0(sp)
   8e634:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   8e638:	0001883a 	nop
   8e63c:	e037883a 	mov	sp,fp
   8e640:	df000017 	ldw	fp,0(sp)
   8e644:	dec00104 	addi	sp,sp,4
   8e648:	f800283a 	ret

0008e64c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8e64c:	defffe04 	addi	sp,sp,-8
   8e650:	dfc00115 	stw	ra,4(sp)
   8e654:	df000015 	stw	fp,0(sp)
   8e658:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8e65c:	00800274 	movhi	r2,9
   8e660:	1085c004 	addi	r2,r2,5888
   8e664:	10800017 	ldw	r2,0(r2)
   8e668:	10000526 	beq	r2,zero,8e680 <alt_get_errno+0x34>
   8e66c:	00800274 	movhi	r2,9
   8e670:	1085c004 	addi	r2,r2,5888
   8e674:	10800017 	ldw	r2,0(r2)
   8e678:	103ee83a 	callr	r2
   8e67c:	00000206 	br	8e688 <alt_get_errno+0x3c>
   8e680:	00800274 	movhi	r2,9
   8e684:	108c8604 	addi	r2,r2,12824
}
   8e688:	e037883a 	mov	sp,fp
   8e68c:	dfc00117 	ldw	ra,4(sp)
   8e690:	df000017 	ldw	fp,0(sp)
   8e694:	dec00204 	addi	sp,sp,8
   8e698:	f800283a 	ret

0008e69c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   8e69c:	defffa04 	addi	sp,sp,-24
   8e6a0:	dfc00515 	stw	ra,20(sp)
   8e6a4:	df000415 	stw	fp,16(sp)
   8e6a8:	df000404 	addi	fp,sp,16
   8e6ac:	e13ffe15 	stw	r4,-8(fp)
   8e6b0:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   8e6b4:	e0bffe17 	ldw	r2,-8(fp)
   8e6b8:	10000326 	beq	r2,zero,8e6c8 <alt_dev_llist_insert+0x2c>
   8e6bc:	e0bffe17 	ldw	r2,-8(fp)
   8e6c0:	10800217 	ldw	r2,8(r2)
   8e6c4:	1000061e 	bne	r2,zero,8e6e0 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   8e6c8:	008e64c0 	call	8e64c <alt_get_errno>
   8e6cc:	1007883a 	mov	r3,r2
   8e6d0:	00800584 	movi	r2,22
   8e6d4:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   8e6d8:	00bffa84 	movi	r2,-22
   8e6dc:	00001306 	br	8e72c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   8e6e0:	e0bffe17 	ldw	r2,-8(fp)
   8e6e4:	e0ffff17 	ldw	r3,-4(fp)
   8e6e8:	e0fffc15 	stw	r3,-16(fp)
   8e6ec:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   8e6f0:	e0bffd17 	ldw	r2,-12(fp)
   8e6f4:	e0fffc17 	ldw	r3,-16(fp)
   8e6f8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   8e6fc:	e0bffc17 	ldw	r2,-16(fp)
   8e700:	10c00017 	ldw	r3,0(r2)
   8e704:	e0bffd17 	ldw	r2,-12(fp)
   8e708:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   8e70c:	e0bffc17 	ldw	r2,-16(fp)
   8e710:	10800017 	ldw	r2,0(r2)
   8e714:	e0fffd17 	ldw	r3,-12(fp)
   8e718:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   8e71c:	e0bffc17 	ldw	r2,-16(fp)
   8e720:	e0fffd17 	ldw	r3,-12(fp)
   8e724:	10c00015 	stw	r3,0(r2)

  return 0;  
   8e728:	0005883a 	mov	r2,zero
}
   8e72c:	e037883a 	mov	sp,fp
   8e730:	dfc00117 	ldw	ra,4(sp)
   8e734:	df000017 	ldw	fp,0(sp)
   8e738:	dec00204 	addi	sp,sp,8
   8e73c:	f800283a 	ret

0008e740 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   8e740:	defffd04 	addi	sp,sp,-12
   8e744:	dfc00215 	stw	ra,8(sp)
   8e748:	df000115 	stw	fp,4(sp)
   8e74c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   8e750:	00800274 	movhi	r2,9
   8e754:	10be3f04 	addi	r2,r2,-1796
   8e758:	e0bfff15 	stw	r2,-4(fp)
   8e75c:	00000606 	br	8e778 <_do_ctors+0x38>
        (*ctor) (); 
   8e760:	e0bfff17 	ldw	r2,-4(fp)
   8e764:	10800017 	ldw	r2,0(r2)
   8e768:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   8e76c:	e0bfff17 	ldw	r2,-4(fp)
   8e770:	10bfff04 	addi	r2,r2,-4
   8e774:	e0bfff15 	stw	r2,-4(fp)
   8e778:	e0ffff17 	ldw	r3,-4(fp)
   8e77c:	00800274 	movhi	r2,9
   8e780:	10be4004 	addi	r2,r2,-1792
   8e784:	18bff62e 	bgeu	r3,r2,8e760 <_do_ctors+0x20>
        (*ctor) (); 
}
   8e788:	0001883a 	nop
   8e78c:	e037883a 	mov	sp,fp
   8e790:	dfc00117 	ldw	ra,4(sp)
   8e794:	df000017 	ldw	fp,0(sp)
   8e798:	dec00204 	addi	sp,sp,8
   8e79c:	f800283a 	ret

0008e7a0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   8e7a0:	defffd04 	addi	sp,sp,-12
   8e7a4:	dfc00215 	stw	ra,8(sp)
   8e7a8:	df000115 	stw	fp,4(sp)
   8e7ac:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   8e7b0:	00800274 	movhi	r2,9
   8e7b4:	10be3f04 	addi	r2,r2,-1796
   8e7b8:	e0bfff15 	stw	r2,-4(fp)
   8e7bc:	00000606 	br	8e7d8 <_do_dtors+0x38>
        (*dtor) (); 
   8e7c0:	e0bfff17 	ldw	r2,-4(fp)
   8e7c4:	10800017 	ldw	r2,0(r2)
   8e7c8:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   8e7cc:	e0bfff17 	ldw	r2,-4(fp)
   8e7d0:	10bfff04 	addi	r2,r2,-4
   8e7d4:	e0bfff15 	stw	r2,-4(fp)
   8e7d8:	e0ffff17 	ldw	r3,-4(fp)
   8e7dc:	00800274 	movhi	r2,9
   8e7e0:	10be4004 	addi	r2,r2,-1792
   8e7e4:	18bff62e 	bgeu	r3,r2,8e7c0 <_do_dtors+0x20>
        (*dtor) (); 
}
   8e7e8:	0001883a 	nop
   8e7ec:	e037883a 	mov	sp,fp
   8e7f0:	dfc00117 	ldw	ra,4(sp)
   8e7f4:	df000017 	ldw	fp,0(sp)
   8e7f8:	dec00204 	addi	sp,sp,8
   8e7fc:	f800283a 	ret

0008e800 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   8e800:	defffe04 	addi	sp,sp,-8
   8e804:	dfc00115 	stw	ra,4(sp)
   8e808:	df000015 	stw	fp,0(sp)
   8e80c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   8e810:	01440004 	movi	r5,4096
   8e814:	0009883a 	mov	r4,zero
   8e818:	008f2d80 	call	8f2d8 <alt_icache_flush>
#endif
}
   8e81c:	0001883a 	nop
   8e820:	e037883a 	mov	sp,fp
   8e824:	dfc00117 	ldw	ra,4(sp)
   8e828:	df000017 	ldw	fp,0(sp)
   8e82c:	dec00204 	addi	sp,sp,8
   8e830:	f800283a 	ret

0008e834 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   8e834:	defff904 	addi	sp,sp,-28
   8e838:	dfc00615 	stw	ra,24(sp)
   8e83c:	df000515 	stw	fp,20(sp)
   8e840:	df000504 	addi	fp,sp,20
   8e844:	e13ffc15 	stw	r4,-16(fp)
   8e848:	e17ffd15 	stw	r5,-12(fp)
   8e84c:	e1bffe15 	stw	r6,-8(fp)
   8e850:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   8e854:	e0800217 	ldw	r2,8(fp)
   8e858:	d8800015 	stw	r2,0(sp)
   8e85c:	e1ffff17 	ldw	r7,-4(fp)
   8e860:	e1bffe17 	ldw	r6,-8(fp)
   8e864:	e17ffd17 	ldw	r5,-12(fp)
   8e868:	e13ffc17 	ldw	r4,-16(fp)
   8e86c:	008ea140 	call	8ea14 <alt_iic_isr_register>
}  
   8e870:	e037883a 	mov	sp,fp
   8e874:	dfc00117 	ldw	ra,4(sp)
   8e878:	df000017 	ldw	fp,0(sp)
   8e87c:	dec00204 	addi	sp,sp,8
   8e880:	f800283a 	ret

0008e884 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   8e884:	defff904 	addi	sp,sp,-28
   8e888:	df000615 	stw	fp,24(sp)
   8e88c:	df000604 	addi	fp,sp,24
   8e890:	e13ffe15 	stw	r4,-8(fp)
   8e894:	e17fff15 	stw	r5,-4(fp)
   8e898:	e0bfff17 	ldw	r2,-4(fp)
   8e89c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e8a0:	0005303a 	rdctl	r2,status
   8e8a4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e8a8:	e0fffb17 	ldw	r3,-20(fp)
   8e8ac:	00bfff84 	movi	r2,-2
   8e8b0:	1884703a 	and	r2,r3,r2
   8e8b4:	1001703a 	wrctl	status,r2
  
  return context;
   8e8b8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   8e8bc:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   8e8c0:	00c00044 	movi	r3,1
   8e8c4:	e0bffa17 	ldw	r2,-24(fp)
   8e8c8:	1884983a 	sll	r2,r3,r2
   8e8cc:	1007883a 	mov	r3,r2
   8e8d0:	00800274 	movhi	r2,9
   8e8d4:	108c8a04 	addi	r2,r2,12840
   8e8d8:	10800017 	ldw	r2,0(r2)
   8e8dc:	1886b03a 	or	r3,r3,r2
   8e8e0:	00800274 	movhi	r2,9
   8e8e4:	108c8a04 	addi	r2,r2,12840
   8e8e8:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   8e8ec:	00800274 	movhi	r2,9
   8e8f0:	108c8a04 	addi	r2,r2,12840
   8e8f4:	10800017 	ldw	r2,0(r2)
   8e8f8:	100170fa 	wrctl	ienable,r2
   8e8fc:	e0bffc17 	ldw	r2,-16(fp)
   8e900:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8e904:	e0bffd17 	ldw	r2,-12(fp)
   8e908:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   8e90c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   8e910:	0001883a 	nop
}
   8e914:	e037883a 	mov	sp,fp
   8e918:	df000017 	ldw	fp,0(sp)
   8e91c:	dec00104 	addi	sp,sp,4
   8e920:	f800283a 	ret

0008e924 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   8e924:	defff904 	addi	sp,sp,-28
   8e928:	df000615 	stw	fp,24(sp)
   8e92c:	df000604 	addi	fp,sp,24
   8e930:	e13ffe15 	stw	r4,-8(fp)
   8e934:	e17fff15 	stw	r5,-4(fp)
   8e938:	e0bfff17 	ldw	r2,-4(fp)
   8e93c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8e940:	0005303a 	rdctl	r2,status
   8e944:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8e948:	e0fffb17 	ldw	r3,-20(fp)
   8e94c:	00bfff84 	movi	r2,-2
   8e950:	1884703a 	and	r2,r3,r2
   8e954:	1001703a 	wrctl	status,r2
  
  return context;
   8e958:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   8e95c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   8e960:	00c00044 	movi	r3,1
   8e964:	e0bffa17 	ldw	r2,-24(fp)
   8e968:	1884983a 	sll	r2,r3,r2
   8e96c:	0084303a 	nor	r2,zero,r2
   8e970:	1007883a 	mov	r3,r2
   8e974:	00800274 	movhi	r2,9
   8e978:	108c8a04 	addi	r2,r2,12840
   8e97c:	10800017 	ldw	r2,0(r2)
   8e980:	1886703a 	and	r3,r3,r2
   8e984:	00800274 	movhi	r2,9
   8e988:	108c8a04 	addi	r2,r2,12840
   8e98c:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   8e990:	00800274 	movhi	r2,9
   8e994:	108c8a04 	addi	r2,r2,12840
   8e998:	10800017 	ldw	r2,0(r2)
   8e99c:	100170fa 	wrctl	ienable,r2
   8e9a0:	e0bffc17 	ldw	r2,-16(fp)
   8e9a4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8e9a8:	e0bffd17 	ldw	r2,-12(fp)
   8e9ac:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   8e9b0:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   8e9b4:	0001883a 	nop
}
   8e9b8:	e037883a 	mov	sp,fp
   8e9bc:	df000017 	ldw	fp,0(sp)
   8e9c0:	dec00104 	addi	sp,sp,4
   8e9c4:	f800283a 	ret

0008e9c8 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   8e9c8:	defffc04 	addi	sp,sp,-16
   8e9cc:	df000315 	stw	fp,12(sp)
   8e9d0:	df000304 	addi	fp,sp,12
   8e9d4:	e13ffe15 	stw	r4,-8(fp)
   8e9d8:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   8e9dc:	000530fa 	rdctl	r2,ienable
   8e9e0:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   8e9e4:	00c00044 	movi	r3,1
   8e9e8:	e0bfff17 	ldw	r2,-4(fp)
   8e9ec:	1884983a 	sll	r2,r3,r2
   8e9f0:	1007883a 	mov	r3,r2
   8e9f4:	e0bffd17 	ldw	r2,-12(fp)
   8e9f8:	1884703a 	and	r2,r3,r2
   8e9fc:	1004c03a 	cmpne	r2,r2,zero
   8ea00:	10803fcc 	andi	r2,r2,255
}
   8ea04:	e037883a 	mov	sp,fp
   8ea08:	df000017 	ldw	fp,0(sp)
   8ea0c:	dec00104 	addi	sp,sp,4
   8ea10:	f800283a 	ret

0008ea14 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   8ea14:	defff504 	addi	sp,sp,-44
   8ea18:	dfc00a15 	stw	ra,40(sp)
   8ea1c:	df000915 	stw	fp,36(sp)
   8ea20:	df000904 	addi	fp,sp,36
   8ea24:	e13ffc15 	stw	r4,-16(fp)
   8ea28:	e17ffd15 	stw	r5,-12(fp)
   8ea2c:	e1bffe15 	stw	r6,-8(fp)
   8ea30:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   8ea34:	00bffa84 	movi	r2,-22
   8ea38:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   8ea3c:	e0bffd17 	ldw	r2,-12(fp)
   8ea40:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   8ea44:	e0bff817 	ldw	r2,-32(fp)
   8ea48:	10800808 	cmpgei	r2,r2,32
   8ea4c:	1000271e 	bne	r2,zero,8eaec <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8ea50:	0005303a 	rdctl	r2,status
   8ea54:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8ea58:	e0fffb17 	ldw	r3,-20(fp)
   8ea5c:	00bfff84 	movi	r2,-2
   8ea60:	1884703a 	and	r2,r3,r2
   8ea64:	1001703a 	wrctl	status,r2
  
  return context;
   8ea68:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   8ea6c:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   8ea70:	00800274 	movhi	r2,9
   8ea74:	108c9804 	addi	r2,r2,12896
   8ea78:	e0fff817 	ldw	r3,-32(fp)
   8ea7c:	180690fa 	slli	r3,r3,3
   8ea80:	10c5883a 	add	r2,r2,r3
   8ea84:	e0fffe17 	ldw	r3,-8(fp)
   8ea88:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   8ea8c:	00800274 	movhi	r2,9
   8ea90:	108c9804 	addi	r2,r2,12896
   8ea94:	e0fff817 	ldw	r3,-32(fp)
   8ea98:	180690fa 	slli	r3,r3,3
   8ea9c:	10c5883a 	add	r2,r2,r3
   8eaa0:	10800104 	addi	r2,r2,4
   8eaa4:	e0ffff17 	ldw	r3,-4(fp)
   8eaa8:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   8eaac:	e0bffe17 	ldw	r2,-8(fp)
   8eab0:	10000526 	beq	r2,zero,8eac8 <alt_iic_isr_register+0xb4>
   8eab4:	e0bff817 	ldw	r2,-32(fp)
   8eab8:	100b883a 	mov	r5,r2
   8eabc:	e13ffc17 	ldw	r4,-16(fp)
   8eac0:	008e8840 	call	8e884 <alt_ic_irq_enable>
   8eac4:	00000406 	br	8ead8 <alt_iic_isr_register+0xc4>
   8eac8:	e0bff817 	ldw	r2,-32(fp)
   8eacc:	100b883a 	mov	r5,r2
   8ead0:	e13ffc17 	ldw	r4,-16(fp)
   8ead4:	008e9240 	call	8e924 <alt_ic_irq_disable>
   8ead8:	e0bff715 	stw	r2,-36(fp)
   8eadc:	e0bffa17 	ldw	r2,-24(fp)
   8eae0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8eae4:	e0bff917 	ldw	r2,-28(fp)
   8eae8:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   8eaec:	e0bff717 	ldw	r2,-36(fp)
}
   8eaf0:	e037883a 	mov	sp,fp
   8eaf4:	dfc00117 	ldw	ra,4(sp)
   8eaf8:	df000017 	ldw	fp,0(sp)
   8eafc:	dec00204 	addi	sp,sp,8
   8eb00:	f800283a 	ret

0008eb04 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   8eb04:	defff904 	addi	sp,sp,-28
   8eb08:	dfc00615 	stw	ra,24(sp)
   8eb0c:	df000515 	stw	fp,20(sp)
   8eb10:	df000504 	addi	fp,sp,20
   8eb14:	e13ffc15 	stw	r4,-16(fp)
   8eb18:	e17ffd15 	stw	r5,-12(fp)
   8eb1c:	e1bffe15 	stw	r6,-8(fp)
   8eb20:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   8eb24:	e1bfff17 	ldw	r6,-4(fp)
   8eb28:	e17ffe17 	ldw	r5,-8(fp)
   8eb2c:	e13ffd17 	ldw	r4,-12(fp)
   8eb30:	008ed600 	call	8ed60 <open>
   8eb34:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   8eb38:	e0bffb17 	ldw	r2,-20(fp)
   8eb3c:	10001c16 	blt	r2,zero,8ebb0 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   8eb40:	00800274 	movhi	r2,9
   8eb44:	10813d04 	addi	r2,r2,1268
   8eb48:	e0fffb17 	ldw	r3,-20(fp)
   8eb4c:	18c00324 	muli	r3,r3,12
   8eb50:	10c5883a 	add	r2,r2,r3
   8eb54:	10c00017 	ldw	r3,0(r2)
   8eb58:	e0bffc17 	ldw	r2,-16(fp)
   8eb5c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   8eb60:	00800274 	movhi	r2,9
   8eb64:	10813d04 	addi	r2,r2,1268
   8eb68:	e0fffb17 	ldw	r3,-20(fp)
   8eb6c:	18c00324 	muli	r3,r3,12
   8eb70:	10c5883a 	add	r2,r2,r3
   8eb74:	10800104 	addi	r2,r2,4
   8eb78:	10c00017 	ldw	r3,0(r2)
   8eb7c:	e0bffc17 	ldw	r2,-16(fp)
   8eb80:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   8eb84:	00800274 	movhi	r2,9
   8eb88:	10813d04 	addi	r2,r2,1268
   8eb8c:	e0fffb17 	ldw	r3,-20(fp)
   8eb90:	18c00324 	muli	r3,r3,12
   8eb94:	10c5883a 	add	r2,r2,r3
   8eb98:	10800204 	addi	r2,r2,8
   8eb9c:	10c00017 	ldw	r3,0(r2)
   8eba0:	e0bffc17 	ldw	r2,-16(fp)
   8eba4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   8eba8:	e13ffb17 	ldw	r4,-20(fp)
   8ebac:	008d5600 	call	8d560 <alt_release_fd>
  }
} 
   8ebb0:	0001883a 	nop
   8ebb4:	e037883a 	mov	sp,fp
   8ebb8:	dfc00117 	ldw	ra,4(sp)
   8ebbc:	df000017 	ldw	fp,0(sp)
   8ebc0:	dec00204 	addi	sp,sp,8
   8ebc4:	f800283a 	ret

0008ebc8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   8ebc8:	defffb04 	addi	sp,sp,-20
   8ebcc:	dfc00415 	stw	ra,16(sp)
   8ebd0:	df000315 	stw	fp,12(sp)
   8ebd4:	df000304 	addi	fp,sp,12
   8ebd8:	e13ffd15 	stw	r4,-12(fp)
   8ebdc:	e17ffe15 	stw	r5,-8(fp)
   8ebe0:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   8ebe4:	01c07fc4 	movi	r7,511
   8ebe8:	01800044 	movi	r6,1
   8ebec:	e17ffd17 	ldw	r5,-12(fp)
   8ebf0:	01000274 	movhi	r4,9
   8ebf4:	21014004 	addi	r4,r4,1280
   8ebf8:	008eb040 	call	8eb04 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   8ebfc:	01c07fc4 	movi	r7,511
   8ec00:	000d883a 	mov	r6,zero
   8ec04:	e17ffe17 	ldw	r5,-8(fp)
   8ec08:	01000274 	movhi	r4,9
   8ec0c:	21013d04 	addi	r4,r4,1268
   8ec10:	008eb040 	call	8eb04 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   8ec14:	01c07fc4 	movi	r7,511
   8ec18:	01800044 	movi	r6,1
   8ec1c:	e17fff17 	ldw	r5,-4(fp)
   8ec20:	01000274 	movhi	r4,9
   8ec24:	21014304 	addi	r4,r4,1292
   8ec28:	008eb040 	call	8eb04 <alt_open_fd>
}  
   8ec2c:	0001883a 	nop
   8ec30:	e037883a 	mov	sp,fp
   8ec34:	dfc00117 	ldw	ra,4(sp)
   8ec38:	df000017 	ldw	fp,0(sp)
   8ec3c:	dec00204 	addi	sp,sp,8
   8ec40:	f800283a 	ret

0008ec44 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   8ec44:	defffe04 	addi	sp,sp,-8
   8ec48:	dfc00115 	stw	ra,4(sp)
   8ec4c:	df000015 	stw	fp,0(sp)
   8ec50:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   8ec54:	00800274 	movhi	r2,9
   8ec58:	1085c004 	addi	r2,r2,5888
   8ec5c:	10800017 	ldw	r2,0(r2)
   8ec60:	10000526 	beq	r2,zero,8ec78 <alt_get_errno+0x34>
   8ec64:	00800274 	movhi	r2,9
   8ec68:	1085c004 	addi	r2,r2,5888
   8ec6c:	10800017 	ldw	r2,0(r2)
   8ec70:	103ee83a 	callr	r2
   8ec74:	00000206 	br	8ec80 <alt_get_errno+0x3c>
   8ec78:	00800274 	movhi	r2,9
   8ec7c:	108c8604 	addi	r2,r2,12824
}
   8ec80:	e037883a 	mov	sp,fp
   8ec84:	dfc00117 	ldw	ra,4(sp)
   8ec88:	df000017 	ldw	fp,0(sp)
   8ec8c:	dec00204 	addi	sp,sp,8
   8ec90:	f800283a 	ret

0008ec94 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   8ec94:	defffd04 	addi	sp,sp,-12
   8ec98:	df000215 	stw	fp,8(sp)
   8ec9c:	df000204 	addi	fp,sp,8
   8eca0:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   8eca4:	e0bfff17 	ldw	r2,-4(fp)
   8eca8:	10800217 	ldw	r2,8(r2)
   8ecac:	10d00034 	orhi	r3,r2,16384
   8ecb0:	e0bfff17 	ldw	r2,-4(fp)
   8ecb4:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   8ecb8:	e03ffe15 	stw	zero,-8(fp)
   8ecbc:	00001d06 	br	8ed34 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   8ecc0:	00800274 	movhi	r2,9
   8ecc4:	10813d04 	addi	r2,r2,1268
   8ecc8:	e0fffe17 	ldw	r3,-8(fp)
   8eccc:	18c00324 	muli	r3,r3,12
   8ecd0:	10c5883a 	add	r2,r2,r3
   8ecd4:	10c00017 	ldw	r3,0(r2)
   8ecd8:	e0bfff17 	ldw	r2,-4(fp)
   8ecdc:	10800017 	ldw	r2,0(r2)
   8ece0:	1880111e 	bne	r3,r2,8ed28 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   8ece4:	00800274 	movhi	r2,9
   8ece8:	10813d04 	addi	r2,r2,1268
   8ecec:	e0fffe17 	ldw	r3,-8(fp)
   8ecf0:	18c00324 	muli	r3,r3,12
   8ecf4:	10c5883a 	add	r2,r2,r3
   8ecf8:	10800204 	addi	r2,r2,8
   8ecfc:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   8ed00:	1000090e 	bge	r2,zero,8ed28 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   8ed04:	e0bffe17 	ldw	r2,-8(fp)
   8ed08:	10c00324 	muli	r3,r2,12
   8ed0c:	00800274 	movhi	r2,9
   8ed10:	10813d04 	addi	r2,r2,1268
   8ed14:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   8ed18:	e0bfff17 	ldw	r2,-4(fp)
   8ed1c:	18800226 	beq	r3,r2,8ed28 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   8ed20:	00bffcc4 	movi	r2,-13
   8ed24:	00000a06 	br	8ed50 <alt_file_locked+0xbc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   8ed28:	e0bffe17 	ldw	r2,-8(fp)
   8ed2c:	10800044 	addi	r2,r2,1
   8ed30:	e0bffe15 	stw	r2,-8(fp)
   8ed34:	00800274 	movhi	r2,9
   8ed38:	1085bf04 	addi	r2,r2,5884
   8ed3c:	10800017 	ldw	r2,0(r2)
   8ed40:	1007883a 	mov	r3,r2
   8ed44:	e0bffe17 	ldw	r2,-8(fp)
   8ed48:	18bfdd2e 	bgeu	r3,r2,8ecc0 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   8ed4c:	0005883a 	mov	r2,zero
}
   8ed50:	e037883a 	mov	sp,fp
   8ed54:	df000017 	ldw	fp,0(sp)
   8ed58:	dec00104 	addi	sp,sp,4
   8ed5c:	f800283a 	ret

0008ed60 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   8ed60:	defff604 	addi	sp,sp,-40
   8ed64:	dfc00915 	stw	ra,36(sp)
   8ed68:	df000815 	stw	fp,32(sp)
   8ed6c:	df000804 	addi	fp,sp,32
   8ed70:	e13ffd15 	stw	r4,-12(fp)
   8ed74:	e17ffe15 	stw	r5,-8(fp)
   8ed78:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   8ed7c:	00bfffc4 	movi	r2,-1
   8ed80:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   8ed84:	00bffb44 	movi	r2,-19
   8ed88:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   8ed8c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   8ed90:	01400274 	movhi	r5,9
   8ed94:	2945bd04 	addi	r5,r5,5876
   8ed98:	e13ffd17 	ldw	r4,-12(fp)
   8ed9c:	008f0800 	call	8f080 <alt_find_dev>
   8eda0:	e0bff815 	stw	r2,-32(fp)
   8eda4:	e0bff817 	ldw	r2,-32(fp)
   8eda8:	1000051e 	bne	r2,zero,8edc0 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   8edac:	e13ffd17 	ldw	r4,-12(fp)
   8edb0:	008f1100 	call	8f110 <alt_find_file>
   8edb4:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   8edb8:	00800044 	movi	r2,1
   8edbc:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   8edc0:	e0bff817 	ldw	r2,-32(fp)
   8edc4:	10002926 	beq	r2,zero,8ee6c <open+0x10c>
  {
    if ((index = alt_get_fd (dev)) < 0)
   8edc8:	e13ff817 	ldw	r4,-32(fp)
   8edcc:	008f2240 	call	8f224 <alt_get_fd>
   8edd0:	e0bff915 	stw	r2,-28(fp)
   8edd4:	e0bff917 	ldw	r2,-28(fp)
   8edd8:	1000030e 	bge	r2,zero,8ede8 <open+0x88>
    {
      status = index;
   8eddc:	e0bff917 	ldw	r2,-28(fp)
   8ede0:	e0bffa15 	stw	r2,-24(fp)
   8ede4:	00002306 	br	8ee74 <open+0x114>
    }
    else
    {
      fd = &alt_fd_list[index];
   8ede8:	e0bff917 	ldw	r2,-28(fp)
   8edec:	10c00324 	muli	r3,r2,12
   8edf0:	00800274 	movhi	r2,9
   8edf4:	10813d04 	addi	r2,r2,1268
   8edf8:	1885883a 	add	r2,r3,r2
   8edfc:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   8ee00:	e0fffe17 	ldw	r3,-8(fp)
   8ee04:	00900034 	movhi	r2,16384
   8ee08:	10bfffc4 	addi	r2,r2,-1
   8ee0c:	1886703a 	and	r3,r3,r2
   8ee10:	e0bffc17 	ldw	r2,-16(fp)
   8ee14:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   8ee18:	e0bffb17 	ldw	r2,-20(fp)
   8ee1c:	1000051e 	bne	r2,zero,8ee34 <open+0xd4>
   8ee20:	e13ffc17 	ldw	r4,-16(fp)
   8ee24:	008ec940 	call	8ec94 <alt_file_locked>
   8ee28:	e0bffa15 	stw	r2,-24(fp)
   8ee2c:	e0bffa17 	ldw	r2,-24(fp)
   8ee30:	10001016 	blt	r2,zero,8ee74 <open+0x114>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   8ee34:	e0bff817 	ldw	r2,-32(fp)
   8ee38:	10800317 	ldw	r2,12(r2)
   8ee3c:	10000826 	beq	r2,zero,8ee60 <open+0x100>
   8ee40:	e0bff817 	ldw	r2,-32(fp)
   8ee44:	10800317 	ldw	r2,12(r2)
   8ee48:	e1ffff17 	ldw	r7,-4(fp)
   8ee4c:	e1bffe17 	ldw	r6,-8(fp)
   8ee50:	e17ffd17 	ldw	r5,-12(fp)
   8ee54:	e13ffc17 	ldw	r4,-16(fp)
   8ee58:	103ee83a 	callr	r2
   8ee5c:	00000106 	br	8ee64 <open+0x104>
   8ee60:	0005883a 	mov	r2,zero
   8ee64:	e0bffa15 	stw	r2,-24(fp)
   8ee68:	00000206 	br	8ee74 <open+0x114>
      }
    }
  }
  else
  {
    status = -ENODEV;
   8ee6c:	00bffb44 	movi	r2,-19
   8ee70:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   8ee74:	e0bffa17 	ldw	r2,-24(fp)
   8ee78:	1000090e 	bge	r2,zero,8eea0 <open+0x140>
  {
    alt_release_fd (index);  
   8ee7c:	e13ff917 	ldw	r4,-28(fp)
   8ee80:	008d5600 	call	8d560 <alt_release_fd>
    ALT_ERRNO = -status;
   8ee84:	008ec440 	call	8ec44 <alt_get_errno>
   8ee88:	1007883a 	mov	r3,r2
   8ee8c:	e0bffa17 	ldw	r2,-24(fp)
   8ee90:	0085c83a 	sub	r2,zero,r2
   8ee94:	18800015 	stw	r2,0(r3)
    return -1;
   8ee98:	00bfffc4 	movi	r2,-1
   8ee9c:	00000106 	br	8eea4 <open+0x144>
  }
  
  /* return the reference upon success */

  return index;
   8eea0:	e0bff917 	ldw	r2,-28(fp)
}
   8eea4:	e037883a 	mov	sp,fp
   8eea8:	dfc00117 	ldw	ra,4(sp)
   8eeac:	df000017 	ldw	fp,0(sp)
   8eeb0:	dec00204 	addi	sp,sp,8
   8eeb4:	f800283a 	ret

0008eeb8 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   8eeb8:	defffa04 	addi	sp,sp,-24
   8eebc:	df000515 	stw	fp,20(sp)
   8eec0:	df000504 	addi	fp,sp,20
   8eec4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   8eec8:	0005303a 	rdctl	r2,status
   8eecc:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   8eed0:	e0fffc17 	ldw	r3,-16(fp)
   8eed4:	00bfff84 	movi	r2,-2
   8eed8:	1884703a 	and	r2,r3,r2
   8eedc:	1001703a 	wrctl	status,r2
  
  return context;
   8eee0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   8eee4:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   8eee8:	e0bfff17 	ldw	r2,-4(fp)
   8eeec:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   8eef0:	e0bffd17 	ldw	r2,-12(fp)
   8eef4:	10800017 	ldw	r2,0(r2)
   8eef8:	e0fffd17 	ldw	r3,-12(fp)
   8eefc:	18c00117 	ldw	r3,4(r3)
   8ef00:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   8ef04:	e0bffd17 	ldw	r2,-12(fp)
   8ef08:	10800117 	ldw	r2,4(r2)
   8ef0c:	e0fffd17 	ldw	r3,-12(fp)
   8ef10:	18c00017 	ldw	r3,0(r3)
   8ef14:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   8ef18:	e0bffd17 	ldw	r2,-12(fp)
   8ef1c:	e0fffd17 	ldw	r3,-12(fp)
   8ef20:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   8ef24:	e0bffd17 	ldw	r2,-12(fp)
   8ef28:	e0fffd17 	ldw	r3,-12(fp)
   8ef2c:	10c00015 	stw	r3,0(r2)
   8ef30:	e0bffb17 	ldw	r2,-20(fp)
   8ef34:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   8ef38:	e0bffe17 	ldw	r2,-8(fp)
   8ef3c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   8ef40:	0001883a 	nop
   8ef44:	e037883a 	mov	sp,fp
   8ef48:	df000017 	ldw	fp,0(sp)
   8ef4c:	dec00104 	addi	sp,sp,4
   8ef50:	f800283a 	ret

0008ef54 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   8ef54:	defffb04 	addi	sp,sp,-20
   8ef58:	dfc00415 	stw	ra,16(sp)
   8ef5c:	df000315 	stw	fp,12(sp)
   8ef60:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   8ef64:	d0a00e17 	ldw	r2,-32712(gp)
   8ef68:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   8ef6c:	d0a6d717 	ldw	r2,-25764(gp)
   8ef70:	10800044 	addi	r2,r2,1
   8ef74:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   8ef78:	00002e06 	br	8f034 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   8ef7c:	e0bffd17 	ldw	r2,-12(fp)
   8ef80:	10800017 	ldw	r2,0(r2)
   8ef84:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   8ef88:	e0bffd17 	ldw	r2,-12(fp)
   8ef8c:	10800403 	ldbu	r2,16(r2)
   8ef90:	10803fcc 	andi	r2,r2,255
   8ef94:	10000426 	beq	r2,zero,8efa8 <alt_tick+0x54>
   8ef98:	d0a6d717 	ldw	r2,-25764(gp)
   8ef9c:	1000021e 	bne	r2,zero,8efa8 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   8efa0:	e0bffd17 	ldw	r2,-12(fp)
   8efa4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   8efa8:	e0bffd17 	ldw	r2,-12(fp)
   8efac:	10800217 	ldw	r2,8(r2)
   8efb0:	d0e6d717 	ldw	r3,-25764(gp)
   8efb4:	18801d36 	bltu	r3,r2,8f02c <alt_tick+0xd8>
   8efb8:	e0bffd17 	ldw	r2,-12(fp)
   8efbc:	10800403 	ldbu	r2,16(r2)
   8efc0:	10803fcc 	andi	r2,r2,255
   8efc4:	1000191e 	bne	r2,zero,8f02c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   8efc8:	e0bffd17 	ldw	r2,-12(fp)
   8efcc:	10800317 	ldw	r2,12(r2)
   8efd0:	e0fffd17 	ldw	r3,-12(fp)
   8efd4:	18c00517 	ldw	r3,20(r3)
   8efd8:	1809883a 	mov	r4,r3
   8efdc:	103ee83a 	callr	r2
   8efe0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   8efe4:	e0bfff17 	ldw	r2,-4(fp)
   8efe8:	1000031e 	bne	r2,zero,8eff8 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   8efec:	e13ffd17 	ldw	r4,-12(fp)
   8eff0:	008eeb80 	call	8eeb8 <alt_alarm_stop>
   8eff4:	00000d06 	br	8f02c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   8eff8:	e0bffd17 	ldw	r2,-12(fp)
   8effc:	10c00217 	ldw	r3,8(r2)
   8f000:	e0bfff17 	ldw	r2,-4(fp)
   8f004:	1887883a 	add	r3,r3,r2
   8f008:	e0bffd17 	ldw	r2,-12(fp)
   8f00c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   8f010:	e0bffd17 	ldw	r2,-12(fp)
   8f014:	10c00217 	ldw	r3,8(r2)
   8f018:	d0a6d717 	ldw	r2,-25764(gp)
   8f01c:	1880032e 	bgeu	r3,r2,8f02c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   8f020:	e0bffd17 	ldw	r2,-12(fp)
   8f024:	00c00044 	movi	r3,1
   8f028:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   8f02c:	e0bffe17 	ldw	r2,-8(fp)
   8f030:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   8f034:	e0fffd17 	ldw	r3,-12(fp)
   8f038:	d0a00e04 	addi	r2,gp,-32712
   8f03c:	18bfcf1e 	bne	r3,r2,8ef7c <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   8f040:	0001883a 	nop
}
   8f044:	0001883a 	nop
   8f048:	e037883a 	mov	sp,fp
   8f04c:	dfc00117 	ldw	ra,4(sp)
   8f050:	df000017 	ldw	fp,0(sp)
   8f054:	dec00204 	addi	sp,sp,8
   8f058:	f800283a 	ret

0008f05c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   8f05c:	deffff04 	addi	sp,sp,-4
   8f060:	df000015 	stw	fp,0(sp)
   8f064:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   8f068:	000170fa 	wrctl	ienable,zero
}
   8f06c:	0001883a 	nop
   8f070:	e037883a 	mov	sp,fp
   8f074:	df000017 	ldw	fp,0(sp)
   8f078:	dec00104 	addi	sp,sp,4
   8f07c:	f800283a 	ret

0008f080 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   8f080:	defffa04 	addi	sp,sp,-24
   8f084:	dfc00515 	stw	ra,20(sp)
   8f088:	df000415 	stw	fp,16(sp)
   8f08c:	df000404 	addi	fp,sp,16
   8f090:	e13ffe15 	stw	r4,-8(fp)
   8f094:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   8f098:	e0bfff17 	ldw	r2,-4(fp)
   8f09c:	10800017 	ldw	r2,0(r2)
   8f0a0:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   8f0a4:	e13ffe17 	ldw	r4,-8(fp)
   8f0a8:	0086d340 	call	86d34 <strlen>
   8f0ac:	10800044 	addi	r2,r2,1
   8f0b0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   8f0b4:	00000d06 	br	8f0ec <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   8f0b8:	e0bffc17 	ldw	r2,-16(fp)
   8f0bc:	10800217 	ldw	r2,8(r2)
   8f0c0:	e0fffd17 	ldw	r3,-12(fp)
   8f0c4:	180d883a 	mov	r6,r3
   8f0c8:	e17ffe17 	ldw	r5,-8(fp)
   8f0cc:	1009883a 	mov	r4,r2
   8f0d0:	008f4500 	call	8f450 <memcmp>
   8f0d4:	1000021e 	bne	r2,zero,8f0e0 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   8f0d8:	e0bffc17 	ldw	r2,-16(fp)
   8f0dc:	00000706 	br	8f0fc <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   8f0e0:	e0bffc17 	ldw	r2,-16(fp)
   8f0e4:	10800017 	ldw	r2,0(r2)
   8f0e8:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   8f0ec:	e0fffc17 	ldw	r3,-16(fp)
   8f0f0:	e0bfff17 	ldw	r2,-4(fp)
   8f0f4:	18bff01e 	bne	r3,r2,8f0b8 <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   8f0f8:	0005883a 	mov	r2,zero
}
   8f0fc:	e037883a 	mov	sp,fp
   8f100:	dfc00117 	ldw	ra,4(sp)
   8f104:	df000017 	ldw	fp,0(sp)
   8f108:	dec00204 	addi	sp,sp,8
   8f10c:	f800283a 	ret

0008f110 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   8f110:	defffb04 	addi	sp,sp,-20
   8f114:	dfc00415 	stw	ra,16(sp)
   8f118:	df000315 	stw	fp,12(sp)
   8f11c:	df000304 	addi	fp,sp,12
   8f120:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   8f124:	00800274 	movhi	r2,9
   8f128:	1085bb04 	addi	r2,r2,5868
   8f12c:	10800017 	ldw	r2,0(r2)
   8f130:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   8f134:	00003106 	br	8f1fc <alt_find_file+0xec>
  {
    len = strlen(next->name);
   8f138:	e0bffd17 	ldw	r2,-12(fp)
   8f13c:	10800217 	ldw	r2,8(r2)
   8f140:	1009883a 	mov	r4,r2
   8f144:	0086d340 	call	86d34 <strlen>
   8f148:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   8f14c:	e0bffd17 	ldw	r2,-12(fp)
   8f150:	10c00217 	ldw	r3,8(r2)
   8f154:	e0bffe17 	ldw	r2,-8(fp)
   8f158:	10bfffc4 	addi	r2,r2,-1
   8f15c:	1885883a 	add	r2,r3,r2
   8f160:	10800003 	ldbu	r2,0(r2)
   8f164:	10803fcc 	andi	r2,r2,255
   8f168:	1080201c 	xori	r2,r2,128
   8f16c:	10bfe004 	addi	r2,r2,-128
   8f170:	10800bd8 	cmpnei	r2,r2,47
   8f174:	1000031e 	bne	r2,zero,8f184 <alt_find_file+0x74>
    {
      len -= 1;
   8f178:	e0bffe17 	ldw	r2,-8(fp)
   8f17c:	10bfffc4 	addi	r2,r2,-1
   8f180:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   8f184:	e0bffe17 	ldw	r2,-8(fp)
   8f188:	e0ffff17 	ldw	r3,-4(fp)
   8f18c:	1885883a 	add	r2,r3,r2
   8f190:	10800003 	ldbu	r2,0(r2)
   8f194:	10803fcc 	andi	r2,r2,255
   8f198:	1080201c 	xori	r2,r2,128
   8f19c:	10bfe004 	addi	r2,r2,-128
   8f1a0:	10800be0 	cmpeqi	r2,r2,47
   8f1a4:	1000081e 	bne	r2,zero,8f1c8 <alt_find_file+0xb8>
   8f1a8:	e0bffe17 	ldw	r2,-8(fp)
   8f1ac:	e0ffff17 	ldw	r3,-4(fp)
   8f1b0:	1885883a 	add	r2,r3,r2
   8f1b4:	10800003 	ldbu	r2,0(r2)
   8f1b8:	10803fcc 	andi	r2,r2,255
   8f1bc:	1080201c 	xori	r2,r2,128
   8f1c0:	10bfe004 	addi	r2,r2,-128
   8f1c4:	10000a1e 	bne	r2,zero,8f1f0 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
   8f1c8:	e0bffd17 	ldw	r2,-12(fp)
   8f1cc:	10800217 	ldw	r2,8(r2)
   8f1d0:	e0fffe17 	ldw	r3,-8(fp)
   8f1d4:	180d883a 	mov	r6,r3
   8f1d8:	e17fff17 	ldw	r5,-4(fp)
   8f1dc:	1009883a 	mov	r4,r2
   8f1e0:	008f4500 	call	8f450 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   8f1e4:	1000021e 	bne	r2,zero,8f1f0 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   8f1e8:	e0bffd17 	ldw	r2,-12(fp)
   8f1ec:	00000806 	br	8f210 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
   8f1f0:	e0bffd17 	ldw	r2,-12(fp)
   8f1f4:	10800017 	ldw	r2,0(r2)
   8f1f8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   8f1fc:	e0fffd17 	ldw	r3,-12(fp)
   8f200:	00800274 	movhi	r2,9
   8f204:	1085bb04 	addi	r2,r2,5868
   8f208:	18bfcb1e 	bne	r3,r2,8f138 <alt_find_file+0x28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   8f20c:	0005883a 	mov	r2,zero
}
   8f210:	e037883a 	mov	sp,fp
   8f214:	dfc00117 	ldw	ra,4(sp)
   8f218:	df000017 	ldw	fp,0(sp)
   8f21c:	dec00204 	addi	sp,sp,8
   8f220:	f800283a 	ret

0008f224 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   8f224:	defffc04 	addi	sp,sp,-16
   8f228:	df000315 	stw	fp,12(sp)
   8f22c:	df000304 	addi	fp,sp,12
   8f230:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   8f234:	00bffa04 	movi	r2,-24
   8f238:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   8f23c:	e03ffd15 	stw	zero,-12(fp)
   8f240:	00001d06 	br	8f2b8 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
   8f244:	00800274 	movhi	r2,9
   8f248:	10813d04 	addi	r2,r2,1268
   8f24c:	e0fffd17 	ldw	r3,-12(fp)
   8f250:	18c00324 	muli	r3,r3,12
   8f254:	10c5883a 	add	r2,r2,r3
   8f258:	10800017 	ldw	r2,0(r2)
   8f25c:	1000131e 	bne	r2,zero,8f2ac <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
   8f260:	00800274 	movhi	r2,9
   8f264:	10813d04 	addi	r2,r2,1268
   8f268:	e0fffd17 	ldw	r3,-12(fp)
   8f26c:	18c00324 	muli	r3,r3,12
   8f270:	10c5883a 	add	r2,r2,r3
   8f274:	e0ffff17 	ldw	r3,-4(fp)
   8f278:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   8f27c:	00800274 	movhi	r2,9
   8f280:	1085bf04 	addi	r2,r2,5884
   8f284:	10c00017 	ldw	r3,0(r2)
   8f288:	e0bffd17 	ldw	r2,-12(fp)
   8f28c:	1880040e 	bge	r3,r2,8f2a0 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
   8f290:	00800274 	movhi	r2,9
   8f294:	1085bf04 	addi	r2,r2,5884
   8f298:	e0fffd17 	ldw	r3,-12(fp)
   8f29c:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
   8f2a0:	e0bffd17 	ldw	r2,-12(fp)
   8f2a4:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   8f2a8:	00000606 	br	8f2c4 <alt_get_fd+0xa0>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   8f2ac:	e0bffd17 	ldw	r2,-12(fp)
   8f2b0:	10800044 	addi	r2,r2,1
   8f2b4:	e0bffd15 	stw	r2,-12(fp)
   8f2b8:	e0bffd17 	ldw	r2,-12(fp)
   8f2bc:	10800810 	cmplti	r2,r2,32
   8f2c0:	103fe01e 	bne	r2,zero,8f244 <alt_get_fd+0x20>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   8f2c4:	e0bffe17 	ldw	r2,-8(fp)
}
   8f2c8:	e037883a 	mov	sp,fp
   8f2cc:	df000017 	ldw	fp,0(sp)
   8f2d0:	dec00104 	addi	sp,sp,4
   8f2d4:	f800283a 	ret

0008f2d8 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   8f2d8:	defffb04 	addi	sp,sp,-20
   8f2dc:	df000415 	stw	fp,16(sp)
   8f2e0:	df000404 	addi	fp,sp,16
   8f2e4:	e13ffe15 	stw	r4,-8(fp)
   8f2e8:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   8f2ec:	e0bfff17 	ldw	r2,-4(fp)
   8f2f0:	10840070 	cmpltui	r2,r2,4097
   8f2f4:	1000021e 	bne	r2,zero,8f300 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   8f2f8:	00840004 	movi	r2,4096
   8f2fc:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   8f300:	e0fffe17 	ldw	r3,-8(fp)
   8f304:	e0bfff17 	ldw	r2,-4(fp)
   8f308:	1885883a 	add	r2,r3,r2
   8f30c:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   8f310:	e0bffe17 	ldw	r2,-8(fp)
   8f314:	e0bffc15 	stw	r2,-16(fp)
   8f318:	00000506 	br	8f330 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   8f31c:	e0bffc17 	ldw	r2,-16(fp)
   8f320:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   8f324:	e0bffc17 	ldw	r2,-16(fp)
   8f328:	10800804 	addi	r2,r2,32
   8f32c:	e0bffc15 	stw	r2,-16(fp)
   8f330:	e0fffc17 	ldw	r3,-16(fp)
   8f334:	e0bffd17 	ldw	r2,-12(fp)
   8f338:	18bff836 	bltu	r3,r2,8f31c <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   8f33c:	e0bffe17 	ldw	r2,-8(fp)
   8f340:	108007cc 	andi	r2,r2,31
   8f344:	10000226 	beq	r2,zero,8f350 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   8f348:	e0bffc17 	ldw	r2,-16(fp)
   8f34c:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   8f350:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   8f354:	0001883a 	nop
   8f358:	e037883a 	mov	sp,fp
   8f35c:	df000017 	ldw	fp,0(sp)
   8f360:	dec00104 	addi	sp,sp,4
   8f364:	f800283a 	ret

0008f368 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   8f368:	defffe04 	addi	sp,sp,-8
   8f36c:	df000115 	stw	fp,4(sp)
   8f370:	df000104 	addi	fp,sp,4
   8f374:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   8f378:	e0bfff17 	ldw	r2,-4(fp)
   8f37c:	10bffe84 	addi	r2,r2,-6
   8f380:	10c00428 	cmpgeui	r3,r2,16
   8f384:	18001a1e 	bne	r3,zero,8f3f0 <alt_exception_cause_generated_bad_addr+0x88>
   8f388:	100690ba 	slli	r3,r2,2
   8f38c:	00800274 	movhi	r2,9
   8f390:	10bce804 	addi	r2,r2,-3168
   8f394:	1885883a 	add	r2,r3,r2
   8f398:	10800017 	ldw	r2,0(r2)
   8f39c:	1000683a 	jmp	r2
   8f3a0:	0008f3e0 	cmpeqi	zero,zero,9167
   8f3a4:	0008f3e0 	cmpeqi	zero,zero,9167
   8f3a8:	0008f3f0 	cmpltui	zero,zero,9167
   8f3ac:	0008f3f0 	cmpltui	zero,zero,9167
   8f3b0:	0008f3f0 	cmpltui	zero,zero,9167
   8f3b4:	0008f3e0 	cmpeqi	zero,zero,9167
   8f3b8:	0008f3e8 	cmpgeui	zero,zero,9167
   8f3bc:	0008f3f0 	cmpltui	zero,zero,9167
   8f3c0:	0008f3e0 	cmpeqi	zero,zero,9167
   8f3c4:	0008f3e0 	cmpeqi	zero,zero,9167
   8f3c8:	0008f3f0 	cmpltui	zero,zero,9167
   8f3cc:	0008f3e0 	cmpeqi	zero,zero,9167
   8f3d0:	0008f3e8 	cmpgeui	zero,zero,9167
   8f3d4:	0008f3f0 	cmpltui	zero,zero,9167
   8f3d8:	0008f3f0 	cmpltui	zero,zero,9167
   8f3dc:	0008f3e0 	cmpeqi	zero,zero,9167
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   8f3e0:	00800044 	movi	r2,1
   8f3e4:	00000306 	br	8f3f4 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   8f3e8:	0005883a 	mov	r2,zero
   8f3ec:	00000106 	br	8f3f4 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   8f3f0:	0005883a 	mov	r2,zero
  }
}
   8f3f4:	e037883a 	mov	sp,fp
   8f3f8:	df000017 	ldw	fp,0(sp)
   8f3fc:	dec00104 	addi	sp,sp,4
   8f400:	f800283a 	ret

0008f404 <atexit>:
   8f404:	200b883a 	mov	r5,r4
   8f408:	000f883a 	mov	r7,zero
   8f40c:	000d883a 	mov	r6,zero
   8f410:	0009883a 	mov	r4,zero
   8f414:	008f6341 	jmpi	8f634 <__register_exitproc>

0008f418 <exit>:
   8f418:	defffe04 	addi	sp,sp,-8
   8f41c:	000b883a 	mov	r5,zero
   8f420:	dc000015 	stw	r16,0(sp)
   8f424:	dfc00115 	stw	ra,4(sp)
   8f428:	2021883a 	mov	r16,r4
   8f42c:	008f74c0 	call	8f74c <__call_exitprocs>
   8f430:	00800274 	movhi	r2,9
   8f434:	1085b504 	addi	r2,r2,5844
   8f438:	11000017 	ldw	r4,0(r2)
   8f43c:	20800f17 	ldw	r2,60(r4)
   8f440:	10000126 	beq	r2,zero,8f448 <exit+0x30>
   8f444:	103ee83a 	callr	r2
   8f448:	8009883a 	mov	r4,r16
   8f44c:	008f8cc0 	call	8f8cc <_exit>

0008f450 <memcmp>:
   8f450:	01c000c4 	movi	r7,3
   8f454:	3980192e 	bgeu	r7,r6,8f4bc <memcmp+0x6c>
   8f458:	2144b03a 	or	r2,r4,r5
   8f45c:	11c4703a 	and	r2,r2,r7
   8f460:	10000f26 	beq	r2,zero,8f4a0 <memcmp+0x50>
   8f464:	20800003 	ldbu	r2,0(r4)
   8f468:	28c00003 	ldbu	r3,0(r5)
   8f46c:	10c0151e 	bne	r2,r3,8f4c4 <memcmp+0x74>
   8f470:	31bfff84 	addi	r6,r6,-2
   8f474:	01ffffc4 	movi	r7,-1
   8f478:	00000406 	br	8f48c <memcmp+0x3c>
   8f47c:	20800003 	ldbu	r2,0(r4)
   8f480:	28c00003 	ldbu	r3,0(r5)
   8f484:	31bfffc4 	addi	r6,r6,-1
   8f488:	10c00e1e 	bne	r2,r3,8f4c4 <memcmp+0x74>
   8f48c:	21000044 	addi	r4,r4,1
   8f490:	29400044 	addi	r5,r5,1
   8f494:	31fff91e 	bne	r6,r7,8f47c <memcmp+0x2c>
   8f498:	0005883a 	mov	r2,zero
   8f49c:	f800283a 	ret
   8f4a0:	20c00017 	ldw	r3,0(r4)
   8f4a4:	28800017 	ldw	r2,0(r5)
   8f4a8:	18bfee1e 	bne	r3,r2,8f464 <memcmp+0x14>
   8f4ac:	31bfff04 	addi	r6,r6,-4
   8f4b0:	21000104 	addi	r4,r4,4
   8f4b4:	29400104 	addi	r5,r5,4
   8f4b8:	39bff936 	bltu	r7,r6,8f4a0 <memcmp+0x50>
   8f4bc:	303fe91e 	bne	r6,zero,8f464 <memcmp+0x14>
   8f4c0:	003ff506 	br	8f498 <memcmp+0x48>
   8f4c4:	10c5c83a 	sub	r2,r2,r3
   8f4c8:	f800283a 	ret

0008f4cc <_putc_r>:
   8f4cc:	defffc04 	addi	sp,sp,-16
   8f4d0:	dc000215 	stw	r16,8(sp)
   8f4d4:	dfc00315 	stw	ra,12(sp)
   8f4d8:	2021883a 	mov	r16,r4
   8f4dc:	20000226 	beq	r4,zero,8f4e8 <_putc_r+0x1c>
   8f4e0:	20800e17 	ldw	r2,56(r4)
   8f4e4:	10001b26 	beq	r2,zero,8f554 <_putc_r+0x88>
   8f4e8:	30800217 	ldw	r2,8(r6)
   8f4ec:	10bfffc4 	addi	r2,r2,-1
   8f4f0:	30800215 	stw	r2,8(r6)
   8f4f4:	10000a16 	blt	r2,zero,8f520 <_putc_r+0x54>
   8f4f8:	30800017 	ldw	r2,0(r6)
   8f4fc:	11400005 	stb	r5,0(r2)
   8f500:	30800017 	ldw	r2,0(r6)
   8f504:	10c00044 	addi	r3,r2,1
   8f508:	30c00015 	stw	r3,0(r6)
   8f50c:	10800003 	ldbu	r2,0(r2)
   8f510:	dfc00317 	ldw	ra,12(sp)
   8f514:	dc000217 	ldw	r16,8(sp)
   8f518:	dec00404 	addi	sp,sp,16
   8f51c:	f800283a 	ret
   8f520:	30c00617 	ldw	r3,24(r6)
   8f524:	10c00616 	blt	r2,r3,8f540 <_putc_r+0x74>
   8f528:	30800017 	ldw	r2,0(r6)
   8f52c:	00c00284 	movi	r3,10
   8f530:	11400005 	stb	r5,0(r2)
   8f534:	30800017 	ldw	r2,0(r6)
   8f538:	11400003 	ldbu	r5,0(r2)
   8f53c:	28fff11e 	bne	r5,r3,8f504 <_putc_r+0x38>
   8f540:	8009883a 	mov	r4,r16
   8f544:	dfc00317 	ldw	ra,12(sp)
   8f548:	dc000217 	ldw	r16,8(sp)
   8f54c:	dec00404 	addi	sp,sp,16
   8f550:	00895841 	jmpi	89584 <__swbuf_r>
   8f554:	d9400015 	stw	r5,0(sp)
   8f558:	d9800115 	stw	r6,4(sp)
   8f55c:	00846540 	call	84654 <__sinit>
   8f560:	d9800117 	ldw	r6,4(sp)
   8f564:	d9400017 	ldw	r5,0(sp)
   8f568:	003fdf06 	br	8f4e8 <_putc_r+0x1c>

0008f56c <putc>:
   8f56c:	00800274 	movhi	r2,9
   8f570:	defffc04 	addi	sp,sp,-16
   8f574:	1085b604 	addi	r2,r2,5848
   8f578:	dc000115 	stw	r16,4(sp)
   8f57c:	14000017 	ldw	r16,0(r2)
   8f580:	dc400215 	stw	r17,8(sp)
   8f584:	dfc00315 	stw	ra,12(sp)
   8f588:	2023883a 	mov	r17,r4
   8f58c:	80000226 	beq	r16,zero,8f598 <putc+0x2c>
   8f590:	80800e17 	ldw	r2,56(r16)
   8f594:	10001a26 	beq	r2,zero,8f600 <putc+0x94>
   8f598:	28800217 	ldw	r2,8(r5)
   8f59c:	10bfffc4 	addi	r2,r2,-1
   8f5a0:	28800215 	stw	r2,8(r5)
   8f5a4:	10000b16 	blt	r2,zero,8f5d4 <putc+0x68>
   8f5a8:	28800017 	ldw	r2,0(r5)
   8f5ac:	14400005 	stb	r17,0(r2)
   8f5b0:	28800017 	ldw	r2,0(r5)
   8f5b4:	10c00044 	addi	r3,r2,1
   8f5b8:	28c00015 	stw	r3,0(r5)
   8f5bc:	10800003 	ldbu	r2,0(r2)
   8f5c0:	dfc00317 	ldw	ra,12(sp)
   8f5c4:	dc400217 	ldw	r17,8(sp)
   8f5c8:	dc000117 	ldw	r16,4(sp)
   8f5cc:	dec00404 	addi	sp,sp,16
   8f5d0:	f800283a 	ret
   8f5d4:	28c00617 	ldw	r3,24(r5)
   8f5d8:	10c00e16 	blt	r2,r3,8f614 <putc+0xa8>
   8f5dc:	28800017 	ldw	r2,0(r5)
   8f5e0:	01000284 	movi	r4,10
   8f5e4:	14400005 	stb	r17,0(r2)
   8f5e8:	28800017 	ldw	r2,0(r5)
   8f5ec:	10c00003 	ldbu	r3,0(r2)
   8f5f0:	193ff01e 	bne	r3,r4,8f5b4 <putc+0x48>
   8f5f4:	280d883a 	mov	r6,r5
   8f5f8:	180b883a 	mov	r5,r3
   8f5fc:	00000706 	br	8f61c <putc+0xb0>
   8f600:	8009883a 	mov	r4,r16
   8f604:	d9400015 	stw	r5,0(sp)
   8f608:	00846540 	call	84654 <__sinit>
   8f60c:	d9400017 	ldw	r5,0(sp)
   8f610:	003fe106 	br	8f598 <putc+0x2c>
   8f614:	280d883a 	mov	r6,r5
   8f618:	880b883a 	mov	r5,r17
   8f61c:	8009883a 	mov	r4,r16
   8f620:	dfc00317 	ldw	ra,12(sp)
   8f624:	dc400217 	ldw	r17,8(sp)
   8f628:	dc000117 	ldw	r16,4(sp)
   8f62c:	dec00404 	addi	sp,sp,16
   8f630:	00895841 	jmpi	89584 <__swbuf_r>

0008f634 <__register_exitproc>:
   8f634:	defffa04 	addi	sp,sp,-24
   8f638:	dc000315 	stw	r16,12(sp)
   8f63c:	04000274 	movhi	r16,9
   8f640:	8405b504 	addi	r16,r16,5844
   8f644:	80c00017 	ldw	r3,0(r16)
   8f648:	dc400415 	stw	r17,16(sp)
   8f64c:	dfc00515 	stw	ra,20(sp)
   8f650:	18805217 	ldw	r2,328(r3)
   8f654:	2023883a 	mov	r17,r4
   8f658:	10003726 	beq	r2,zero,8f738 <__register_exitproc+0x104>
   8f65c:	10c00117 	ldw	r3,4(r2)
   8f660:	010007c4 	movi	r4,31
   8f664:	20c00e16 	blt	r4,r3,8f6a0 <__register_exitproc+0x6c>
   8f668:	1a000044 	addi	r8,r3,1
   8f66c:	8800221e 	bne	r17,zero,8f6f8 <__register_exitproc+0xc4>
   8f670:	18c00084 	addi	r3,r3,2
   8f674:	18c7883a 	add	r3,r3,r3
   8f678:	18c7883a 	add	r3,r3,r3
   8f67c:	12000115 	stw	r8,4(r2)
   8f680:	10c7883a 	add	r3,r2,r3
   8f684:	19400015 	stw	r5,0(r3)
   8f688:	0005883a 	mov	r2,zero
   8f68c:	dfc00517 	ldw	ra,20(sp)
   8f690:	dc400417 	ldw	r17,16(sp)
   8f694:	dc000317 	ldw	r16,12(sp)
   8f698:	dec00604 	addi	sp,sp,24
   8f69c:	f800283a 	ret
   8f6a0:	00800034 	movhi	r2,0
   8f6a4:	10800004 	addi	r2,r2,0
   8f6a8:	10002626 	beq	r2,zero,8f744 <__register_exitproc+0x110>
   8f6ac:	01006404 	movi	r4,400
   8f6b0:	d9400015 	stw	r5,0(sp)
   8f6b4:	d9800115 	stw	r6,4(sp)
   8f6b8:	d9c00215 	stw	r7,8(sp)
   8f6bc:	00000000 	call	0 <__alt_mem_mm-0x80000>
   8f6c0:	d9400017 	ldw	r5,0(sp)
   8f6c4:	d9800117 	ldw	r6,4(sp)
   8f6c8:	d9c00217 	ldw	r7,8(sp)
   8f6cc:	10001d26 	beq	r2,zero,8f744 <__register_exitproc+0x110>
   8f6d0:	81000017 	ldw	r4,0(r16)
   8f6d4:	10000115 	stw	zero,4(r2)
   8f6d8:	02000044 	movi	r8,1
   8f6dc:	22405217 	ldw	r9,328(r4)
   8f6e0:	0007883a 	mov	r3,zero
   8f6e4:	12400015 	stw	r9,0(r2)
   8f6e8:	20805215 	stw	r2,328(r4)
   8f6ec:	10006215 	stw	zero,392(r2)
   8f6f0:	10006315 	stw	zero,396(r2)
   8f6f4:	883fde26 	beq	r17,zero,8f670 <__register_exitproc+0x3c>
   8f6f8:	18c9883a 	add	r4,r3,r3
   8f6fc:	2109883a 	add	r4,r4,r4
   8f700:	1109883a 	add	r4,r2,r4
   8f704:	21802215 	stw	r6,136(r4)
   8f708:	01800044 	movi	r6,1
   8f70c:	12406217 	ldw	r9,392(r2)
   8f710:	30cc983a 	sll	r6,r6,r3
   8f714:	4992b03a 	or	r9,r9,r6
   8f718:	12406215 	stw	r9,392(r2)
   8f71c:	21c04215 	stw	r7,264(r4)
   8f720:	01000084 	movi	r4,2
   8f724:	893fd21e 	bne	r17,r4,8f670 <__register_exitproc+0x3c>
   8f728:	11006317 	ldw	r4,396(r2)
   8f72c:	218cb03a 	or	r6,r4,r6
   8f730:	11806315 	stw	r6,396(r2)
   8f734:	003fce06 	br	8f670 <__register_exitproc+0x3c>
   8f738:	18805304 	addi	r2,r3,332
   8f73c:	18805215 	stw	r2,328(r3)
   8f740:	003fc606 	br	8f65c <__register_exitproc+0x28>
   8f744:	00bfffc4 	movi	r2,-1
   8f748:	003fd006 	br	8f68c <__register_exitproc+0x58>

0008f74c <__call_exitprocs>:
   8f74c:	defff504 	addi	sp,sp,-44
   8f750:	df000915 	stw	fp,36(sp)
   8f754:	dd400615 	stw	r21,24(sp)
   8f758:	dc800315 	stw	r18,12(sp)
   8f75c:	dfc00a15 	stw	ra,40(sp)
   8f760:	ddc00815 	stw	r23,32(sp)
   8f764:	dd800715 	stw	r22,28(sp)
   8f768:	dd000515 	stw	r20,20(sp)
   8f76c:	dcc00415 	stw	r19,16(sp)
   8f770:	dc400215 	stw	r17,8(sp)
   8f774:	dc000115 	stw	r16,4(sp)
   8f778:	d9000015 	stw	r4,0(sp)
   8f77c:	2839883a 	mov	fp,r5
   8f780:	04800044 	movi	r18,1
   8f784:	057fffc4 	movi	r21,-1
   8f788:	00800274 	movhi	r2,9
   8f78c:	1085b504 	addi	r2,r2,5844
   8f790:	12000017 	ldw	r8,0(r2)
   8f794:	45005217 	ldw	r20,328(r8)
   8f798:	44c05204 	addi	r19,r8,328
   8f79c:	a0001c26 	beq	r20,zero,8f810 <__call_exitprocs+0xc4>
   8f7a0:	a0800117 	ldw	r2,4(r20)
   8f7a4:	15ffffc4 	addi	r23,r2,-1
   8f7a8:	b8000d16 	blt	r23,zero,8f7e0 <__call_exitprocs+0x94>
   8f7ac:	14000044 	addi	r16,r2,1
   8f7b0:	8421883a 	add	r16,r16,r16
   8f7b4:	8421883a 	add	r16,r16,r16
   8f7b8:	84402004 	addi	r17,r16,128
   8f7bc:	a463883a 	add	r17,r20,r17
   8f7c0:	a421883a 	add	r16,r20,r16
   8f7c4:	e0001e26 	beq	fp,zero,8f840 <__call_exitprocs+0xf4>
   8f7c8:	80804017 	ldw	r2,256(r16)
   8f7cc:	e0801c26 	beq	fp,r2,8f840 <__call_exitprocs+0xf4>
   8f7d0:	bdffffc4 	addi	r23,r23,-1
   8f7d4:	843fff04 	addi	r16,r16,-4
   8f7d8:	8c7fff04 	addi	r17,r17,-4
   8f7dc:	bd7ff91e 	bne	r23,r21,8f7c4 <__call_exitprocs+0x78>
   8f7e0:	00800034 	movhi	r2,0
   8f7e4:	10800004 	addi	r2,r2,0
   8f7e8:	10000926 	beq	r2,zero,8f810 <__call_exitprocs+0xc4>
   8f7ec:	a0800117 	ldw	r2,4(r20)
   8f7f0:	1000301e 	bne	r2,zero,8f8b4 <__call_exitprocs+0x168>
   8f7f4:	a0800017 	ldw	r2,0(r20)
   8f7f8:	10003226 	beq	r2,zero,8f8c4 <__call_exitprocs+0x178>
   8f7fc:	a009883a 	mov	r4,r20
   8f800:	98800015 	stw	r2,0(r19)
   8f804:	00000000 	call	0 <__alt_mem_mm-0x80000>
   8f808:	9d000017 	ldw	r20,0(r19)
   8f80c:	a03fe41e 	bne	r20,zero,8f7a0 <__call_exitprocs+0x54>
   8f810:	dfc00a17 	ldw	ra,40(sp)
   8f814:	df000917 	ldw	fp,36(sp)
   8f818:	ddc00817 	ldw	r23,32(sp)
   8f81c:	dd800717 	ldw	r22,28(sp)
   8f820:	dd400617 	ldw	r21,24(sp)
   8f824:	dd000517 	ldw	r20,20(sp)
   8f828:	dcc00417 	ldw	r19,16(sp)
   8f82c:	dc800317 	ldw	r18,12(sp)
   8f830:	dc400217 	ldw	r17,8(sp)
   8f834:	dc000117 	ldw	r16,4(sp)
   8f838:	dec00b04 	addi	sp,sp,44
   8f83c:	f800283a 	ret
   8f840:	a0800117 	ldw	r2,4(r20)
   8f844:	80c00017 	ldw	r3,0(r16)
   8f848:	10bfffc4 	addi	r2,r2,-1
   8f84c:	15c01426 	beq	r2,r23,8f8a0 <__call_exitprocs+0x154>
   8f850:	80000015 	stw	zero,0(r16)
   8f854:	183fde26 	beq	r3,zero,8f7d0 <__call_exitprocs+0x84>
   8f858:	95c8983a 	sll	r4,r18,r23
   8f85c:	a0806217 	ldw	r2,392(r20)
   8f860:	a5800117 	ldw	r22,4(r20)
   8f864:	2084703a 	and	r2,r4,r2
   8f868:	10000b26 	beq	r2,zero,8f898 <__call_exitprocs+0x14c>
   8f86c:	a0806317 	ldw	r2,396(r20)
   8f870:	2088703a 	and	r4,r4,r2
   8f874:	20000c1e 	bne	r4,zero,8f8a8 <__call_exitprocs+0x15c>
   8f878:	89400017 	ldw	r5,0(r17)
   8f87c:	d9000017 	ldw	r4,0(sp)
   8f880:	183ee83a 	callr	r3
   8f884:	a0800117 	ldw	r2,4(r20)
   8f888:	15bfbf1e 	bne	r2,r22,8f788 <__call_exitprocs+0x3c>
   8f88c:	98800017 	ldw	r2,0(r19)
   8f890:	153fcf26 	beq	r2,r20,8f7d0 <__call_exitprocs+0x84>
   8f894:	003fbc06 	br	8f788 <__call_exitprocs+0x3c>
   8f898:	183ee83a 	callr	r3
   8f89c:	003ff906 	br	8f884 <__call_exitprocs+0x138>
   8f8a0:	a5c00115 	stw	r23,4(r20)
   8f8a4:	003feb06 	br	8f854 <__call_exitprocs+0x108>
   8f8a8:	89000017 	ldw	r4,0(r17)
   8f8ac:	183ee83a 	callr	r3
   8f8b0:	003ff406 	br	8f884 <__call_exitprocs+0x138>
   8f8b4:	a0800017 	ldw	r2,0(r20)
   8f8b8:	a027883a 	mov	r19,r20
   8f8bc:	1029883a 	mov	r20,r2
   8f8c0:	003fb606 	br	8f79c <__call_exitprocs+0x50>
   8f8c4:	0005883a 	mov	r2,zero
   8f8c8:	003ffb06 	br	8f8b8 <__call_exitprocs+0x16c>

0008f8cc <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   8f8cc:	defffd04 	addi	sp,sp,-12
   8f8d0:	df000215 	stw	fp,8(sp)
   8f8d4:	df000204 	addi	fp,sp,8
   8f8d8:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   8f8dc:	0001883a 	nop
   8f8e0:	e0bfff17 	ldw	r2,-4(fp)
   8f8e4:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   8f8e8:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   8f8ec:	10000226 	beq	r2,zero,8f8f8 <_exit+0x2c>
    ALT_SIM_FAIL();
   8f8f0:	002af070 	cmpltui	zero,zero,43969
   8f8f4:	00000106 	br	8f8fc <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   8f8f8:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   8f8fc:	003fff06 	br	8f8fc <_exit+0x30>
