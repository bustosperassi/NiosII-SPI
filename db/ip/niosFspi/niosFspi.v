// niosFspi.v

// Generated using ACDS version 16.0 211

`timescale 1 ps / 1 ps
module niosFspi (
		input  wire  clk_clk,       //     clk.clk
		input  wire  reset_reset_n, //   reset.reset_n
		input  wire  spi_out_MISO,  // spi_out.MISO
		output wire  spi_out_MOSI,  //        .MOSI
		output wire  spi_out_SCLK,  //        .SCLK
		output wire  spi_out_SS_n   //        .SS_n
	);

	wire  [31:0] nios2fast_data_master_readdata;                            // mm_interconnect_0:nios2fast_data_master_readdata -> nios2fast:d_readdata
	wire         nios2fast_data_master_waitrequest;                         // mm_interconnect_0:nios2fast_data_master_waitrequest -> nios2fast:d_waitrequest
	wire         nios2fast_data_master_debugaccess;                         // nios2fast:debug_mem_slave_debugaccess_to_roms -> mm_interconnect_0:nios2fast_data_master_debugaccess
	wire  [20:0] nios2fast_data_master_address;                             // nios2fast:d_address -> mm_interconnect_0:nios2fast_data_master_address
	wire   [3:0] nios2fast_data_master_byteenable;                          // nios2fast:d_byteenable -> mm_interconnect_0:nios2fast_data_master_byteenable
	wire         nios2fast_data_master_read;                                // nios2fast:d_read -> mm_interconnect_0:nios2fast_data_master_read
	wire         nios2fast_data_master_write;                               // nios2fast:d_write -> mm_interconnect_0:nios2fast_data_master_write
	wire  [31:0] nios2fast_data_master_writedata;                           // nios2fast:d_writedata -> mm_interconnect_0:nios2fast_data_master_writedata
	wire  [31:0] nios2fast_instruction_master_readdata;                     // mm_interconnect_0:nios2fast_instruction_master_readdata -> nios2fast:i_readdata
	wire         nios2fast_instruction_master_waitrequest;                  // mm_interconnect_0:nios2fast_instruction_master_waitrequest -> nios2fast:i_waitrequest
	wire  [20:0] nios2fast_instruction_master_address;                      // nios2fast:i_address -> mm_interconnect_0:nios2fast_instruction_master_address
	wire         nios2fast_instruction_master_read;                         // nios2fast:i_read -> mm_interconnect_0:nios2fast_instruction_master_read
	wire         nios2fast_instruction_master_readdatavalid;                // mm_interconnect_0:nios2fast_instruction_master_readdatavalid -> nios2fast:i_readdatavalid
	wire         mm_interconnect_0_jtag_uart_avalon_jtag_slave_chipselect;  // mm_interconnect_0:jtag_uart_avalon_jtag_slave_chipselect -> jtag_uart:av_chipselect
	wire  [31:0] mm_interconnect_0_jtag_uart_avalon_jtag_slave_readdata;    // jtag_uart:av_readdata -> mm_interconnect_0:jtag_uart_avalon_jtag_slave_readdata
	wire         mm_interconnect_0_jtag_uart_avalon_jtag_slave_waitrequest; // jtag_uart:av_waitrequest -> mm_interconnect_0:jtag_uart_avalon_jtag_slave_waitrequest
	wire   [0:0] mm_interconnect_0_jtag_uart_avalon_jtag_slave_address;     // mm_interconnect_0:jtag_uart_avalon_jtag_slave_address -> jtag_uart:av_address
	wire         mm_interconnect_0_jtag_uart_avalon_jtag_slave_read;        // mm_interconnect_0:jtag_uart_avalon_jtag_slave_read -> jtag_uart:av_read_n
	wire         mm_interconnect_0_jtag_uart_avalon_jtag_slave_write;       // mm_interconnect_0:jtag_uart_avalon_jtag_slave_write -> jtag_uart:av_write_n
	wire  [31:0] mm_interconnect_0_jtag_uart_avalon_jtag_slave_writedata;   // mm_interconnect_0:jtag_uart_avalon_jtag_slave_writedata -> jtag_uart:av_writedata
	wire  [31:0] mm_interconnect_0_nios2fast_debug_mem_slave_readdata;      // nios2fast:debug_mem_slave_readdata -> mm_interconnect_0:nios2fast_debug_mem_slave_readdata
	wire         mm_interconnect_0_nios2fast_debug_mem_slave_waitrequest;   // nios2fast:debug_mem_slave_waitrequest -> mm_interconnect_0:nios2fast_debug_mem_slave_waitrequest
	wire         mm_interconnect_0_nios2fast_debug_mem_slave_debugaccess;   // mm_interconnect_0:nios2fast_debug_mem_slave_debugaccess -> nios2fast:debug_mem_slave_debugaccess
	wire   [8:0] mm_interconnect_0_nios2fast_debug_mem_slave_address;       // mm_interconnect_0:nios2fast_debug_mem_slave_address -> nios2fast:debug_mem_slave_address
	wire         mm_interconnect_0_nios2fast_debug_mem_slave_read;          // mm_interconnect_0:nios2fast_debug_mem_slave_read -> nios2fast:debug_mem_slave_read
	wire   [3:0] mm_interconnect_0_nios2fast_debug_mem_slave_byteenable;    // mm_interconnect_0:nios2fast_debug_mem_slave_byteenable -> nios2fast:debug_mem_slave_byteenable
	wire         mm_interconnect_0_nios2fast_debug_mem_slave_write;         // mm_interconnect_0:nios2fast_debug_mem_slave_write -> nios2fast:debug_mem_slave_write
	wire  [31:0] mm_interconnect_0_nios2fast_debug_mem_slave_writedata;     // mm_interconnect_0:nios2fast_debug_mem_slave_writedata -> nios2fast:debug_mem_slave_writedata
	wire         mm_interconnect_0_mm_s1_chipselect;                        // mm_interconnect_0:mm_s1_chipselect -> mm:chipselect
	wire  [31:0] mm_interconnect_0_mm_s1_readdata;                          // mm:readdata -> mm_interconnect_0:mm_s1_readdata
	wire  [16:0] mm_interconnect_0_mm_s1_address;                           // mm_interconnect_0:mm_s1_address -> mm:address
	wire   [3:0] mm_interconnect_0_mm_s1_byteenable;                        // mm_interconnect_0:mm_s1_byteenable -> mm:byteenable
	wire         mm_interconnect_0_mm_s1_write;                             // mm_interconnect_0:mm_s1_write -> mm:write
	wire  [31:0] mm_interconnect_0_mm_s1_writedata;                         // mm_interconnect_0:mm_s1_writedata -> mm:writedata
	wire         mm_interconnect_0_mm_s1_clken;                             // mm_interconnect_0:mm_s1_clken -> mm:clken
	wire         mm_interconnect_0_spi_spi_control_port_chipselect;         // mm_interconnect_0:spi_spi_control_port_chipselect -> spi:spi_select
	wire  [15:0] mm_interconnect_0_spi_spi_control_port_readdata;           // spi:data_to_cpu -> mm_interconnect_0:spi_spi_control_port_readdata
	wire   [2:0] mm_interconnect_0_spi_spi_control_port_address;            // mm_interconnect_0:spi_spi_control_port_address -> spi:mem_addr
	wire         mm_interconnect_0_spi_spi_control_port_read;               // mm_interconnect_0:spi_spi_control_port_read -> spi:read_n
	wire         mm_interconnect_0_spi_spi_control_port_write;              // mm_interconnect_0:spi_spi_control_port_write -> spi:write_n
	wire  [15:0] mm_interconnect_0_spi_spi_control_port_writedata;          // mm_interconnect_0:spi_spi_control_port_writedata -> spi:data_from_cpu
	wire         irq_mapper_receiver0_irq;                                  // jtag_uart:av_irq -> irq_mapper:receiver0_irq
	wire  [31:0] nios2fast_irq_irq;                                         // irq_mapper:sender_irq -> nios2fast:irq
	wire         rst_controller_reset_out_reset;                            // rst_controller:reset_out -> [irq_mapper:reset, jtag_uart:rst_n, mm:reset, mm_interconnect_0:nios2fast_reset_reset_bridge_in_reset_reset, nios2fast:reset_n, rst_translator:in_reset, spi:reset_n]
	wire         rst_controller_reset_out_reset_req;                        // rst_controller:reset_req -> [mm:reset_req, nios2fast:reset_req, rst_translator:reset_req_in]
	wire         nios2fast_debug_reset_request_reset;                       // nios2fast:debug_reset_request -> rst_controller:reset_in1

	niosFspi_jtag_uart jtag_uart (
		.clk            (clk_clk),                                                   //               clk.clk
		.rst_n          (~rst_controller_reset_out_reset),                           //             reset.reset_n
		.av_chipselect  (mm_interconnect_0_jtag_uart_avalon_jtag_slave_chipselect),  // avalon_jtag_slave.chipselect
		.av_address     (mm_interconnect_0_jtag_uart_avalon_jtag_slave_address),     //                  .address
		.av_read_n      (~mm_interconnect_0_jtag_uart_avalon_jtag_slave_read),       //                  .read_n
		.av_readdata    (mm_interconnect_0_jtag_uart_avalon_jtag_slave_readdata),    //                  .readdata
		.av_write_n     (~mm_interconnect_0_jtag_uart_avalon_jtag_slave_write),      //                  .write_n
		.av_writedata   (mm_interconnect_0_jtag_uart_avalon_jtag_slave_writedata),   //                  .writedata
		.av_waitrequest (mm_interconnect_0_jtag_uart_avalon_jtag_slave_waitrequest), //                  .waitrequest
		.av_irq         (irq_mapper_receiver0_irq)                                   //               irq.irq
	);

	niosFspi_mm mm (
		.clk        (clk_clk),                            //   clk1.clk
		.address    (mm_interconnect_0_mm_s1_address),    //     s1.address
		.clken      (mm_interconnect_0_mm_s1_clken),      //       .clken
		.chipselect (mm_interconnect_0_mm_s1_chipselect), //       .chipselect
		.write      (mm_interconnect_0_mm_s1_write),      //       .write
		.readdata   (mm_interconnect_0_mm_s1_readdata),   //       .readdata
		.writedata  (mm_interconnect_0_mm_s1_writedata),  //       .writedata
		.byteenable (mm_interconnect_0_mm_s1_byteenable), //       .byteenable
		.reset      (rst_controller_reset_out_reset),     // reset1.reset
		.reset_req  (rst_controller_reset_out_reset_req)  //       .reset_req
	);

	niosFspi_nios2fast nios2fast (
		.clk                                 (clk_clk),                                                 //                       clk.clk
		.reset_n                             (~rst_controller_reset_out_reset),                         //                     reset.reset_n
		.reset_req                           (rst_controller_reset_out_reset_req),                      //                          .reset_req
		.d_address                           (nios2fast_data_master_address),                           //               data_master.address
		.d_byteenable                        (nios2fast_data_master_byteenable),                        //                          .byteenable
		.d_read                              (nios2fast_data_master_read),                              //                          .read
		.d_readdata                          (nios2fast_data_master_readdata),                          //                          .readdata
		.d_waitrequest                       (nios2fast_data_master_waitrequest),                       //                          .waitrequest
		.d_write                             (nios2fast_data_master_write),                             //                          .write
		.d_writedata                         (nios2fast_data_master_writedata),                         //                          .writedata
		.debug_mem_slave_debugaccess_to_roms (nios2fast_data_master_debugaccess),                       //                          .debugaccess
		.i_address                           (nios2fast_instruction_master_address),                    //        instruction_master.address
		.i_read                              (nios2fast_instruction_master_read),                       //                          .read
		.i_readdata                          (nios2fast_instruction_master_readdata),                   //                          .readdata
		.i_waitrequest                       (nios2fast_instruction_master_waitrequest),                //                          .waitrequest
		.i_readdatavalid                     (nios2fast_instruction_master_readdatavalid),              //                          .readdatavalid
		.irq                                 (nios2fast_irq_irq),                                       //                       irq.irq
		.debug_reset_request                 (nios2fast_debug_reset_request_reset),                     //       debug_reset_request.reset
		.debug_mem_slave_address             (mm_interconnect_0_nios2fast_debug_mem_slave_address),     //           debug_mem_slave.address
		.debug_mem_slave_byteenable          (mm_interconnect_0_nios2fast_debug_mem_slave_byteenable),  //                          .byteenable
		.debug_mem_slave_debugaccess         (mm_interconnect_0_nios2fast_debug_mem_slave_debugaccess), //                          .debugaccess
		.debug_mem_slave_read                (mm_interconnect_0_nios2fast_debug_mem_slave_read),        //                          .read
		.debug_mem_slave_readdata            (mm_interconnect_0_nios2fast_debug_mem_slave_readdata),    //                          .readdata
		.debug_mem_slave_waitrequest         (mm_interconnect_0_nios2fast_debug_mem_slave_waitrequest), //                          .waitrequest
		.debug_mem_slave_write               (mm_interconnect_0_nios2fast_debug_mem_slave_write),       //                          .write
		.debug_mem_slave_writedata           (mm_interconnect_0_nios2fast_debug_mem_slave_writedata),   //                          .writedata
		.dummy_ci_port                       ()                                                         // custom_instruction_master.readra
	);

	niosFspi_spi spi (
		.clk           (clk_clk),                                           //              clk.clk
		.reset_n       (~rst_controller_reset_out_reset),                   //            reset.reset_n
		.data_from_cpu (mm_interconnect_0_spi_spi_control_port_writedata),  // spi_control_port.writedata
		.data_to_cpu   (mm_interconnect_0_spi_spi_control_port_readdata),   //                 .readdata
		.mem_addr      (mm_interconnect_0_spi_spi_control_port_address),    //                 .address
		.read_n        (~mm_interconnect_0_spi_spi_control_port_read),      //                 .read_n
		.spi_select    (mm_interconnect_0_spi_spi_control_port_chipselect), //                 .chipselect
		.write_n       (~mm_interconnect_0_spi_spi_control_port_write),     //                 .write_n
		.irq           (),                                                  //              irq.irq
		.MISO          (spi_out_MISO),                                      //         external.export
		.MOSI          (spi_out_MOSI),                                      //                 .export
		.SCLK          (spi_out_SCLK),                                      //                 .export
		.SS_n          (spi_out_SS_n)                                       //                 .export
	);

	niosFspi_mm_interconnect_0 mm_interconnect_0 (
		.sys_clock_clk_clk                           (clk_clk),                                                   //                         sys_clock_clk.clk
		.nios2fast_reset_reset_bridge_in_reset_reset (rst_controller_reset_out_reset),                            // nios2fast_reset_reset_bridge_in_reset.reset
		.nios2fast_data_master_address               (nios2fast_data_master_address),                             //                 nios2fast_data_master.address
		.nios2fast_data_master_waitrequest           (nios2fast_data_master_waitrequest),                         //                                      .waitrequest
		.nios2fast_data_master_byteenable            (nios2fast_data_master_byteenable),                          //                                      .byteenable
		.nios2fast_data_master_read                  (nios2fast_data_master_read),                                //                                      .read
		.nios2fast_data_master_readdata              (nios2fast_data_master_readdata),                            //                                      .readdata
		.nios2fast_data_master_write                 (nios2fast_data_master_write),                               //                                      .write
		.nios2fast_data_master_writedata             (nios2fast_data_master_writedata),                           //                                      .writedata
		.nios2fast_data_master_debugaccess           (nios2fast_data_master_debugaccess),                         //                                      .debugaccess
		.nios2fast_instruction_master_address        (nios2fast_instruction_master_address),                      //          nios2fast_instruction_master.address
		.nios2fast_instruction_master_waitrequest    (nios2fast_instruction_master_waitrequest),                  //                                      .waitrequest
		.nios2fast_instruction_master_read           (nios2fast_instruction_master_read),                         //                                      .read
		.nios2fast_instruction_master_readdata       (nios2fast_instruction_master_readdata),                     //                                      .readdata
		.nios2fast_instruction_master_readdatavalid  (nios2fast_instruction_master_readdatavalid),                //                                      .readdatavalid
		.jtag_uart_avalon_jtag_slave_address         (mm_interconnect_0_jtag_uart_avalon_jtag_slave_address),     //           jtag_uart_avalon_jtag_slave.address
		.jtag_uart_avalon_jtag_slave_write           (mm_interconnect_0_jtag_uart_avalon_jtag_slave_write),       //                                      .write
		.jtag_uart_avalon_jtag_slave_read            (mm_interconnect_0_jtag_uart_avalon_jtag_slave_read),        //                                      .read
		.jtag_uart_avalon_jtag_slave_readdata        (mm_interconnect_0_jtag_uart_avalon_jtag_slave_readdata),    //                                      .readdata
		.jtag_uart_avalon_jtag_slave_writedata       (mm_interconnect_0_jtag_uart_avalon_jtag_slave_writedata),   //                                      .writedata
		.jtag_uart_avalon_jtag_slave_waitrequest     (mm_interconnect_0_jtag_uart_avalon_jtag_slave_waitrequest), //                                      .waitrequest
		.jtag_uart_avalon_jtag_slave_chipselect      (mm_interconnect_0_jtag_uart_avalon_jtag_slave_chipselect),  //                                      .chipselect
		.mm_s1_address                               (mm_interconnect_0_mm_s1_address),                           //                                 mm_s1.address
		.mm_s1_write                                 (mm_interconnect_0_mm_s1_write),                             //                                      .write
		.mm_s1_readdata                              (mm_interconnect_0_mm_s1_readdata),                          //                                      .readdata
		.mm_s1_writedata                             (mm_interconnect_0_mm_s1_writedata),                         //                                      .writedata
		.mm_s1_byteenable                            (mm_interconnect_0_mm_s1_byteenable),                        //                                      .byteenable
		.mm_s1_chipselect                            (mm_interconnect_0_mm_s1_chipselect),                        //                                      .chipselect
		.mm_s1_clken                                 (mm_interconnect_0_mm_s1_clken),                             //                                      .clken
		.nios2fast_debug_mem_slave_address           (mm_interconnect_0_nios2fast_debug_mem_slave_address),       //             nios2fast_debug_mem_slave.address
		.nios2fast_debug_mem_slave_write             (mm_interconnect_0_nios2fast_debug_mem_slave_write),         //                                      .write
		.nios2fast_debug_mem_slave_read              (mm_interconnect_0_nios2fast_debug_mem_slave_read),          //                                      .read
		.nios2fast_debug_mem_slave_readdata          (mm_interconnect_0_nios2fast_debug_mem_slave_readdata),      //                                      .readdata
		.nios2fast_debug_mem_slave_writedata         (mm_interconnect_0_nios2fast_debug_mem_slave_writedata),     //                                      .writedata
		.nios2fast_debug_mem_slave_byteenable        (mm_interconnect_0_nios2fast_debug_mem_slave_byteenable),    //                                      .byteenable
		.nios2fast_debug_mem_slave_waitrequest       (mm_interconnect_0_nios2fast_debug_mem_slave_waitrequest),   //                                      .waitrequest
		.nios2fast_debug_mem_slave_debugaccess       (mm_interconnect_0_nios2fast_debug_mem_slave_debugaccess),   //                                      .debugaccess
		.spi_spi_control_port_address                (mm_interconnect_0_spi_spi_control_port_address),            //                  spi_spi_control_port.address
		.spi_spi_control_port_write                  (mm_interconnect_0_spi_spi_control_port_write),              //                                      .write
		.spi_spi_control_port_read                   (mm_interconnect_0_spi_spi_control_port_read),               //                                      .read
		.spi_spi_control_port_readdata               (mm_interconnect_0_spi_spi_control_port_readdata),           //                                      .readdata
		.spi_spi_control_port_writedata              (mm_interconnect_0_spi_spi_control_port_writedata),          //                                      .writedata
		.spi_spi_control_port_chipselect             (mm_interconnect_0_spi_spi_control_port_chipselect)          //                                      .chipselect
	);

	niosFspi_irq_mapper irq_mapper (
		.clk           (clk_clk),                        //       clk.clk
		.reset         (rst_controller_reset_out_reset), // clk_reset.reset
		.receiver0_irq (irq_mapper_receiver0_irq),       // receiver0.irq
		.sender_irq    (nios2fast_irq_irq)               //    sender.irq
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (2),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (1),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (~reset_reset_n),                      // reset_in0.reset
		.reset_in1      (nios2fast_debug_reset_request_reset), // reset_in1.reset
		.clk            (clk_clk),                             //       clk.clk
		.reset_out      (rst_controller_reset_out_reset),      // reset_out.reset
		.reset_req      (rst_controller_reset_out_reset_req),  //          .reset_req
		.reset_req_in0  (1'b0),                                // (terminated)
		.reset_req_in1  (1'b0),                                // (terminated)
		.reset_in2      (1'b0),                                // (terminated)
		.reset_req_in2  (1'b0),                                // (terminated)
		.reset_in3      (1'b0),                                // (terminated)
		.reset_req_in3  (1'b0),                                // (terminated)
		.reset_in4      (1'b0),                                // (terminated)
		.reset_req_in4  (1'b0),                                // (terminated)
		.reset_in5      (1'b0),                                // (terminated)
		.reset_req_in5  (1'b0),                                // (terminated)
		.reset_in6      (1'b0),                                // (terminated)
		.reset_req_in6  (1'b0),                                // (terminated)
		.reset_in7      (1'b0),                                // (terminated)
		.reset_req_in7  (1'b0),                                // (terminated)
		.reset_in8      (1'b0),                                // (terminated)
		.reset_req_in8  (1'b0),                                // (terminated)
		.reset_in9      (1'b0),                                // (terminated)
		.reset_req_in9  (1'b0),                                // (terminated)
		.reset_in10     (1'b0),                                // (terminated)
		.reset_req_in10 (1'b0),                                // (terminated)
		.reset_in11     (1'b0),                                // (terminated)
		.reset_req_in11 (1'b0),                                // (terminated)
		.reset_in12     (1'b0),                                // (terminated)
		.reset_req_in12 (1'b0),                                // (terminated)
		.reset_in13     (1'b0),                                // (terminated)
		.reset_req_in13 (1'b0),                                // (terminated)
		.reset_in14     (1'b0),                                // (terminated)
		.reset_req_in14 (1'b0),                                // (terminated)
		.reset_in15     (1'b0),                                // (terminated)
		.reset_req_in15 (1'b0)                                 // (terminated)
	);

endmodule
